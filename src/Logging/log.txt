Compiled package: StackableObjects
Compiled package: WeightedObjects

Compiling QueryCond:
Queries: [isLocated(treasure,player,0)]

Compile Room:
ID: RUINSENTRANCE
N: COLUMNS
NCONDS: []
NQUERY: null
NHIDDEN: false
NBLOCKMESSAGE: null
S: CIVILISATION
SCONDS: []
SQUERY: Query: [isLocated(treasure,player,0)]
SHIDDEN: false
SBLOCKMESSAGE: This is the direction you came into the ruins from.

You don't want to return to civilisation without claiming the ancient treasure you came for!
E: null
ECONDS: null
EQUERY: null
EHIDDEN: false
EBLOCKMESSAGE: null
W: ROCKYTUNNEL
WCONDS: []
WQUERY: null
WHIDDEN: false
WBLOCKMESSAGE: null
U: null
UCONDS: null
UQUERY: null
UHIDDEN: false
UBLOCKMESSAGE: null
D: null
DCONDS: null
DQUERY: null
DHIDDEN: false
DBLOCKMESSAGE: null
NAME: Ruin's Entrance
DESC: You find yourself in a spacious cavern, the light from the excavated opening behind you streaming into the network
of caves to your left, and illuminating the ornate, ancient marble structures that extend into the far reaches
of the cavern before of you.

Directly ahead of you are some crumbling stairs that lead to the remains of a long-abandoned temple with marble columns
reaching to the roof of the cavern.
SYNS: []
DET: the
INFO: New Room: SimpleEngine.GameRoom@a37aefe

Compile Room:
ID: CIVILISATION
N: RUINSENTRANCE
NCONDS: []
NQUERY: null
NHIDDEN: false
NBLOCKMESSAGE: null
S: null
SCONDS: null
SQUERY: null
SHIDDEN: false
SBLOCKMESSAGE: null
E: null
ECONDS: null
EQUERY: null
EHIDDEN: false
EBLOCKMESSAGE: null
W: null
WCONDS: null
WQUERY: null
WHIDDEN: false
WBLOCKMESSAGE: null
U: null
UCONDS: null
UQUERY: null
UHIDDEN: false
UBLOCKMESSAGE: null
D: null
DCONDS: null
DQUERY: null
DHIDDEN: false
DBLOCKMESSAGE: null
NAME: Civilisation
DESC: The outside world as you know it.

As the result of a recent archaeological study, a hole was blasted into the rock face in the desert cliffs, revealing
a sprawling network of ancient underground caverns thought to be teeming with the treasure of a lost civilisation.
SYNS: []
DET: 
INFO: New Room: SimpleEngine.GameRoom@26df6e3a

Compile Room:
ID: COLUMNS
N: ALTARROOM
NCONDS: []
NQUERY: null
NHIDDEN: false
NBLOCKMESSAGE: null
S: RUINSENTRANCE
SCONDS: []
SQUERY: null
SHIDDEN: false
SBLOCKMESSAGE: null
E: STORAGEROOM
ECONDS: []
EQUERY: null
EHIDDEN: false
EBLOCKMESSAGE: null
W: EASTRIVER
WCONDS: []
WQUERY: null
WHIDDEN: false
WBLOCKMESSAGE: null
U: null
UCONDS: null
UQUERY: null
UHIDDEN: false
UBLOCKMESSAGE: null
D: null
DCONDS: null
DQUERY: null
DHIDDEN: false
DBLOCKMESSAGE: null
NAME: Marble Column-way
DESC: The ornate pathway up to the altar ahead of you is lined with tall marble columns, reaching up to the cavern's roof.

Many of these columns have cracked and crumbled over time, resulting in piles of rubble and broken marble littering the
floor around you.

There are a couple of rooms off to the side behind the columns, carved out into the walls of rock.
SYNS: []
DET: the
INFO: New Room: SimpleEngine.GameRoom@4a3631f8

Compile Object:
ID: SMALLBLOCK
LOCATION: COLUMNS
LOCATION TYPE: 0
NAME: small block
DESC: It's a small marble block. It looks as if it fallen from one of the ruined columns.

The block is still sturdy, perhaps it could be stacked up on something to climb somewhere unreachable...
SYNS: ["little block", "block", "small", "broken column", "little marble block", "smallest block", "small marble block"]
FLAGS: [_TAKEABLE, _STABLE]
VALUES: 
	volume:25
	surface:25
	weight:25
DET: null
USE ARE: false
INFO: New Object: SimpleEngine.GameObject@46271dd6

Compiling QueryCond:
Queries: [weightOnObjectAtLeast(pressureplate1,50), weightOnObjectAtLeast(pressureplate2,50)]

Compiling QueryCond:
Queries: [weightOnObjectAtLeast(pressureplate1,50), weightOnObjectAtLeast(pressureplate2,50)]

Compile Room:
ID: ALTARROOM
N: null
NCONDS: null
NQUERY: null
NHIDDEN: false
NBLOCKMESSAGE: null
S: COLUMNS
SCONDS: []
SQUERY: null
SHIDDEN: false
SBLOCKMESSAGE: null
E: null
ECONDS: null
EQUERY: null
EHIDDEN: false
EBLOCKMESSAGE: null
W: WATERFALLCAVERN
WCONDS: []
WQUERY: null
WHIDDEN: false
WBLOCKMESSAGE: null
U: null
UCONDS: null
UQUERY: null
UHIDDEN: false
UBLOCKMESSAGE: null
D: TREASUREROOM
DCONDS: []
DQUERY: Query: [weightOnObjectAtLeast(pressureplate1,50), weightOnObjectAtLeast(pressureplate2,50)]
DHIDDEN: true
DBLOCKMESSAGE: You cannot move down.
NAME: Grand Altar
DESC: Having reached the far end of the temple, the rising columns either side of you give way to an open room with
an ornate marble altar at its centre. The faint light streaming into the cavern is reflected off the gold strips that
line the altar.

There are two pressure plates in front of the altar and they seem connected to it somehow. Perhaps the mysteries of
the temple will be uncovered if both plates could be activated at once...
ALTDESC: With both pressure plates being held down by heavy objects, the grand altar that once stood in the centre
of the room has retreated into the floor, revealing a narrow stairway to a hidden room below you.

A faint golden light emanates from the stairway. Just what could be hidden down there?
ALTDESCCONDS: null
ALTDESCQUERY: Query: [weightOnObjectAtLeast(pressureplate1,50), weightOnObjectAtLeast(pressureplate2,50)]
SYNS: []
DET: null
INFO: New Room: SimpleEngine.GameRoom@662706a7

Compiling QueryCond:
Queries: [weightOnObjectAtLeast(pressureplate1,50), weightOnObjectAtLeast(pressureplate2,50)]

Compile Object:
ID: ALTAR
LOCATION: ALTARROOM
LOCATION TYPE: 0
NAME: altar
DESC: A grand marble altar rising from the centre of the room. Many ceremonies will have been performed here in ages past.

The altar seems to be hiding a secret. Perhaps activating the pressure plates will reveal it...
ALTDESC: The altar is no longer visible as it has retreated into the ground and in its place is a stairway.
ALTDESCCONDS: null
ALTDESCQUERY: Query: [weightOnObjectAtLeast(pressureplate1,50), weightOnObjectAtLeast(pressureplate2,50)]
SYNS: []
FLAGS: [_STABLE]
VALUES: 
	surface:50
DET: null
USE ARE: false
INFO: New Object: SimpleEngine.GameObject@45a4b042

Compiling QueryCond:
Queries: [weightOnObjectAtLeast(pressureplate1,50)]

Compile Object:
ID: PRESSUREPLATE1
LOCATION: ALTARROOM
LOCATION TYPE: 0
NAME: left pressure plate
DESC: A pressure plate found in front of the altar. It's the one on the left.

It seems to be connected to the altar. It currently isn't activated as there's nothing heavy enough on top of it.
If something heavy is placed on top of it, then it may do something...
ALTDESC: A pressure plate found in front of the altar. It's the one on the left.

It has clicked into the ground as the object on top of it is heavy enough to hold it down and activate it.
ALTDESCCONDS: null
ALTDESCQUERY: Query: [weightOnObjectAtLeast(pressureplate1,50)]
SYNS: ["first plate", "first pressure plate", "pressure plate", "left plate", "plate", "plate 1"]
FLAGS: []
VALUES: 
	surface:50
DET: null
USE ARE: false
INFO: New Object: SimpleEngine.GameObject@16b2bb0c

Compiling QueryCond:
Queries: [weightOnObjectAtLeast(pressureplate2,50)]

Compile Object:
ID: PRESSUREPLATE2
LOCATION: ALTARROOM
LOCATION TYPE: 0
NAME: right pressure plate
DESC: A pressure plate found in front of the altar. It's the one on the right.

It seems to be connected to the altar. It currently isn't activated as there's nothing heavy enough on top of it.
If something heavy is placed on top of it, then it may do something...
ALTDESC: A pressure plate found in front of the altar. It's the one on the right.

It has clicked into the ground as the object on top of it is heavy enough to hold it down and activate it.
ALTDESCCONDS: null
ALTDESCQUERY: Query: [weightOnObjectAtLeast(pressureplate2,50)]
SYNS: ["right plate", "second plate", "pressure plate", "plate", "plate 2", "other plate", "second pressure plate"]
FLAGS: []
VALUES: 
	surface:50
DET: null
USE ARE: false
INFO: New Object: SimpleEngine.GameObject@327af41b

Compiling QueryCond:
Queries: [selfWeight(watercontainer1,50)]

Compile Object:
ID: WATERCONTAINER1
LOCATION: PRESSUREPLATE1
LOCATION TYPE: 1
NAME: clay pot
DESC: It's an old clay pot that was found holding down a pressure plate in front of the altar.

The water has been poured out, making it too light to activate the plate. It would be heavy enough again if
filled back up with water.
ALTDESC: It's an old clay pot that was found holding down a pressure plate.

It's filled to the brim with water! It's heavy enough to hold down the pressure plate.
ALTDESCCONDS: null
ALTDESCQUERY: Query: [selfWeight(watercontainer1,50)]
SYNS: ["container", "clay container", "pot"]
FLAGS: [_TAKEABLE]
VALUES: 
	volume:25
	weight:50
	capacity:25
DET: null
USE ARE: false
INFO: New Object: SimpleEngine.GameObject@6cb6decd

Compiling PRSACond:
VERBS: [POUR, SPILL, EMPTY, DROP]

Compiling QueryCond:
Queries: [selfWeight(watercontainer1,50)]

Compiling Conditions:
TEST: Query: [selfWeight(watercontainer1,50)]
TES IS NOT: false
CONTINUATION: null
IsAND: true
IsOR: false
INFO: New Conditions: SimpleEngine.Actions.Condition@6aa61224

Compiling Conditions:
TEST: PRSA: [POUR, SPILL, EMPTY, DROP]
TES IS NOT: false
CONTINUATION: SimpleEngine.Actions.Condition@6aa61224
IsAND: true
IsOR: false
INFO: New Conditions: SimpleEngine.Actions.Condition@30bce90b

Compiling SetVarEff:
ID: WATERCONTAINER1
VARIABLE: weight
VALUE: 10

Compiling TellEff:
TEXT: The clay pot was emptied of all of its water.

Compiling Conditional:
CONDITION: SimpleEngine.Actions.Condition@30bce90b
ACTIONS: [SimpleEngine.Actions.Effects.SetVarEff@3406472c, SimpleEngine.Actions.Effects.TellEff@5717c37]
INFO: New Conditional: <PRSA: [POUR, SPILL, EMPTY, DROP] && Query: [selfWeight(watercontainer1,50)]>

Compiling PRSACond:
VERBS: [FILL, PUT]

Compiling QueryCond:
Queries: [selfWeight(watercontainer1,50)]

Compiling Conditions:
TEST: Query: [selfWeight(watercontainer1,50)]
TES IS NOT: true
CONTINUATION: null
IsAND: true
IsOR: false
INFO: New Conditions: SimpleEngine.Actions.Condition@4816278d

Compiling Conditions:
TEST: PRSA: [FILL, PUT]
TES IS NOT: false
CONTINUATION: SimpleEngine.Actions.Condition@4816278d
IsAND: true
IsOR: false
INFO: New Conditions: SimpleEngine.Actions.Condition@4eaf3684

Compiling PRSICond:
OBJS: [WATERFALL]

Compiling PRSACond:
VERBS: [UNDER]

Compiling Conditions:
TEST: PRSA: [UNDER]
TES IS NOT: false
CONTINUATION: null
IsAND: true
IsOR: false
INFO: New Conditions: SimpleEngine.Actions.Condition@3c01cfa1

Compiling Conditions:
TEST: PRSI: [WATERFALL]
TES IS NOT: false
CONTINUATION: SimpleEngine.Actions.Condition@3c01cfa1
IsAND: true
IsOR: false
INFO: New Conditions: SimpleEngine.Actions.Condition@45d2ade3

Compiling PlaceEff:
ITEM: WATERCONTAINER1
LOCATION: WATERFALL
LOCATION TYPE: 2

Compiling TellEff:
TEXT: You placed the clay pot under the waterfall. It fills up with water and becomes heavy!

Compiling SetVarEff:
ID: WATERCONTAINER1
VARIABLE: weight
VALUE: 50

Compiling Conditional:
CONDITION: SimpleEngine.Actions.Condition@45d2ade3
ACTIONS: [SimpleEngine.Actions.Effects.PlaceEff@39d9314d, SimpleEngine.Actions.Effects.TellEff@b978d10, SimpleEngine.Actions.Effects.SetVarEff@5b7a8434]
INFO: New Conditional: <PRSI: [WATERFALL] && PRSA: [UNDER]>

Compiling PRSICond:
OBJS: [RIVER, WATERFALL]

Compiling Conditions:
TEST: PRSI: [RIVER, WATERFALL]
TES IS NOT: false
CONTINUATION: null
IsAND: true
IsOR: false
INFO: New Conditions: SimpleEngine.Actions.Condition@5c45d770

Compiling TellEff:
TEXT: You filled the clay pot up with water and it became heavy!

Compiling SetVarEff:
ID: WATERCONTAINER1
VARIABLE: weight
VALUE: 50

Compiling Conditional:
CONDITION: SimpleEngine.Actions.Condition@5c45d770
ACTIONS: [SimpleEngine.Actions.Effects.TellEff@2ce6c6ec, SimpleEngine.Actions.Effects.SetVarEff@1bae316d]
INFO: New Conditional: <PRSI: [RIVER, WATERFALL]>

Compiling InScopeCond:
OBJ: WATERCONTAINER1
LOCATIONS: [HERE]

Compiling InScopeCond:
OBJ: WATERFALL
LOCATIONS: [HERE]

Compiling Conditions:
TEST: InScope: WATERFALL, [HERE]
TES IS NOT: false
CONTINUATION: null
IsAND: true
IsOR: false
INFO: New Conditions: SimpleEngine.Actions.Condition@7cbd9d24

Compiling Conditions:
TEST: InScope: WATERCONTAINER1, [HERE]
TES IS NOT: false
CONTINUATION: SimpleEngine.Actions.Condition@7cbd9d24
IsAND: true
IsOR: false
INFO: New Conditions: SimpleEngine.Actions.Condition@1672fe87

Compiling TellEff:
TEXT: You filled the clay pot up with water and it became heavy!

Compiling SetVarEff:
ID: WATERCONTAINER1
VARIABLE: weight
VALUE: 50

Compiling Conditional:
CONDITION: SimpleEngine.Actions.Condition@1672fe87
ACTIONS: [SimpleEngine.Actions.Effects.TellEff@5026735c, SimpleEngine.Actions.Effects.SetVarEff@1b45c0e]
INFO: New Conditional: <InScope: WATERCONTAINER1, [HERE] && InScope: WATERFALL, [HERE]>

Compiling InScopeCond:
OBJ: WATERCONTAINER1
LOCATIONS: [HERE]

Compiling InScopeCond:
OBJ: RIVER
LOCATIONS: [HERE]

Compiling Conditions:
TEST: InScope: RIVER, [HERE]
TES IS NOT: false
CONTINUATION: null
IsAND: true
IsOR: false
INFO: New Conditions: SimpleEngine.Actions.Condition@11f0a5a1

Compiling Conditions:
TEST: InScope: WATERCONTAINER1, [HERE]
TES IS NOT: false
CONTINUATION: SimpleEngine.Actions.Condition@11f0a5a1
IsAND: true
IsOR: false
INFO: New Conditions: SimpleEngine.Actions.Condition@10f7f7de

Compiling TellEff:
TEXT: You filled the clay pot up with water and it became heavy!

Compiling SetVarEff:
ID: WATERCONTAINER1
VARIABLE: weight
VALUE: 50

Compiling Conditional:
CONDITION: SimpleEngine.Actions.Condition@10f7f7de
ACTIONS: [SimpleEngine.Actions.Effects.TellEff@73a8da0f, SimpleEngine.Actions.Effects.SetVarEff@50dfbc58]
INFO: New Conditional: <InScope: WATERCONTAINER1, [HERE] && InScope: RIVER, [HERE]>

Compiling Conditional:
CONDITION: SimpleEngine.Actions.Condition@4eaf3684
ACTIONS: [<PRSI: [WATERFALL] && PRSA: [UNDER]>, <PRSI: [RIVER, WATERFALL]>, <InScope: WATERCONTAINER1, [HERE] && InScope: WATERFALL, [HERE]>, <InScope: WATERCONTAINER1, [HERE] && InScope: RIVER, [HERE]>]
INFO: New Conditional: <PRSA: [FILL, PUT] && !Query: [selfWeight(watercontainer1,50)]>

Compile Action:
ID: WATERCONTAINER1
ACTIONS: [<PRSA: [POUR, SPILL, EMPTY, DROP] && Query: [selfWeight(watercontainer1,50)]>, <PRSA: [FILL, PUT] && !Query: [selfWeight(watercontainer1,50)]>]

Compiling QueryCond:
Queries: [isLocated(chest,treasureroom,0)]

Compile Room:
ID: TREASUREROOM
N: null
NCONDS: null
NQUERY: null
NHIDDEN: false
NBLOCKMESSAGE: null
S: null
SCONDS: null
SQUERY: null
SHIDDEN: false
SBLOCKMESSAGE: null
E: null
ECONDS: null
EQUERY: null
EHIDDEN: false
EBLOCKMESSAGE: null
W: null
WCONDS: null
WQUERY: null
WHIDDEN: false
WBLOCKMESSAGE: null
U: ALTARROOM
UCONDS: []
UQUERY: null
UHIDDEN: false
UBLOCKMESSAGE: null
D: null
DCONDS: null
DQUERY: null
DHIDDEN: false
DBLOCKMESSAGE: null
NAME: Treasure Room
DESC: After descending the stairway down from the altar, you find yourself in a dazzling room with walls made
from solid gold! Each golden wall is covered in carvings. It can be assumed that these are the faces of the ancient
deities worshiped by the lost civilisation.

You have taken possession of the treasure chest that was kept hidden here for millennia.
ALTDESC: After descending the stairway down from the altar, you find yourself in a dazzling room with walls made
from solid gold! Each golden wall is covered in carvings. It can be assumed that these are the faces of the ancient
deities worshiped by the lost civilisation.

In the centre of the room is a golden chest emboldened with rubies. The light reflecting off the rubies cast a red
glow amongst the golden walls.
ALTDESCCONDS: null
ALTDESCQUERY: Query: [isLocated(chest,treasureroom,0)]
SYNS: []
DET: the
INFO: New Room: SimpleEngine.GameRoom@6bf08014

Compiling QueryCond:
Queries: [hasProperty(chest,locked)]

Compile Object:
ID: CHEST
LOCATION: TREASUREROOM
LOCATION TYPE: 0
NAME: treasure chest
DESC: A golden treasure chest that was found in the hidden room under the altar.

The chest's sides are etched with similar carvings as on the walls of the room it was found in. Precious gemstones
line its edges, amongst them you can recognise rubies and emeralds.

The chest has been opened and you can peer inside of it.
ALTDESC: A golden treasure chest that was found in the hidden room under the altar.

The chest's sides are etched with similar carvings as on the walls of the room it was found in. Precious gemstones
line its edges, amongst them you can recognise rubies and emeralds.

It is currently firmly locked. A keyhole can be seen on the front of the chest, so it can be opened if the key
can be found.
ALTDESCCONDS: null
ALTDESCQUERY: Query: [hasProperty(chest,locked)]
SYNS: ["box", "chest"]
FLAGS: [_TAKEABLE, _CLOSABLECONTAINER, _LOCKED]
VALUES: 
	volume:50
	weight:25
	capacity:50
DET: null
USE ARE: false
INFO: New Object: SimpleEngine.GameObject@5e3d57c7

Compiling PRSACond:
VERBS: [UNLOCK]

Compiling AndPropertiesCond:
OBJECT: CHEST
PROPERTIES: [_LOCKED]

Compiling HaveItemCond:
OBJS: [KEY]

Compiling Conditions:
TEST: HaveItem: [KEY]
TES IS NOT: false
CONTINUATION: null
IsAND: true
IsOR: false
INFO: New Conditions: SimpleEngine.Actions.Condition@6ee4d9ab

Compiling Conditions:
TEST: AndProperties: CHEST, [_LOCKED]
TES IS NOT: false
CONTINUATION: SimpleEngine.Actions.Condition@6ee4d9ab
IsAND: true
IsOR: false
INFO: New Conditions: SimpleEngine.Actions.Condition@5a5338df

Compiling Conditions:
TEST: PRSA: [UNLOCK]
TES IS NOT: false
CONTINUATION: SimpleEngine.Actions.Condition@5a5338df
IsAND: true
IsOR: false
INFO: New Conditions: SimpleEngine.Actions.Condition@418c5a9c

Compiling RemovePropertyEff:
ITEM: CHEST
PROPERTY: _LOCKED

Compiling TellEff:
TEXT: 'CLICK' - The golden chest was unlocked!

Compiling Conditional:
CONDITION: SimpleEngine.Actions.Condition@418c5a9c
ACTIONS: [SimpleEngine.Actions.Effects.RemovePropertyEff@5082d622, SimpleEngine.Actions.Effects.TellEff@13d4992d]
INFO: New Conditional: <PRSA: [UNLOCK] && AndProperties: CHEST, [_LOCKED] && HaveItem: [KEY]>

Compiling PRSACond:
VERBS: [LOCK]

Compiling AndPropertiesCond:
OBJECT: CHEST
PROPERTIES: [_LOCKED]

Compiling HaveItemCond:
OBJS: [KEY]

Compiling Conditions:
TEST: HaveItem: [KEY]
TES IS NOT: false
CONTINUATION: null
IsAND: true
IsOR: false
INFO: New Conditions: SimpleEngine.Actions.Condition@302f7971

Compiling Conditions:
TEST: AndProperties: CHEST, [_LOCKED]
TES IS NOT: true
CONTINUATION: SimpleEngine.Actions.Condition@302f7971
IsAND: true
IsOR: false
INFO: New Conditions: SimpleEngine.Actions.Condition@332729ad

Compiling Conditions:
TEST: PRSA: [LOCK]
TES IS NOT: false
CONTINUATION: SimpleEngine.Actions.Condition@332729ad
IsAND: true
IsOR: false
INFO: New Conditions: SimpleEngine.Actions.Condition@75d2da2d

Compiling EqualsCond:
LEFT OBJ: CHEST
RIGHT OBJ: CHEST
LHS: isClosed
RHS: isClosed
BOTH VARS: false

Compiling Conditions:
TEST: Equals: CHEST, isClosed, CHEST, TRUE
TES IS NOT: false
CONTINUATION: null
IsAND: true
IsOR: false
INFO: New Conditions: SimpleEngine.Actions.Condition@d278d2b

Compiling AddPropertyEff:
ITEM: CHEST
PROPERTY: _LOCKED

Compiling TellEff:
TEXT: You locked the golden chest.

Compiling Conditional:
CONDITION: SimpleEngine.Actions.Condition@d278d2b
ACTIONS: [SimpleEngine.Actions.Effects.AddPropertyEff@25f4878b, SimpleEngine.Actions.Effects.TellEff@4e423aa2]
INFO: New Conditional: <Equals: CHEST, isClosed, CHEST, TRUE>

Compiling EqualsCond:
LEFT OBJ: CHEST
RIGHT OBJ: CHEST
LHS: isClosed
RHS: isClosed
BOTH VARS: false

Compiling Conditions:
TEST: Equals: CHEST, isClosed, CHEST, FALSE
TES IS NOT: false
CONTINUATION: null
IsAND: true
IsOR: false
INFO: New Conditions: SimpleEngine.Actions.Condition@7fbdb894

Compiling TellEff:
TEXT: You can't lock the chest when it's open.

Compiling Conditional:
CONDITION: SimpleEngine.Actions.Condition@7fbdb894
ACTIONS: [SimpleEngine.Actions.Effects.TellEff@3081f72c]
INFO: New Conditional: <Equals: CHEST, isClosed, CHEST, FALSE>

Compiling Conditional:
CONDITION: SimpleEngine.Actions.Condition@75d2da2d
ACTIONS: [<Equals: CHEST, isClosed, CHEST, TRUE>, <Equals: CHEST, isClosed, CHEST, FALSE>]
INFO: New Conditional: <PRSA: [LOCK] && !AndProperties: CHEST, [_LOCKED] && HaveItem: [KEY]>

Compile Action:
ID: CHEST
ACTIONS: [<PRSA: [UNLOCK] && AndProperties: CHEST, [_LOCKED] && HaveItem: [KEY]>, <PRSA: [LOCK] && !AndProperties: CHEST, [_LOCKED] && HaveItem: [KEY]>]

Compile Object:
ID: TREASURE
LOCATION: CHEST
LOCATION TYPE: 0
NAME: treasure
DESC: After opening the chest, you are greeted with a golden idol!

It's elegantly hand-carved and has remained in pristine condition. The gemstones in its eyes alone would fetch you
a small fortune. The idol as a whole will make you richer than beyond your wildest dreams!
SYNS: ["idol", "statue"]
FLAGS: [_TAKEABLE]
VALUES: 
	volume:50
	weight:25
DET: 
USE ARE: false
INFO: New Object: SimpleEngine.GameObject@3148f668

Compiling QueryCond:
Queries: [climbableStack(3,storageroom)]

Compile Room:
ID: STORAGEROOM
N: null
NCONDS: null
NQUERY: null
NHIDDEN: false
NBLOCKMESSAGE: null
S: null
SCONDS: null
SQUERY: null
SHIDDEN: false
SBLOCKMESSAGE: null
E: null
ECONDS: null
EQUERY: null
EHIDDEN: false
EBLOCKMESSAGE: null
W: COLUMNS
WCONDS: []
WQUERY: null
WHIDDEN: false
WBLOCKMESSAGE: null
U: ATTIC
UCONDS: []
UQUERY: Query: [climbableStack(3,storageroom)]
UHIDDEN: false
UBLOCKMESSAGE: There's nothing tall and stable enough for you to climb on to reach the attic.

You've seen some blocks lying around in other rooms, maybe you could reach it if you stack them up...
The cupboard against the wall is also stable and can be climbed on if stable objects were piled up on top of it.
D: null
DCONDS: null
DQUERY: null
DHIDDEN: false
DBLOCKMESSAGE: null
NAME: Storage Room
DESC: This room looks like it was used to store things, though all that remains now are pieces of wood and rubble.
Any artifacts once stored here have degraded over time and wont be worth anything now...

A marble cupboard with a large, stable surface is standing against the wall opposite you, and a slight chill is coming from the rotted hatch to the
attic above you. There may be something interesting hidden in there if you could find a way up.
SYNS: []
DET: null
INFO: New Room: SimpleEngine.GameRoom@6e005dc9

Compile Object:
ID: CUPBOARD
LOCATION: STORAGEROOM
LOCATION TYPE: 0
NAME: cupboard
DESC: An old marble cupboard. It's amazing that the thin stone door still slides open and shut!

The cupboard looks big enough to fit things inside. And whilst a little dusty, the surface looks stable. Could it be
used to climb up to the attic above if we stacked some things on top?
SYNS: ["compartment", "counter", "surface"]
FLAGS: [_CLOSABLECONTAINER, _STABLE]
VALUES: 
	surface:50
	capacity:50
DET: null
USE ARE: false
INFO: New Object: SimpleEngine.GameObject@7ceb3185

Compiling QueryCond:
Queries: [selfWeight(watercontainer2,50)]

Compile Object:
ID: WATERCONTAINER2
LOCATION: CUPBOARD
LOCATION TYPE: 0
NAME: copper jug
DESC: It's an old copper jug. It's colouration has slowly turned mint green over time.

It's currently empty right now, though if it were filled with water, it would gain a lot of weight!
ALTDESC: It's an old copper jug. It's colouration has slowly turned mint green over time.

It's filled to the brim with water! It should be heavy enough to hold down one of the pressure plates.
ALTDESCCONDS: null
ALTDESCQUERY: Query: [selfWeight(watercontainer2,50)]
SYNS: ["copper container", "jug", "container"]
FLAGS: [_TAKEABLE]
VALUES: 
	volume:25
	weight:10
	capacity:25
DET: null
USE ARE: false
INFO: New Object: SimpleEngine.GameObject@436c81a3

Compiling PRSACond:
VERBS: [POUR, SPILL, EMPTY, DROP]

Compiling QueryCond:
Queries: [selfWeight(watercontainer2,50)]

Compiling Conditions:
TEST: Query: [selfWeight(watercontainer2,50)]
TES IS NOT: false
CONTINUATION: null
IsAND: true
IsOR: false
INFO: New Conditions: SimpleEngine.Actions.Condition@3561c410

Compiling Conditions:
TEST: PRSA: [POUR, SPILL, EMPTY, DROP]
TES IS NOT: false
CONTINUATION: SimpleEngine.Actions.Condition@3561c410
IsAND: true
IsOR: false
INFO: New Conditions: SimpleEngine.Actions.Condition@59e32960

Compiling SetVarEff:
ID: WATERCONTAINER2
VARIABLE: weight
VALUE: 10

Compiling TellEff:
TEXT: The copper jug was emptied of all of its water.

Compiling Conditional:
CONDITION: SimpleEngine.Actions.Condition@59e32960
ACTIONS: [SimpleEngine.Actions.Effects.SetVarEff@7c214cc0, SimpleEngine.Actions.Effects.TellEff@5b67bb7e]
INFO: New Conditional: <PRSA: [POUR, SPILL, EMPTY, DROP] && Query: [selfWeight(watercontainer2,50)]>

Compiling PRSACond:
VERBS: [FILL, PUT]

Compiling QueryCond:
Queries: [selfWeight(watercontainer2,50)]

Compiling Conditions:
TEST: Query: [selfWeight(watercontainer2,50)]
TES IS NOT: true
CONTINUATION: null
IsAND: true
IsOR: false
INFO: New Conditions: SimpleEngine.Actions.Condition@609db546

Compiling Conditions:
TEST: PRSA: [FILL, PUT]
TES IS NOT: false
CONTINUATION: SimpleEngine.Actions.Condition@609db546
IsAND: true
IsOR: false
INFO: New Conditions: SimpleEngine.Actions.Condition@20f5281c

Compiling PRSICond:
OBJS: [WATERFALL]

Compiling PRSACond:
VERBS: [UNDER]

Compiling Conditions:
TEST: PRSA: [UNDER]
TES IS NOT: false
CONTINUATION: null
IsAND: true
IsOR: false
INFO: New Conditions: SimpleEngine.Actions.Condition@56c4278e

Compiling Conditions:
TEST: PRSI: [WATERFALL]
TES IS NOT: false
CONTINUATION: SimpleEngine.Actions.Condition@56c4278e
IsAND: true
IsOR: false
INFO: New Conditions: SimpleEngine.Actions.Condition@301eda63

Compiling PlaceEff:
ITEM: WATERCONTAINER2
LOCATION: WATERFALL
LOCATION TYPE: 2

Compiling TellEff:
TEXT: You placed the copper jug under the waterfall. It fills up with water and becomes heavy!

Compiling SetVarEff:
ID: WATERCONTAINER2
VARIABLE: weight
VALUE: 50

Compiling Conditional:
CONDITION: SimpleEngine.Actions.Condition@301eda63
ACTIONS: [SimpleEngine.Actions.Effects.PlaceEff@3d246ea3, SimpleEngine.Actions.Effects.TellEff@341814d3, SimpleEngine.Actions.Effects.SetVarEff@4397ad89]
INFO: New Conditional: <PRSI: [WATERFALL] && PRSA: [UNDER]>

Compiling PRSICond:
OBJS: [RIVER, WATERFALL]

Compiling Conditions:
TEST: PRSI: [RIVER, WATERFALL]
TES IS NOT: false
CONTINUATION: null
IsAND: true
IsOR: false
INFO: New Conditions: SimpleEngine.Actions.Condition@59cba5a

Compiling TellEff:
TEXT: You filled the copper jug up with water and it became heavy!

Compiling SetVarEff:
ID: WATERCONTAINER2
VARIABLE: weight
VALUE: 50

Compiling Conditional:
CONDITION: SimpleEngine.Actions.Condition@59cba5a
ACTIONS: [SimpleEngine.Actions.Effects.TellEff@1bd39d3c, SimpleEngine.Actions.Effects.SetVarEff@6f19ac19]
INFO: New Conditional: <PRSI: [RIVER, WATERFALL]>

Compiling InScopeCond:
OBJ: WATERCONTAINER2
LOCATIONS: [HERE]

Compiling InScopeCond:
OBJ: WATERFALL
LOCATIONS: [HERE]

Compiling Conditions:
TEST: InScope: WATERFALL, [HERE]
TES IS NOT: false
CONTINUATION: null
IsAND: true
IsOR: false
INFO: New Conditions: SimpleEngine.Actions.Condition@119cbf96

Compiling Conditions:
TEST: InScope: WATERCONTAINER2, [HERE]
TES IS NOT: false
CONTINUATION: SimpleEngine.Actions.Condition@119cbf96
IsAND: true
IsOR: false
INFO: New Conditions: SimpleEngine.Actions.Condition@71329995

Compiling TellEff:
TEXT: You filled the copper jug up with water and it became heavy!

Compiling SetVarEff:
ID: WATERCONTAINER2
VARIABLE: weight
VALUE: 50

Compiling Conditional:
CONDITION: SimpleEngine.Actions.Condition@71329995
ACTIONS: [SimpleEngine.Actions.Effects.TellEff@768fc0f2, SimpleEngine.Actions.Effects.SetVarEff@5454d35e]
INFO: New Conditional: <InScope: WATERCONTAINER2, [HERE] && InScope: WATERFALL, [HERE]>

Compiling InScopeCond:
OBJ: WATERCONTAINER2
LOCATIONS: [HERE]

Compiling InScopeCond:
OBJ: RIVER
LOCATIONS: [HERE]

Compiling Conditions:
TEST: InScope: RIVER, [HERE]
TES IS NOT: false
CONTINUATION: null
IsAND: true
IsOR: false
INFO: New Conditions: SimpleEngine.Actions.Condition@20c0a64d

Compiling Conditions:
TEST: InScope: WATERCONTAINER2, [HERE]
TES IS NOT: false
CONTINUATION: SimpleEngine.Actions.Condition@20c0a64d
IsAND: true
IsOR: false
INFO: New Conditions: SimpleEngine.Actions.Condition@455b6df1

Compiling TellEff:
TEXT: You filled the copper jug up with water and it became heavy!

Compiling SetVarEff:
ID: WATERCONTAINER2
VARIABLE: weight
VALUE: 50

Compiling Conditional:
CONDITION: SimpleEngine.Actions.Condition@455b6df1
ACTIONS: [SimpleEngine.Actions.Effects.TellEff@4ddbbdf8, SimpleEngine.Actions.Effects.SetVarEff@3f67593e]
INFO: New Conditional: <InScope: WATERCONTAINER2, [HERE] && InScope: RIVER, [HERE]>

Compiling Conditional:
CONDITION: SimpleEngine.Actions.Condition@20f5281c
ACTIONS: [<PRSI: [WATERFALL] && PRSA: [UNDER]>, <PRSI: [RIVER, WATERFALL]>, <InScope: WATERCONTAINER2, [HERE] && InScope: WATERFALL, [HERE]>, <InScope: WATERCONTAINER2, [HERE] && InScope: RIVER, [HERE]>]
INFO: New Conditional: <PRSA: [FILL, PUT] && !Query: [selfWeight(watercontainer2,50)]>

Compile Action:
ID: WATERCONTAINER2
ACTIONS: [<PRSA: [POUR, SPILL, EMPTY, DROP] && Query: [selfWeight(watercontainer2,50)]>, <PRSA: [FILL, PUT] && !Query: [selfWeight(watercontainer2,50)]>]

Compile Object:
ID: PLANK
LOCATION: STORAGEROOM
LOCATION TYPE: 0
NAME: wooden plank
DESC: A long wooden plank that has somehow managed to avoid rotting away completely over the millennia.

It looks sturdy enough to walk over, perhaps it could be used as a makeshift bridge...
SYNS: ["plank", "log", "wood", "bridge"]
FLAGS: [_TAKEABLE]
VALUES: 
	volume:50
	surface:50
	weight:25
DET: null
USE ARE: false
INFO: New Object: SimpleEngine.GameObject@1ab06251

Compiling PRSACond:
VERBS: [PLACE, PUT]

Compiling PRSOCond:
OBJS: [PLANK]

Compiling PRSICond:
OBJS: [RIVER]

Compiling Conditions:
TEST: PRSI: [RIVER]
TES IS NOT: false
CONTINUATION: null
IsAND: true
IsOR: false
INFO: New Conditions: SimpleEngine.Actions.Condition@14bee915

Compiling Conditions:
TEST: PRSO: [PLANK]
TES IS NOT: false
CONTINUATION: SimpleEngine.Actions.Condition@14bee915
IsAND: true
IsOR: false
INFO: New Conditions: SimpleEngine.Actions.Condition@1115ec15

Compiling Conditions:
TEST: PRSA: [PLACE, PUT]
TES IS NOT: false
CONTINUATION: SimpleEngine.Actions.Condition@1115ec15
IsAND: true
IsOR: false
INFO: New Conditions: SimpleEngine.Actions.Condition@82ea68c

Compiling PlaceEff:
ITEM: PLANK
LOCATION: RIVERSUPPORTS
LOCATION TYPE: 1

Compiling Conditional:
CONDITION: SimpleEngine.Actions.Condition@82ea68c
ACTIONS: [SimpleEngine.Actions.Effects.PlaceEff@59e505b2]
INFO: New Conditional: <PRSA: [PLACE, PUT] && PRSO: [PLANK] && PRSI: [RIVER]>

Compiling PRSACond:
VERBS: [FORM, MAKE]

Compiling PRSOCond:
OBJS: [PLANK]

Compiling HereCond:
LOCATIONS: [EASTRIVER]

Compiling Conditions:
TEST: Here: [EASTRIVER]
TES IS NOT: false
CONTINUATION: null
IsAND: true
IsOR: false
INFO: New Conditions: SimpleEngine.Actions.Condition@43b9fd5

Compiling Conditions:
TEST: PRSO: [PLANK]
TES IS NOT: false
CONTINUATION: SimpleEngine.Actions.Condition@43b9fd5
IsAND: true
IsOR: false
INFO: New Conditions: SimpleEngine.Actions.Condition@79dc5318

Compiling Conditions:
TEST: PRSA: [FORM, MAKE]
TES IS NOT: false
CONTINUATION: SimpleEngine.Actions.Condition@79dc5318
IsAND: true
IsOR: false
INFO: New Conditions: SimpleEngine.Actions.Condition@8e50104

Compiling PlaceEff:
ITEM: PLANK
LOCATION: RIVERSUPPORTS
LOCATION TYPE: 1

Compiling Conditional:
CONDITION: SimpleEngine.Actions.Condition@8e50104
ACTIONS: [SimpleEngine.Actions.Effects.PlaceEff@37e4d7bb]
INFO: New Conditional: <PRSA: [FORM, MAKE] && PRSO: [PLANK] && Here: [EASTRIVER]>

Compile Action:
ID: PLANK
ACTIONS: [<PRSA: [PLACE, PUT] && PRSO: [PLANK] && PRSI: [RIVER]>, <PRSA: [FORM, MAKE] && PRSO: [PLANK] && Here: [EASTRIVER]>]

Compile Room:
ID: ATTIC
N: null
NCONDS: null
NQUERY: null
NHIDDEN: false
NBLOCKMESSAGE: null
S: null
SCONDS: null
SQUERY: null
SHIDDEN: false
SBLOCKMESSAGE: null
E: null
ECONDS: null
EQUERY: null
EHIDDEN: false
EBLOCKMESSAGE: null
W: null
WCONDS: null
WQUERY: null
WHIDDEN: false
WBLOCKMESSAGE: null
U: null
UCONDS: null
UQUERY: null
UHIDDEN: false
UBLOCKMESSAGE: null
D: STORAGEROOM
DCONDS: []
DQUERY: null
DHIDDEN: false
DBLOCKMESSAGE: null
NAME: Attic
DESC: A musty attic that you managed to climb to from the storage room. It's not very big and seems it was just
used as a bit of extra space.

A few small things are scattered around amongst all of the rubble, dust, and cobwebs. It seems treasure was hidden here
once upon a time, but all that remained when you entered was a golden key. It could still be useful for something though...
SYNS: []
DET: null
INFO: New Room: SimpleEngine.GameRoom@6f7923a5

Compile Object:
ID: KEY
LOCATION: ATTIC
LOCATION TYPE: 0
NAME: golden key
DESC: An old ornate golden key. It looks important.

Try using it if you find something with a matching keyhole!
SYNS: ["key"]
FLAGS: [_TAKEABLE]
VALUES: 
	volume:10
	weight:1
DET: null
USE ARE: false
INFO: New Object: SimpleEngine.GameObject@74a6f9c1

Compile Room:
ID: ROCKYTUNNEL
N: EASTRIVER
NCONDS: []
NQUERY: null
NHIDDEN: false
NBLOCKMESSAGE: null
S: null
SCONDS: null
SQUERY: null
SHIDDEN: false
SBLOCKMESSAGE: null
E: RUINSENTRANCE
ECONDS: []
EQUERY: null
EHIDDEN: false
EBLOCKMESSAGE: null
W: null
WCONDS: null
WQUERY: null
WHIDDEN: false
WBLOCKMESSAGE: null
U: null
UCONDS: null
UQUERY: null
UHIDDEN: false
UBLOCKMESSAGE: null
D: null
DCONDS: null
DQUERY: null
DHIDDEN: false
DBLOCKMESSAGE: null
NAME: Rocky Tunnel
DESC: A long narrow tunnel that snakes from the temple's entrance towards a network of caverns and crevices.

The faint sound of flowing water can be heard in the distance. This claustrophobic tunnel is littered with rocks
and boulders that have collapsed over time.
SYNS: []
DET: null
INFO: New Room: SimpleEngine.GameRoom@54eb2b70

Compile Object:
ID: MEDIUMBLOCK
LOCATION: ROCKYTUNNEL
LOCATION TYPE: 0
NAME: medium block
DESC: It's a medium sized block of rock.

This boulder looks as if it collapsed from the walls of the rocky tunnel, perhaps it could be used as a stable building
block to climb on to reach a place high up.
SYNS: ["medium", "medium boulder", "boulder", "block", "rock", "medium block", "rock block"]
FLAGS: [_TAKEABLE, _STABLE]
VALUES: 
	volume:50
	surface:50
	weight:50
DET: null
USE ARE: false
INFO: New Object: SimpleEngine.GameObject@45a37759

Compiling QueryCond:
Queries: [isLocated(plank,riversupports,1)]

Compiling QueryCond:
Queries: [isLocated(plank,riversupports,1)]

Compile Room:
ID: EASTRIVER
N: WATERFALLCAVERN
NCONDS: []
NQUERY: null
NHIDDEN: false
NBLOCKMESSAGE: null
S: ROCKYTUNNEL
SCONDS: []
SQUERY: null
SHIDDEN: false
SBLOCKMESSAGE: null
E: COLUMNS
ECONDS: []
EQUERY: null
EHIDDEN: false
EBLOCKMESSAGE: null
W: WESTRIVER
WCONDS: []
WQUERY: Query: [isLocated(plank,riversupports,1)]
WHIDDEN: false
WBLOCKMESSAGE: The river is flowing too rapidly to safely cross without some sort of bridge!
U: null
UCONDS: null
UQUERY: null
UHIDDEN: false
UBLOCKMESSAGE: null
D: null
DCONDS: null
DQUERY: null
DHIDDEN: false
DBLOCKMESSAGE: null
NAME: East River Cavern
DESC: You find yourself emerging into a large cavern split in two by a turbulent river flowing through it. You
are on the east side of the river.

Rotten wooden supports extend across the river as if there used to be a bridge here in the distant past. However,
with the bridge now long washed away, you are unable to cross the river to reach the other side of the cavern and
the tunnels beyond.
ALTDESC: You find yourself emerging into a large cavern split in two by a turbulent river flowing through it. You
are on the east side of the river.

You are able to cross the river thanks to the wooden plank laid out across the old support supports that are somehow
still standing.
ALTDESCCONDS: null
ALTDESCQUERY: Query: [isLocated(plank,riversupports,1)]
SYNS: []
DET: the
INFO: New Room: SimpleEngine.GameRoom@63611043

Compile Object:
ID: RIVER
LOCATION: EASTRIVER
LOCATION TYPE: 0
NAME: river
DESC: A fast flowing river snaking it's way through the expansive caverns.
Most of this cave system would have been forged by this gushing torrent over time.

You could use the flowing torrent to fill up any water containers you have!
SYNS: ["torrent", "rapids", "water"]
FLAGS: []
VALUES: 
	capacity:0
DET: null
USE ARE: false
INFO: New Object: SimpleEngine.GameObject@20ca951f

Compiling PRSACond:
VERBS: [WALK, OVER, MOVE, CROSS, GET]

Compiling PRSOCond:
OBJS: [RIVER]

Compiling Conditions:
TEST: PRSO: [RIVER]
TES IS NOT: false
CONTINUATION: null
IsAND: true
IsOR: false
INFO: New Conditions: SimpleEngine.Actions.Condition@2d778add

Compiling Conditions:
TEST: PRSA: [WALK, OVER, MOVE, CROSS, GET]
TES IS NOT: false
CONTINUATION: SimpleEngine.Actions.Condition@2d778add
IsAND: true
IsOR: false
INFO: New Conditions: SimpleEngine.Actions.Condition@73302995

Compiling QueryCond:
Queries: [isLocated(plank,riversupports,1)]

Compiling Conditions:
TEST: Query: [isLocated(plank,riversupports,1)]
TES IS NOT: false
CONTINUATION: null
IsAND: true
IsOR: false
INFO: New Conditions: SimpleEngine.Actions.Condition@1838ccb8

Compiling GotoEff:
LOCATION: WESTRIVER

Compiling Conditional:
CONDITION: SimpleEngine.Actions.Condition@1838ccb8
ACTIONS: [SimpleEngine.Actions.Effects.GotoEff@7d9e8ef7]
INFO: New Conditional: <Query: [isLocated(plank,riversupports,1)]>

Compiling TellEff:
TEXT: The river is flowing too rapidly to safely cross without some sort of bridge!

Compiling Conditional:
CONDITION: SimpleEngine.Actions.Condition@73302995
ACTIONS: [<Query: [isLocated(plank,riversupports,1)]>, SimpleEngine.Actions.Effects.TellEff@f107c50]
INFO: New Conditional: <PRSA: [WALK, OVER, MOVE, CROSS, GET] && PRSO: [RIVER]>

Compile Action:
ID: RIVER
ACTIONS: [<PRSA: [WALK, OVER, MOVE, CROSS, GET] && PRSO: [RIVER]>]

Compile Object:
ID: RIVERSUPPORTS
LOCATION: RIVER
LOCATION TYPE: 0
NAME: supports
DESC: Rotting wooden supports that extend across the river. This suggests a bridge existed here once.

Though the wood still looks sturdy enough to hold some weight if you can find something to put on top of it. Then you
would be able to cross the river!
SYNS: []
FLAGS: []
VALUES: 
	volume:0
	surface:50
DET: some
USE ARE: true
INFO: New Object: SimpleEngine.GameObject@51133c06

Compile Room:
ID: WATERFALLCAVERN
N: null
NCONDS: null
NQUERY: null
NHIDDEN: false
NBLOCKMESSAGE: null
S: EASTRIVER
SCONDS: []
SQUERY: null
SHIDDEN: false
SBLOCKMESSAGE: null
E: ALTARROOM
ECONDS: []
EQUERY: null
EHIDDEN: false
EBLOCKMESSAGE: null
W: null
WCONDS: null
WQUERY: null
WHIDDEN: false
WBLOCKMESSAGE: null
U: null
UCONDS: null
UQUERY: null
UHIDDEN: false
UBLOCKMESSAGE: null
D: null
DCONDS: null
DQUERY: null
DHIDDEN: false
DBLOCKMESSAGE: null
NAME: Waterfall Cavern
DESC: At the far end of the caverns, a roaring waterfall pours down from a rocky outcrop above.

The river stretching south from its base is hypothesised to have carved out this entire network of caverns and tunnels.
It's said that the civilisation that once lived here worshiped a deity that is responsible for the everlasting
flow of water.
SYNS: []
DET: null
INFO: New Room: SimpleEngine.GameRoom@4b213651

Compile Object:
ID: WATERFALL
LOCATION: WATERFALLCAVERN
LOCATION TYPE: 0
NAME: waterfall
DESC: The sound of the roaring waterfall echoes throughout the cavern. It feeds into the river flowing southward.

If you placed a water container under the waterfall, it would instantly fill up!
SYNS: ["falls", "fall"]
FLAGS: []
VALUES: 
	below:100
DET: null
USE ARE: false
INFO: New Object: SimpleEngine.GameObject@4241e0f4

Compiling QueryCond:
Queries: [isLocated(plank,riversupports,1)]

Compile Room:
ID: WESTRIVER
N: ANCIENTQUARRY
NCONDS: []
NQUERY: null
NHIDDEN: false
NBLOCKMESSAGE: null
S: null
SCONDS: null
SQUERY: null
SHIDDEN: false
SBLOCKMESSAGE: null
E: EASTRIVER
ECONDS: []
EQUERY: Query: [isLocated(plank,riversupports,1)]
EHIDDEN: false
EBLOCKMESSAGE: The river is flowing too rapidly to safely cross without some sort of bridge!
W: null
WCONDS: null
WQUERY: null
WHIDDEN: false
WBLOCKMESSAGE: null
U: null
UCONDS: null
UQUERY: null
UHIDDEN: false
UBLOCKMESSAGE: null
D: null
DCONDS: null
DQUERY: null
DHIDDEN: false
DBLOCKMESSAGE: null
NAME: West River Cavern
DESC: You are on the west side of the large split in two by the fast-flowing river. Massive Stalactites extend down
from the roof of the cavern. Hopefully they don't fall...

To the north is the entrance to what looks like a quarry. Resources were likely mined from this side of the cavern to
build the temple on the other side.
SYNS: []
DET: the
INFO: New Room: SimpleEngine.GameRoom@4ebff610

Compile Room:
ID: ANCIENTQUARRY
N: null
NCONDS: null
NQUERY: null
NHIDDEN: false
NBLOCKMESSAGE: null
S: WESTRIVER
SCONDS: []
SQUERY: null
SHIDDEN: false
SBLOCKMESSAGE: null
E: null
ECONDS: null
EQUERY: null
EHIDDEN: false
EBLOCKMESSAGE: null
W: null
WCONDS: null
WQUERY: null
WHIDDEN: false
WBLOCKMESSAGE: null
U: null
UCONDS: null
UQUERY: null
UHIDDEN: false
UBLOCKMESSAGE: null
D: null
DCONDS: null
DQUERY: null
DHIDDEN: false
DBLOCKMESSAGE: null
NAME: Ancient Quarry
DESC: This seems to be where all of the marble and stone for the underground temple was excavated from. The hole
before you burrows deep into the earth, so far that you can't even see the bottom.

There is still a lot of stone lying about. Neatly carved chunks of different types of rock.
SYNS: []
DET: null
INFO: New Room: SimpleEngine.GameRoom@60410cd

Compile Object:
ID: LARGEBLOCK
LOCATION: ANCIENTQUARRY
LOCATION TYPE: 0
NAME: large block
DESC: A massive marble block that never ended up leaving the quarry. It's a miracle you're able to even lift this thing!

This would make a good stable base to climb on, and is large enough to pile other blocks on top of it.
SYNS: ["large block", "large marble block", "large", "block", "biggest block", "big block", "big", "marble", "big marble block"]
FLAGS: [_TAKEABLE, _STABLE]
VALUES: 
	volume:75
	surface:75
	weight:75
DET: null
USE ARE: false
INFO: New Object: SimpleEngine.GameObject@44d52de2

Compile Room:
ID: DEADROOM
N: null
NCONDS: null
NQUERY: null
NHIDDEN: false
NBLOCKMESSAGE: null
S: null
SCONDS: null
SQUERY: null
SHIDDEN: false
SBLOCKMESSAGE: null
E: null
ECONDS: null
EQUERY: null
EHIDDEN: false
EBLOCKMESSAGE: null
W: null
WCONDS: null
WQUERY: null
WHIDDEN: false
WBLOCKMESSAGE: null
U: null
UCONDS: null
UQUERY: null
UHIDDEN: false
UBLOCKMESSAGE: null
D: null
DCONDS: null
DQUERY: null
DHIDDEN: false
DBLOCKMESSAGE: null
NAME: Dead Room
DESC: A room that the player shouldn't be able to access.
SYNS: []
DET: null
INFO: New Room: SimpleEngine.GameRoom@95e33cc

Compiling QueryCond:
Queries: [climbableStack(3,storageroom)]

Compiling TellEff:
TEXT: With all of these objects stacked on top of one another, you should be able to climb up to the attic above you!

Compiling TellEff:
TEXT: You're now unable to climb up to reach the attic.

DEBUG: Compiling EndCheck:
DEBUG: Queries: [Query: [climbableStack(3,storageroom)]]
DEBUG: isDefault: false
DEBUG: ifEffects: [SimpleEngine.Actions.Effects.TellEff@7393222f]
DEBUG: elseEffects: [SimpleEngine.Actions.Effects.TellEff@babafc2]

Compiling QueryCond:
Queries: [isLocated(plank,riversupports,1)]

Compiling TellEff:
TEXT: Using the plank as a makeshift bridge, you can now safely cross!

Compiling TellEff:
TEXT: Without the plank, you can no longer cross the river safely.

DEBUG: Compiling EndCheck:
DEBUG: Queries: [Query: [isLocated(plank,riversupports,1)]]
DEBUG: isDefault: false
DEBUG: ifEffects: [SimpleEngine.Actions.Effects.TellEff@31add175]
DEBUG: elseEffects: [SimpleEngine.Actions.Effects.TellEff@ae3540e]

Compiling QueryCond:
Queries: [weightOnObjectAtLeast(pressureplate1,50)]

Compiling TellEff:
TEXT: You hear a rumble as the pressure plate clicks into place.

Compiling TellEff:
TEXT: The Pressure plate clicks as it lift back up.

DEBUG: Compiling EndCheck:
DEBUG: Queries: [Query: [weightOnObjectAtLeast(pressureplate1,50)]]
DEBUG: isDefault: true
DEBUG: ifEffects: [SimpleEngine.Actions.Effects.TellEff@600b9d27]
DEBUG: elseEffects: [SimpleEngine.Actions.Effects.TellEff@3688eb5b]

Compiling QueryCond:
Queries: [weightOnObjectAtLeast(pressureplate2,50)]

Compiling TellEff:
TEXT: You hear a rumble as the pressure plate clicks into place.

Compiling TellEff:
TEXT: The Pressure plate clicks as it lift back up.

DEBUG: Compiling EndCheck:
DEBUG: Queries: [Query: [weightOnObjectAtLeast(pressureplate2,50)]]
DEBUG: isDefault: false
DEBUG: ifEffects: [SimpleEngine.Actions.Effects.TellEff@69f1a286]
DEBUG: elseEffects: [SimpleEngine.Actions.Effects.TellEff@7922d892]

Compiling QueryCond:
Queries: [weightOnObjectAtLeast(pressureplate1,50), weightOnObjectAtLeast(pressureplate2,50)]

Compiling TellEff:
TEXT: You hear a loud rumbling as the altar before you lowers into the ground and reveals a hidden stairway...

Compiling PlaceEff:
ITEM: ALTAR
LOCATION: DEADROOM
LOCATION TYPE: 0

Compiling TellEff:
TEXT: The altar rises back up from the floor and hides the secret stairway.

Compiling PlaceEff:
ITEM: ALTAR
LOCATION: ALTARROOM
LOCATION TYPE: 0

DEBUG: Compiling EndCheck:
DEBUG: Queries: [Query: [weightOnObjectAtLeast(pressureplate1,50), weightOnObjectAtLeast(pressureplate2,50)]]
DEBUG: isDefault: false
DEBUG: ifEffects: [SimpleEngine.Actions.Effects.TellEff@457c9034, SimpleEngine.Actions.Effects.PlaceEff@345f69f3]
DEBUG: elseEffects: [SimpleEngine.Actions.Effects.TellEff@50de186c, SimpleEngine.Actions.Effects.PlaceEff@3f57bcad]

Compiling QueryCond:
Queries: [isLocated(treasure,player,0)]

Compiling TellEff:
TEXT: Congratulations! You obtained the ancient treasure!

DEBUG: Compiling EndCheck:
DEBUG: Queries: [Query: [isLocated(treasure,player,0)]]
DEBUG: isDefault: false
DEBUG: ifEffects: [SimpleEngine.Actions.Effects.TellEff@1e8b7643]
DEBUG: elseEffects: null
ERROR: Error initialising parent variables for RIVERSUPPORTS

Knowledge Base:
':-'(notMember(_1069,[]),'!')
':-'(notMember(X,[Head|Tail]),('\='(X,Head),notMember(X,Tail)))
isObject(player)
capacity(player,2147483647)
capacityUsed(player,0)
':-'(inScope(A),(isObject(A),isLocated(A,B,_1075),isLocated(player,B,_1076),'!'))
':-'(inScope(A),(isObject(A),isLocated(A,B,0),hasProperty(B,closablecontainer),'!',isClosed(B,false),inScope(B)))
':-'(inScope(A),(isObject(A),isLocated(A,B,_1081),inScope(B)))
':-'(putIn(A,B),(inScope(A),inScope(B),'\='(A,B),isLocated(A,C,_1085),'\='(A,C),hasProperty(B,closablecontainer),'!',isClosed(B,false),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putIn(A,B),(inScope(A),inScope(B),'\='(A,B),isLocated(A,C,_1093),'\='(A,C),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putInIgnoreScope(A,B),('\='(A,B),isLocated(A,C,_1101),'\='(A,C),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putOn(A,B),(inScope(A),inScope(B),'\='(A,B),volume(A,X),surface(B,Y),surfaceUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putOnIgnoreScope(A,B),('\='(A,B),volume(A,X),surface(B,Y),surfaceUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putBelow(A,B),(inScope(A),inScope(B),'\='(A,B),volume(A,X),below(B,Y),belowUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putBelowIgnoreScope(A,B),('\='(A,B),volume(A,X),below(B,Y),belowUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(outOfScope(A),not(inScope(A)))
':-'(noCapacity(A),not(capacity(A,_1132)))
':-'(noSurface(A),not(surface(A,_1134)))
':-'(noBelow(A),not(below(A,_1136)))
':-'(cantFitCapacity(A,B),(volume(A,X),capacity(B,Y),capacityUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(cantFitSurface(A,B),(volume(A,X),surface(B,Y),surfaceUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(cantFitBelow(A,B),(volume(A,X),below(B,Y),belowUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(tooBigCapacity(A,B),(volume(A,X),capacity(B,Y),'>'(X,Y)))
':-'(tooBigSurface(A,B),(volume(A,X),surface(B,Y),'>'(X,Y)))
':-'(tooBigBelow(A,B),(volume(A,X),below(B,Y),'>'(X,Y)))
':-'(sameObject(A,B),'='(A,B))
':-'(notObject(A),not(isObject(A)))
':-'(targetClosed(A),(hasProperty(A,closablecontainer),isClosed(A,true)))
':-'(stableStack([O],1,R),(isRoom(R),isObject(O),isLocated(O,R,0),hasProperty(O,stable)))
':-'(stableStack([H1,H2|T],M,R),(isObject(H1),isLocated(H1,H2,1),hasProperty(H1,stable),stableStack([H2|T],N,R),is(M,'+'(N,1))))
':-'(stack([O],1,R),(isRoom(R),isObject(O),isLocated(O,R,0)))
':-'(stack([H1,H2|T],M,R),(isObject(H1),isLocated(H1,H2,1),stack([H2|T],N,R),is(M,'+'(N,1))))
':-'(climbableStack(N,R),stableStack(_1186,N,R))
':-'(notClimbableStackError(N,R),(stack(_1189,N,R),not(climbableStack(N,R))))
':-'(totalWeight(O,W,X,Y),(selfWeight(O,W2),setof(X,isLocated(X,O,0),IN),setof(Y,isLocated(Y,O,1),ON),'!',weightInObject(X,O,W3),weightOnObject(Y,O,W4),is(W,'+'('+'(W2,W3),W4))))
':-'(totalWeight(O,W,X,[]),(selfWeight(O,W2),setof(X,isLocated(X,O,0),IN),'!',weightInObject(X,O,W3),is(W,'+'(W2,W3))))
':-'(totalWeight(O,W,[],Y),(selfWeight(O,W2),setof(Y,isLocated(Y,O,1),ON),'!',weightOnObject(Y,O,W3),is(W,'+'(W2,W3))))
':-'(totalWeight(O,W,[],[]),selfWeight(O,W))
':-'(selfWeight(O,W),hasVariable(O,weight,W))
':-'(selfWeight(O,0),(isObject(O),not(hasVariable(O,weight,W))))
':-'(weightOnObject(L,O,W),(setof(X,isLocated(X,O,1),L),'!',weightOnObjectAux(L,O,W)))
':-'(weightOnObjectAux([H|T],O,W),(notMember(H,T),isLocated(H,O,1),'!',weightOnObjectAux(T,O,W3),totalWeight(H,W2,_1227,_1228),is(W,'+'(W2,W3))))
weightOnObjectAux(_1229,O,0)
':-'(weightInObject(L,O,W),(setof(X,isLocated(X,O,0),L),'!',weightInObjectAux(L,O,W)))
':-'(weightInObjectAux([H|T],O,W),(notMember(H,T),isLocated(H,O,0),'!',weightInObjectAux(T,O,W3),totalWeight(H,W2,_1241,_1242),is(W,'+'(W2,W3))))
weightInObjectAux(_1243,O,0)
':-'(weightOnObjectEquals(O,W),(weightOnObject(_1247,O,W2),'='(W2,W)))
':-'(weightOnObjectAtLeast(O,W),(weightOnObject(_1251,O,W2),'>='(W2,W)))
':-'(weightOnObjectAtMost(O,W),(weightOnObject(_1255,O,W2),'=<'(W2,W)))
':-'(weightInObjectEquals(O,W),(weightInObject(_1259,O,W2),'='(W2,W)))
':-'(weightInObjectAtLeast(O,W),(weightInObject(_1263,O,W2),'>='(W2,W)))
':-'(weightInObjectAtMost(O,W),(weightInObject(_1267,O,W2),'=<'(W2,W)))
':-'(weightOnObjectNotEquals(O,W),(weightOnObject(_1271,O,W2),'\='(W2,W)))
':-'(weightOnObjectTooLow(O,W),(weightOnObject(_1275,O,W2),'<'(W2,W)))
':-'(weightOnObjectTooHigh(O,W),(weightOnObject(_1279,O,W2),'>'(W2,W)))
':-'(weightInObjectNotEquals(O,W),(weightInObject(_1283,O,W2),'\='(W2,W)))
':-'(weightInObjectTooLow(O,W),(weightInObject(_1287,O,W2),'<'(W2,W)))
':-'(weightInObjectTooHigh(O,W),(weightInObject(_1291,O,W2),'>'(W2,W)))
isRoom(ruinsentrance)
isLocated(player,ruinsentrance,0)
isRoom(civilisation)
isRoom(columns)
hasProperty(smallblock,takeable)
hasProperty(smallblock,stable)
hasVariable(smallblock,weight,25)
isObject(smallblock)
volume(smallblock,25)
surface(smallblock,25)
surfaceUsed(smallblock,0)
isLocated(smallblock,columns,0)
isRoom(altarroom)
hasProperty(altar,stable)
isObject(altar)
volume(altar,1)
surface(altar,50)
surfaceUsed(altar,0)
isLocated(altar,altarroom,0)
isObject(pressureplate1)
volume(pressureplate1,1)
surface(pressureplate1,50)
isLocated(pressureplate1,altarroom,0)
isObject(pressureplate2)
volume(pressureplate2,1)
surface(pressureplate2,50)
surfaceUsed(pressureplate2,0)
isLocated(pressureplate2,altarroom,0)
hasProperty(watercontainer1,takeable)
hasVariable(watercontainer1,weight,50)
isObject(watercontainer1)
volume(watercontainer1,25)
capacity(watercontainer1,25)
capacityUsed(watercontainer1,0)
isLocated(watercontainer1,pressureplate1,1)
isRoom(treasureroom)
hasProperty(chest,takeable)
hasProperty(chest,closablecontainer)
hasProperty(chest,locked)
hasVariable(chest,weight,25)
isClosed(chest,true)
isObject(chest)
volume(chest,50)
capacity(chest,50)
isLocated(chest,treasureroom,0)
hasProperty(treasure,takeable)
hasVariable(treasure,weight,25)
isObject(treasure)
volume(treasure,50)
isLocated(treasure,chest,0)
isRoom(storageroom)
hasProperty(cupboard,closablecontainer)
hasProperty(cupboard,stable)
isClosed(cupboard,true)
isObject(cupboard)
volume(cupboard,1)
capacity(cupboard,50)
surface(cupboard,50)
surfaceUsed(cupboard,0)
isLocated(cupboard,storageroom,0)
hasProperty(watercontainer2,takeable)
hasVariable(watercontainer2,weight,10)
isObject(watercontainer2)
volume(watercontainer2,25)
capacity(watercontainer2,25)
capacityUsed(watercontainer2,0)
isLocated(watercontainer2,cupboard,0)
hasProperty(plank,takeable)
hasVariable(plank,weight,25)
isObject(plank)
volume(plank,50)
surface(plank,50)
surfaceUsed(plank,0)
isLocated(plank,storageroom,0)
isRoom(attic)
hasProperty(key,takeable)
hasVariable(key,weight,1)
isObject(key)
volume(key,10)
isLocated(key,attic,0)
isRoom(rockytunnel)
hasProperty(mediumblock,takeable)
hasProperty(mediumblock,stable)
hasVariable(mediumblock,weight,50)
isObject(mediumblock)
volume(mediumblock,50)
surface(mediumblock,50)
surfaceUsed(mediumblock,0)
isLocated(mediumblock,rockytunnel,0)
isRoom(eastriver)
isObject(river)
volume(river,1)
isLocated(river,eastriver,0)
isObject(riversupports)
volume(riversupports,0)
surface(riversupports,50)
surfaceUsed(riversupports,0)
isLocated(riversupports,river,0)
isRoom(waterfallcavern)
isObject(waterfall)
volume(waterfall,1)
below(waterfall,100)
belowUsed(waterfall,0)
isLocated(waterfall,waterfallcavern,0)
isRoom(westriver)
isRoom(ancientquarry)
hasProperty(largeblock,takeable)
hasProperty(largeblock,stable)
hasVariable(largeblock,weight,75)
isObject(largeblock)
volume(largeblock,75)
surface(largeblock,75)
surfaceUsed(largeblock,0)
isLocated(largeblock,ancientquarry,0)
isRoom(deadroom)
surfaceUsed(pressureplate1,25)
capacityUsed(chest,50)
capacityUsed(cupboard,25)

======================================================================================
Processing user input: w
======================================================================================


DEBUG: PRSA: MOVE, PRSO: WEST, PRSI: null

DEBUG: ATTEMPT TO PERFORM ACTION ON PRSI

DEBUG: FAILED TO PERFORM ACTION ON PRSI

DEBUG: ATTEMPT TO PERFORM ACTION ON PRSO

DEBUG: FAILED TO PERFORM ACTION ON PRSO

DEBUG: ATTEMPT TO PERFORM GENERIC ACTION ON PRSA
DEBUG: Corrected Verb: move

DEBUG: Removed clause isLocated(player,ruinsentrance,0)

DEBUG: Adding clause isLocated(player,rockytunnel,0)
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [climbableStack(3,storageroom)]

DEBUG: Querying: climbableStack(3,storageroom)
DEBUG: QueryCond not satisfied since query: climbableStack(3,storageroom) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [isLocated(plank,riversupports,1)]

DEBUG: Querying: isLocated(plank,riversupports,1)
DEBUG: QueryCond not satisfied since query: isLocated(plank,riversupports,1) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate1,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate1,50)
DEBUG: Solution: weightOnObjectAtLeast(pressureplate1,50) - bindings: yes.
DEBUG: QueryCond satisfied
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate2,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate2,50)
DEBUG: QueryCond not satisfied since query: weightOnObjectAtLeast(pressureplate2,50) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate1,50), weightOnObjectAtLeast(pressureplate2,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate1,50)
DEBUG: Solution: weightOnObjectAtLeast(pressureplate1,50) - bindings: yes.

DEBUG: Querying: weightOnObjectAtLeast(pressureplate2,50)
DEBUG: QueryCond not satisfied since query: weightOnObjectAtLeast(pressureplate2,50) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [isLocated(treasure,player,0)]

DEBUG: Querying: isLocated(treasure,player,0)
DEBUG: QueryCond not satisfied since query: isLocated(treasure,player,0) has no solutions

Knowledge Base:
':-'(notMember(_1069,[]),'!')
':-'(notMember(X,[Head|Tail]),('\='(X,Head),notMember(X,Tail)))
isObject(player)
capacity(player,2147483647)
capacityUsed(player,0)
':-'(inScope(A),(isObject(A),isLocated(A,B,_1075),isLocated(player,B,_1076),'!'))
':-'(inScope(A),(isObject(A),isLocated(A,B,0),hasProperty(B,closablecontainer),'!',isClosed(B,false),inScope(B)))
':-'(inScope(A),(isObject(A),isLocated(A,B,_1081),inScope(B)))
':-'(putIn(A,B),(inScope(A),inScope(B),'\='(A,B),isLocated(A,C,_1085),'\='(A,C),hasProperty(B,closablecontainer),'!',isClosed(B,false),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putIn(A,B),(inScope(A),inScope(B),'\='(A,B),isLocated(A,C,_1093),'\='(A,C),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putInIgnoreScope(A,B),('\='(A,B),isLocated(A,C,_1101),'\='(A,C),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putOn(A,B),(inScope(A),inScope(B),'\='(A,B),volume(A,X),surface(B,Y),surfaceUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putOnIgnoreScope(A,B),('\='(A,B),volume(A,X),surface(B,Y),surfaceUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putBelow(A,B),(inScope(A),inScope(B),'\='(A,B),volume(A,X),below(B,Y),belowUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putBelowIgnoreScope(A,B),('\='(A,B),volume(A,X),below(B,Y),belowUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(outOfScope(A),not(inScope(A)))
':-'(noCapacity(A),not(capacity(A,_1132)))
':-'(noSurface(A),not(surface(A,_1134)))
':-'(noBelow(A),not(below(A,_1136)))
':-'(cantFitCapacity(A,B),(volume(A,X),capacity(B,Y),capacityUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(cantFitSurface(A,B),(volume(A,X),surface(B,Y),surfaceUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(cantFitBelow(A,B),(volume(A,X),below(B,Y),belowUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(tooBigCapacity(A,B),(volume(A,X),capacity(B,Y),'>'(X,Y)))
':-'(tooBigSurface(A,B),(volume(A,X),surface(B,Y),'>'(X,Y)))
':-'(tooBigBelow(A,B),(volume(A,X),below(B,Y),'>'(X,Y)))
':-'(sameObject(A,B),'='(A,B))
':-'(notObject(A),not(isObject(A)))
':-'(targetClosed(A),(hasProperty(A,closablecontainer),isClosed(A,true)))
':-'(stableStack([O],1,R),(isRoom(R),isObject(O),isLocated(O,R,0),hasProperty(O,stable)))
':-'(stableStack([H1,H2|T],M,R),(isObject(H1),isLocated(H1,H2,1),hasProperty(H1,stable),stableStack([H2|T],N,R),is(M,'+'(N,1))))
':-'(stack([O],1,R),(isRoom(R),isObject(O),isLocated(O,R,0)))
':-'(stack([H1,H2|T],M,R),(isObject(H1),isLocated(H1,H2,1),stack([H2|T],N,R),is(M,'+'(N,1))))
':-'(climbableStack(N,R),stableStack(_1186,N,R))
':-'(notClimbableStackError(N,R),(stack(_1189,N,R),not(climbableStack(N,R))))
':-'(totalWeight(O,W,X,Y),(selfWeight(O,W2),setof(X,isLocated(X,O,0),IN),setof(Y,isLocated(Y,O,1),ON),'!',weightInObject(X,O,W3),weightOnObject(Y,O,W4),is(W,'+'('+'(W2,W3),W4))))
':-'(totalWeight(O,W,X,[]),(selfWeight(O,W2),setof(X,isLocated(X,O,0),IN),'!',weightInObject(X,O,W3),is(W,'+'(W2,W3))))
':-'(totalWeight(O,W,[],Y),(selfWeight(O,W2),setof(Y,isLocated(Y,O,1),ON),'!',weightOnObject(Y,O,W3),is(W,'+'(W2,W3))))
':-'(totalWeight(O,W,[],[]),selfWeight(O,W))
':-'(selfWeight(O,W),hasVariable(O,weight,W))
':-'(selfWeight(O,0),(isObject(O),not(hasVariable(O,weight,W))))
':-'(weightOnObject(L,O,W),(setof(X,isLocated(X,O,1),L),'!',weightOnObjectAux(L,O,W)))
':-'(weightOnObjectAux([H|T],O,W),(notMember(H,T),isLocated(H,O,1),'!',weightOnObjectAux(T,O,W3),totalWeight(H,W2,_1227,_1228),is(W,'+'(W2,W3))))
weightOnObjectAux(_1229,O,0)
':-'(weightInObject(L,O,W),(setof(X,isLocated(X,O,0),L),'!',weightInObjectAux(L,O,W)))
':-'(weightInObjectAux([H|T],O,W),(notMember(H,T),isLocated(H,O,0),'!',weightInObjectAux(T,O,W3),totalWeight(H,W2,_1241,_1242),is(W,'+'(W2,W3))))
weightInObjectAux(_1243,O,0)
':-'(weightOnObjectEquals(O,W),(weightOnObject(_1247,O,W2),'='(W2,W)))
':-'(weightOnObjectAtLeast(O,W),(weightOnObject(_1251,O,W2),'>='(W2,W)))
':-'(weightOnObjectAtMost(O,W),(weightOnObject(_1255,O,W2),'=<'(W2,W)))
':-'(weightInObjectEquals(O,W),(weightInObject(_1259,O,W2),'='(W2,W)))
':-'(weightInObjectAtLeast(O,W),(weightInObject(_1263,O,W2),'>='(W2,W)))
':-'(weightInObjectAtMost(O,W),(weightInObject(_1267,O,W2),'=<'(W2,W)))
':-'(weightOnObjectNotEquals(O,W),(weightOnObject(_1271,O,W2),'\='(W2,W)))
':-'(weightOnObjectTooLow(O,W),(weightOnObject(_1275,O,W2),'<'(W2,W)))
':-'(weightOnObjectTooHigh(O,W),(weightOnObject(_1279,O,W2),'>'(W2,W)))
':-'(weightInObjectNotEquals(O,W),(weightInObject(_1283,O,W2),'\='(W2,W)))
':-'(weightInObjectTooLow(O,W),(weightInObject(_1287,O,W2),'<'(W2,W)))
':-'(weightInObjectTooHigh(O,W),(weightInObject(_1291,O,W2),'>'(W2,W)))
isRoom(ruinsentrance)
isRoom(civilisation)
isRoom(columns)
hasProperty(smallblock,takeable)
hasProperty(smallblock,stable)
hasVariable(smallblock,weight,25)
isObject(smallblock)
volume(smallblock,25)
surface(smallblock,25)
surfaceUsed(smallblock,0)
isLocated(smallblock,columns,0)
isRoom(altarroom)
hasProperty(altar,stable)
isObject(altar)
volume(altar,1)
surface(altar,50)
surfaceUsed(altar,0)
isLocated(altar,altarroom,0)
isObject(pressureplate1)
volume(pressureplate1,1)
surface(pressureplate1,50)
isLocated(pressureplate1,altarroom,0)
isObject(pressureplate2)
volume(pressureplate2,1)
surface(pressureplate2,50)
surfaceUsed(pressureplate2,0)
isLocated(pressureplate2,altarroom,0)
hasProperty(watercontainer1,takeable)
hasVariable(watercontainer1,weight,50)
isObject(watercontainer1)
volume(watercontainer1,25)
capacity(watercontainer1,25)
capacityUsed(watercontainer1,0)
isLocated(watercontainer1,pressureplate1,1)
isRoom(treasureroom)
hasProperty(chest,takeable)
hasProperty(chest,closablecontainer)
hasProperty(chest,locked)
hasVariable(chest,weight,25)
isClosed(chest,true)
isObject(chest)
volume(chest,50)
capacity(chest,50)
isLocated(chest,treasureroom,0)
hasProperty(treasure,takeable)
hasVariable(treasure,weight,25)
isObject(treasure)
volume(treasure,50)
isLocated(treasure,chest,0)
isRoom(storageroom)
hasProperty(cupboard,closablecontainer)
hasProperty(cupboard,stable)
isClosed(cupboard,true)
isObject(cupboard)
volume(cupboard,1)
capacity(cupboard,50)
surface(cupboard,50)
surfaceUsed(cupboard,0)
isLocated(cupboard,storageroom,0)
hasProperty(watercontainer2,takeable)
hasVariable(watercontainer2,weight,10)
isObject(watercontainer2)
volume(watercontainer2,25)
capacity(watercontainer2,25)
capacityUsed(watercontainer2,0)
isLocated(watercontainer2,cupboard,0)
hasProperty(plank,takeable)
hasVariable(plank,weight,25)
isObject(plank)
volume(plank,50)
surface(plank,50)
surfaceUsed(plank,0)
isLocated(plank,storageroom,0)
isRoom(attic)
hasProperty(key,takeable)
hasVariable(key,weight,1)
isObject(key)
volume(key,10)
isLocated(key,attic,0)
isRoom(rockytunnel)
hasProperty(mediumblock,takeable)
hasProperty(mediumblock,stable)
hasVariable(mediumblock,weight,50)
isObject(mediumblock)
volume(mediumblock,50)
surface(mediumblock,50)
surfaceUsed(mediumblock,0)
isLocated(mediumblock,rockytunnel,0)
isRoom(eastriver)
isObject(river)
volume(river,1)
isLocated(river,eastriver,0)
isObject(riversupports)
volume(riversupports,0)
surface(riversupports,50)
surfaceUsed(riversupports,0)
isLocated(riversupports,river,0)
isRoom(waterfallcavern)
isObject(waterfall)
volume(waterfall,1)
below(waterfall,100)
belowUsed(waterfall,0)
isLocated(waterfall,waterfallcavern,0)
isRoom(westriver)
isRoom(ancientquarry)
hasProperty(largeblock,takeable)
hasProperty(largeblock,stable)
hasVariable(largeblock,weight,75)
isObject(largeblock)
volume(largeblock,75)
surface(largeblock,75)
surfaceUsed(largeblock,0)
isLocated(largeblock,ancientquarry,0)
isRoom(deadroom)
surfaceUsed(pressureplate1,25)
capacityUsed(chest,50)
capacityUsed(cupboard,25)
isLocated(player,rockytunnel,0)

======================================================================================
Processing user input: take block
======================================================================================

DEBUG: Pre-process input lemmas: [take, block]
DEBUG: Pre-process input posTags: [VB, NNP]
DEBUG: Adding [block] to matched objects
DEBUG: Adding 1 to matched indices
DEBUG: removeStart: [1]
DEBUG: removeEnd: [1]
DEBUG: Pre-processed: take item1
DEBUG: Lemmas: [take, item]
DEBUG: Verb found: TAKE
DEBUG: PRSA set to: TAKE

DEBUG: PRSA: TAKE, PRSO: MEDIUMBLOCK, PRSI: null

DEBUG: ATTEMPT TO PERFORM ACTION ON PRSI

DEBUG: FAILED TO PERFORM ACTION ON PRSI

DEBUG: ATTEMPT TO PERFORM ACTION ON PRSO

DEBUG: FAILED TO PERFORM ACTION ON PRSO

DEBUG: ATTEMPT TO PERFORM GENERIC ACTION ON PRSA
DEBUG: Corrected Verb: take

DEBUG: Querying: isObject(rockytunnel)

DEBUG: Removed clause isLocated(mediumblock,rockytunnel,0)

DEBUG: Adding clause isLocated(mediumblock,player,0)
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [climbableStack(3,storageroom)]

DEBUG: Querying: climbableStack(3,storageroom)
DEBUG: QueryCond not satisfied since query: climbableStack(3,storageroom) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [isLocated(plank,riversupports,1)]

DEBUG: Querying: isLocated(plank,riversupports,1)
DEBUG: QueryCond not satisfied since query: isLocated(plank,riversupports,1) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate1,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate1,50)
DEBUG: Solution: weightOnObjectAtLeast(pressureplate1,50) - bindings: yes.
DEBUG: QueryCond satisfied
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate2,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate2,50)
DEBUG: QueryCond not satisfied since query: weightOnObjectAtLeast(pressureplate2,50) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate1,50), weightOnObjectAtLeast(pressureplate2,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate1,50)
DEBUG: Solution: weightOnObjectAtLeast(pressureplate1,50) - bindings: yes.

DEBUG: Querying: weightOnObjectAtLeast(pressureplate2,50)
DEBUG: QueryCond not satisfied since query: weightOnObjectAtLeast(pressureplate2,50) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [isLocated(treasure,player,0)]

DEBUG: Querying: isLocated(treasure,player,0)
DEBUG: QueryCond not satisfied since query: isLocated(treasure,player,0) has no solutions

Knowledge Base:
':-'(notMember(_1069,[]),'!')
':-'(notMember(X,[Head|Tail]),('\='(X,Head),notMember(X,Tail)))
isObject(player)
capacity(player,2147483647)
capacityUsed(player,0)
':-'(inScope(A),(isObject(A),isLocated(A,B,_1075),isLocated(player,B,_1076),'!'))
':-'(inScope(A),(isObject(A),isLocated(A,B,0),hasProperty(B,closablecontainer),'!',isClosed(B,false),inScope(B)))
':-'(inScope(A),(isObject(A),isLocated(A,B,_1081),inScope(B)))
':-'(putIn(A,B),(inScope(A),inScope(B),'\='(A,B),isLocated(A,C,_1085),'\='(A,C),hasProperty(B,closablecontainer),'!',isClosed(B,false),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putIn(A,B),(inScope(A),inScope(B),'\='(A,B),isLocated(A,C,_1093),'\='(A,C),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putInIgnoreScope(A,B),('\='(A,B),isLocated(A,C,_1101),'\='(A,C),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putOn(A,B),(inScope(A),inScope(B),'\='(A,B),volume(A,X),surface(B,Y),surfaceUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putOnIgnoreScope(A,B),('\='(A,B),volume(A,X),surface(B,Y),surfaceUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putBelow(A,B),(inScope(A),inScope(B),'\='(A,B),volume(A,X),below(B,Y),belowUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putBelowIgnoreScope(A,B),('\='(A,B),volume(A,X),below(B,Y),belowUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(outOfScope(A),not(inScope(A)))
':-'(noCapacity(A),not(capacity(A,_1132)))
':-'(noSurface(A),not(surface(A,_1134)))
':-'(noBelow(A),not(below(A,_1136)))
':-'(cantFitCapacity(A,B),(volume(A,X),capacity(B,Y),capacityUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(cantFitSurface(A,B),(volume(A,X),surface(B,Y),surfaceUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(cantFitBelow(A,B),(volume(A,X),below(B,Y),belowUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(tooBigCapacity(A,B),(volume(A,X),capacity(B,Y),'>'(X,Y)))
':-'(tooBigSurface(A,B),(volume(A,X),surface(B,Y),'>'(X,Y)))
':-'(tooBigBelow(A,B),(volume(A,X),below(B,Y),'>'(X,Y)))
':-'(sameObject(A,B),'='(A,B))
':-'(notObject(A),not(isObject(A)))
':-'(targetClosed(A),(hasProperty(A,closablecontainer),isClosed(A,true)))
':-'(stableStack([O],1,R),(isRoom(R),isObject(O),isLocated(O,R,0),hasProperty(O,stable)))
':-'(stableStack([H1,H2|T],M,R),(isObject(H1),isLocated(H1,H2,1),hasProperty(H1,stable),stableStack([H2|T],N,R),is(M,'+'(N,1))))
':-'(stack([O],1,R),(isRoom(R),isObject(O),isLocated(O,R,0)))
':-'(stack([H1,H2|T],M,R),(isObject(H1),isLocated(H1,H2,1),stack([H2|T],N,R),is(M,'+'(N,1))))
':-'(climbableStack(N,R),stableStack(_1186,N,R))
':-'(notClimbableStackError(N,R),(stack(_1189,N,R),not(climbableStack(N,R))))
':-'(totalWeight(O,W,X,Y),(selfWeight(O,W2),setof(X,isLocated(X,O,0),IN),setof(Y,isLocated(Y,O,1),ON),'!',weightInObject(X,O,W3),weightOnObject(Y,O,W4),is(W,'+'('+'(W2,W3),W4))))
':-'(totalWeight(O,W,X,[]),(selfWeight(O,W2),setof(X,isLocated(X,O,0),IN),'!',weightInObject(X,O,W3),is(W,'+'(W2,W3))))
':-'(totalWeight(O,W,[],Y),(selfWeight(O,W2),setof(Y,isLocated(Y,O,1),ON),'!',weightOnObject(Y,O,W3),is(W,'+'(W2,W3))))
':-'(totalWeight(O,W,[],[]),selfWeight(O,W))
':-'(selfWeight(O,W),hasVariable(O,weight,W))
':-'(selfWeight(O,0),(isObject(O),not(hasVariable(O,weight,W))))
':-'(weightOnObject(L,O,W),(setof(X,isLocated(X,O,1),L),'!',weightOnObjectAux(L,O,W)))
':-'(weightOnObjectAux([H|T],O,W),(notMember(H,T),isLocated(H,O,1),'!',weightOnObjectAux(T,O,W3),totalWeight(H,W2,_1227,_1228),is(W,'+'(W2,W3))))
weightOnObjectAux(_1229,O,0)
':-'(weightInObject(L,O,W),(setof(X,isLocated(X,O,0),L),'!',weightInObjectAux(L,O,W)))
':-'(weightInObjectAux([H|T],O,W),(notMember(H,T),isLocated(H,O,0),'!',weightInObjectAux(T,O,W3),totalWeight(H,W2,_1241,_1242),is(W,'+'(W2,W3))))
weightInObjectAux(_1243,O,0)
':-'(weightOnObjectEquals(O,W),(weightOnObject(_1247,O,W2),'='(W2,W)))
':-'(weightOnObjectAtLeast(O,W),(weightOnObject(_1251,O,W2),'>='(W2,W)))
':-'(weightOnObjectAtMost(O,W),(weightOnObject(_1255,O,W2),'=<'(W2,W)))
':-'(weightInObjectEquals(O,W),(weightInObject(_1259,O,W2),'='(W2,W)))
':-'(weightInObjectAtLeast(O,W),(weightInObject(_1263,O,W2),'>='(W2,W)))
':-'(weightInObjectAtMost(O,W),(weightInObject(_1267,O,W2),'=<'(W2,W)))
':-'(weightOnObjectNotEquals(O,W),(weightOnObject(_1271,O,W2),'\='(W2,W)))
':-'(weightOnObjectTooLow(O,W),(weightOnObject(_1275,O,W2),'<'(W2,W)))
':-'(weightOnObjectTooHigh(O,W),(weightOnObject(_1279,O,W2),'>'(W2,W)))
':-'(weightInObjectNotEquals(O,W),(weightInObject(_1283,O,W2),'\='(W2,W)))
':-'(weightInObjectTooLow(O,W),(weightInObject(_1287,O,W2),'<'(W2,W)))
':-'(weightInObjectTooHigh(O,W),(weightInObject(_1291,O,W2),'>'(W2,W)))
isRoom(ruinsentrance)
isRoom(civilisation)
isRoom(columns)
hasProperty(smallblock,takeable)
hasProperty(smallblock,stable)
hasVariable(smallblock,weight,25)
isObject(smallblock)
volume(smallblock,25)
surface(smallblock,25)
surfaceUsed(smallblock,0)
isLocated(smallblock,columns,0)
isRoom(altarroom)
hasProperty(altar,stable)
isObject(altar)
volume(altar,1)
surface(altar,50)
surfaceUsed(altar,0)
isLocated(altar,altarroom,0)
isObject(pressureplate1)
volume(pressureplate1,1)
surface(pressureplate1,50)
isLocated(pressureplate1,altarroom,0)
isObject(pressureplate2)
volume(pressureplate2,1)
surface(pressureplate2,50)
surfaceUsed(pressureplate2,0)
isLocated(pressureplate2,altarroom,0)
hasProperty(watercontainer1,takeable)
hasVariable(watercontainer1,weight,50)
isObject(watercontainer1)
volume(watercontainer1,25)
capacity(watercontainer1,25)
capacityUsed(watercontainer1,0)
isLocated(watercontainer1,pressureplate1,1)
isRoom(treasureroom)
hasProperty(chest,takeable)
hasProperty(chest,closablecontainer)
hasProperty(chest,locked)
hasVariable(chest,weight,25)
isClosed(chest,true)
isObject(chest)
volume(chest,50)
capacity(chest,50)
isLocated(chest,treasureroom,0)
hasProperty(treasure,takeable)
hasVariable(treasure,weight,25)
isObject(treasure)
volume(treasure,50)
isLocated(treasure,chest,0)
isRoom(storageroom)
hasProperty(cupboard,closablecontainer)
hasProperty(cupboard,stable)
isClosed(cupboard,true)
isObject(cupboard)
volume(cupboard,1)
capacity(cupboard,50)
surface(cupboard,50)
surfaceUsed(cupboard,0)
isLocated(cupboard,storageroom,0)
hasProperty(watercontainer2,takeable)
hasVariable(watercontainer2,weight,10)
isObject(watercontainer2)
volume(watercontainer2,25)
capacity(watercontainer2,25)
capacityUsed(watercontainer2,0)
isLocated(watercontainer2,cupboard,0)
hasProperty(plank,takeable)
hasVariable(plank,weight,25)
isObject(plank)
volume(plank,50)
surface(plank,50)
surfaceUsed(plank,0)
isLocated(plank,storageroom,0)
isRoom(attic)
hasProperty(key,takeable)
hasVariable(key,weight,1)
isObject(key)
volume(key,10)
isLocated(key,attic,0)
isRoom(rockytunnel)
hasProperty(mediumblock,takeable)
hasProperty(mediumblock,stable)
hasVariable(mediumblock,weight,50)
isObject(mediumblock)
volume(mediumblock,50)
surface(mediumblock,50)
surfaceUsed(mediumblock,0)
isRoom(eastriver)
isObject(river)
volume(river,1)
isLocated(river,eastriver,0)
isObject(riversupports)
volume(riversupports,0)
surface(riversupports,50)
surfaceUsed(riversupports,0)
isLocated(riversupports,river,0)
isRoom(waterfallcavern)
isObject(waterfall)
volume(waterfall,1)
below(waterfall,100)
belowUsed(waterfall,0)
isLocated(waterfall,waterfallcavern,0)
isRoom(westriver)
isRoom(ancientquarry)
hasProperty(largeblock,takeable)
hasProperty(largeblock,stable)
hasVariable(largeblock,weight,75)
isObject(largeblock)
volume(largeblock,75)
surface(largeblock,75)
surfaceUsed(largeblock,0)
isLocated(largeblock,ancientquarry,0)
isRoom(deadroom)
surfaceUsed(pressureplate1,25)
capacityUsed(chest,50)
capacityUsed(cupboard,25)
isLocated(player,rockytunnel,0)
isLocated(mediumblock,player,0)

======================================================================================
Processing user input: take block
======================================================================================

DEBUG: Pre-process input lemmas: [take, block]
DEBUG: Pre-process input posTags: [VB, NNP]
DEBUG: Adding [block] to matched objects
DEBUG: Adding 1 to matched indices
DEBUG: removeStart: [1]
DEBUG: removeEnd: [1]
DEBUG: Pre-processed: take item1
DEBUG: Lemmas: [take, item]
DEBUG: Verb found: TAKE
DEBUG: PRSA set to: TAKE

DEBUG: PRSA: TAKE, PRSO: MEDIUMBLOCK, PRSI: null

DEBUG: ATTEMPT TO PERFORM ACTION ON PRSI

DEBUG: FAILED TO PERFORM ACTION ON PRSI

DEBUG: ATTEMPT TO PERFORM ACTION ON PRSO

DEBUG: FAILED TO PERFORM ACTION ON PRSO

DEBUG: ATTEMPT TO PERFORM GENERIC ACTION ON PRSA
DEBUG: Corrected Verb: take
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [climbableStack(3,storageroom)]

DEBUG: Querying: climbableStack(3,storageroom)
DEBUG: QueryCond not satisfied since query: climbableStack(3,storageroom) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [isLocated(plank,riversupports,1)]

DEBUG: Querying: isLocated(plank,riversupports,1)
DEBUG: QueryCond not satisfied since query: isLocated(plank,riversupports,1) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate1,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate1,50)
DEBUG: Solution: weightOnObjectAtLeast(pressureplate1,50) - bindings: yes.
DEBUG: QueryCond satisfied
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate2,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate2,50)
DEBUG: QueryCond not satisfied since query: weightOnObjectAtLeast(pressureplate2,50) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate1,50), weightOnObjectAtLeast(pressureplate2,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate1,50)
DEBUG: Solution: weightOnObjectAtLeast(pressureplate1,50) - bindings: yes.

DEBUG: Querying: weightOnObjectAtLeast(pressureplate2,50)
DEBUG: QueryCond not satisfied since query: weightOnObjectAtLeast(pressureplate2,50) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [isLocated(treasure,player,0)]

DEBUG: Querying: isLocated(treasure,player,0)
DEBUG: QueryCond not satisfied since query: isLocated(treasure,player,0) has no solutions

Knowledge Base:
':-'(notMember(_1069,[]),'!')
':-'(notMember(X,[Head|Tail]),('\='(X,Head),notMember(X,Tail)))
isObject(player)
capacity(player,2147483647)
capacityUsed(player,0)
':-'(inScope(A),(isObject(A),isLocated(A,B,_1075),isLocated(player,B,_1076),'!'))
':-'(inScope(A),(isObject(A),isLocated(A,B,0),hasProperty(B,closablecontainer),'!',isClosed(B,false),inScope(B)))
':-'(inScope(A),(isObject(A),isLocated(A,B,_1081),inScope(B)))
':-'(putIn(A,B),(inScope(A),inScope(B),'\='(A,B),isLocated(A,C,_1085),'\='(A,C),hasProperty(B,closablecontainer),'!',isClosed(B,false),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putIn(A,B),(inScope(A),inScope(B),'\='(A,B),isLocated(A,C,_1093),'\='(A,C),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putInIgnoreScope(A,B),('\='(A,B),isLocated(A,C,_1101),'\='(A,C),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putOn(A,B),(inScope(A),inScope(B),'\='(A,B),volume(A,X),surface(B,Y),surfaceUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putOnIgnoreScope(A,B),('\='(A,B),volume(A,X),surface(B,Y),surfaceUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putBelow(A,B),(inScope(A),inScope(B),'\='(A,B),volume(A,X),below(B,Y),belowUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putBelowIgnoreScope(A,B),('\='(A,B),volume(A,X),below(B,Y),belowUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(outOfScope(A),not(inScope(A)))
':-'(noCapacity(A),not(capacity(A,_1132)))
':-'(noSurface(A),not(surface(A,_1134)))
':-'(noBelow(A),not(below(A,_1136)))
':-'(cantFitCapacity(A,B),(volume(A,X),capacity(B,Y),capacityUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(cantFitSurface(A,B),(volume(A,X),surface(B,Y),surfaceUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(cantFitBelow(A,B),(volume(A,X),below(B,Y),belowUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(tooBigCapacity(A,B),(volume(A,X),capacity(B,Y),'>'(X,Y)))
':-'(tooBigSurface(A,B),(volume(A,X),surface(B,Y),'>'(X,Y)))
':-'(tooBigBelow(A,B),(volume(A,X),below(B,Y),'>'(X,Y)))
':-'(sameObject(A,B),'='(A,B))
':-'(notObject(A),not(isObject(A)))
':-'(targetClosed(A),(hasProperty(A,closablecontainer),isClosed(A,true)))
':-'(stableStack([O],1,R),(isRoom(R),isObject(O),isLocated(O,R,0),hasProperty(O,stable)))
':-'(stableStack([H1,H2|T],M,R),(isObject(H1),isLocated(H1,H2,1),hasProperty(H1,stable),stableStack([H2|T],N,R),is(M,'+'(N,1))))
':-'(stack([O],1,R),(isRoom(R),isObject(O),isLocated(O,R,0)))
':-'(stack([H1,H2|T],M,R),(isObject(H1),isLocated(H1,H2,1),stack([H2|T],N,R),is(M,'+'(N,1))))
':-'(climbableStack(N,R),stableStack(_1186,N,R))
':-'(notClimbableStackError(N,R),(stack(_1189,N,R),not(climbableStack(N,R))))
':-'(totalWeight(O,W,X,Y),(selfWeight(O,W2),setof(X,isLocated(X,O,0),IN),setof(Y,isLocated(Y,O,1),ON),'!',weightInObject(X,O,W3),weightOnObject(Y,O,W4),is(W,'+'('+'(W2,W3),W4))))
':-'(totalWeight(O,W,X,[]),(selfWeight(O,W2),setof(X,isLocated(X,O,0),IN),'!',weightInObject(X,O,W3),is(W,'+'(W2,W3))))
':-'(totalWeight(O,W,[],Y),(selfWeight(O,W2),setof(Y,isLocated(Y,O,1),ON),'!',weightOnObject(Y,O,W3),is(W,'+'(W2,W3))))
':-'(totalWeight(O,W,[],[]),selfWeight(O,W))
':-'(selfWeight(O,W),hasVariable(O,weight,W))
':-'(selfWeight(O,0),(isObject(O),not(hasVariable(O,weight,W))))
':-'(weightOnObject(L,O,W),(setof(X,isLocated(X,O,1),L),'!',weightOnObjectAux(L,O,W)))
':-'(weightOnObjectAux([H|T],O,W),(notMember(H,T),isLocated(H,O,1),'!',weightOnObjectAux(T,O,W3),totalWeight(H,W2,_1227,_1228),is(W,'+'(W2,W3))))
weightOnObjectAux(_1229,O,0)
':-'(weightInObject(L,O,W),(setof(X,isLocated(X,O,0),L),'!',weightInObjectAux(L,O,W)))
':-'(weightInObjectAux([H|T],O,W),(notMember(H,T),isLocated(H,O,0),'!',weightInObjectAux(T,O,W3),totalWeight(H,W2,_1241,_1242),is(W,'+'(W2,W3))))
weightInObjectAux(_1243,O,0)
':-'(weightOnObjectEquals(O,W),(weightOnObject(_1247,O,W2),'='(W2,W)))
':-'(weightOnObjectAtLeast(O,W),(weightOnObject(_1251,O,W2),'>='(W2,W)))
':-'(weightOnObjectAtMost(O,W),(weightOnObject(_1255,O,W2),'=<'(W2,W)))
':-'(weightInObjectEquals(O,W),(weightInObject(_1259,O,W2),'='(W2,W)))
':-'(weightInObjectAtLeast(O,W),(weightInObject(_1263,O,W2),'>='(W2,W)))
':-'(weightInObjectAtMost(O,W),(weightInObject(_1267,O,W2),'=<'(W2,W)))
':-'(weightOnObjectNotEquals(O,W),(weightOnObject(_1271,O,W2),'\='(W2,W)))
':-'(weightOnObjectTooLow(O,W),(weightOnObject(_1275,O,W2),'<'(W2,W)))
':-'(weightOnObjectTooHigh(O,W),(weightOnObject(_1279,O,W2),'>'(W2,W)))
':-'(weightInObjectNotEquals(O,W),(weightInObject(_1283,O,W2),'\='(W2,W)))
':-'(weightInObjectTooLow(O,W),(weightInObject(_1287,O,W2),'<'(W2,W)))
':-'(weightInObjectTooHigh(O,W),(weightInObject(_1291,O,W2),'>'(W2,W)))
isRoom(ruinsentrance)
isRoom(civilisation)
isRoom(columns)
hasProperty(smallblock,takeable)
hasProperty(smallblock,stable)
hasVariable(smallblock,weight,25)
isObject(smallblock)
volume(smallblock,25)
surface(smallblock,25)
surfaceUsed(smallblock,0)
isLocated(smallblock,columns,0)
isRoom(altarroom)
hasProperty(altar,stable)
isObject(altar)
volume(altar,1)
surface(altar,50)
surfaceUsed(altar,0)
isLocated(altar,altarroom,0)
isObject(pressureplate1)
volume(pressureplate1,1)
surface(pressureplate1,50)
isLocated(pressureplate1,altarroom,0)
isObject(pressureplate2)
volume(pressureplate2,1)
surface(pressureplate2,50)
surfaceUsed(pressureplate2,0)
isLocated(pressureplate2,altarroom,0)
hasProperty(watercontainer1,takeable)
hasVariable(watercontainer1,weight,50)
isObject(watercontainer1)
volume(watercontainer1,25)
capacity(watercontainer1,25)
capacityUsed(watercontainer1,0)
isLocated(watercontainer1,pressureplate1,1)
isRoom(treasureroom)
hasProperty(chest,takeable)
hasProperty(chest,closablecontainer)
hasProperty(chest,locked)
hasVariable(chest,weight,25)
isClosed(chest,true)
isObject(chest)
volume(chest,50)
capacity(chest,50)
isLocated(chest,treasureroom,0)
hasProperty(treasure,takeable)
hasVariable(treasure,weight,25)
isObject(treasure)
volume(treasure,50)
isLocated(treasure,chest,0)
isRoom(storageroom)
hasProperty(cupboard,closablecontainer)
hasProperty(cupboard,stable)
isClosed(cupboard,true)
isObject(cupboard)
volume(cupboard,1)
capacity(cupboard,50)
surface(cupboard,50)
surfaceUsed(cupboard,0)
isLocated(cupboard,storageroom,0)
hasProperty(watercontainer2,takeable)
hasVariable(watercontainer2,weight,10)
isObject(watercontainer2)
volume(watercontainer2,25)
capacity(watercontainer2,25)
capacityUsed(watercontainer2,0)
isLocated(watercontainer2,cupboard,0)
hasProperty(plank,takeable)
hasVariable(plank,weight,25)
isObject(plank)
volume(plank,50)
surface(plank,50)
surfaceUsed(plank,0)
isLocated(plank,storageroom,0)
isRoom(attic)
hasProperty(key,takeable)
hasVariable(key,weight,1)
isObject(key)
volume(key,10)
isLocated(key,attic,0)
isRoom(rockytunnel)
hasProperty(mediumblock,takeable)
hasProperty(mediumblock,stable)
hasVariable(mediumblock,weight,50)
isObject(mediumblock)
volume(mediumblock,50)
surface(mediumblock,50)
surfaceUsed(mediumblock,0)
isRoom(eastriver)
isObject(river)
volume(river,1)
isLocated(river,eastriver,0)
isObject(riversupports)
volume(riversupports,0)
surface(riversupports,50)
surfaceUsed(riversupports,0)
isLocated(riversupports,river,0)
isRoom(waterfallcavern)
isObject(waterfall)
volume(waterfall,1)
below(waterfall,100)
belowUsed(waterfall,0)
isLocated(waterfall,waterfallcavern,0)
isRoom(westriver)
isRoom(ancientquarry)
hasProperty(largeblock,takeable)
hasProperty(largeblock,stable)
hasVariable(largeblock,weight,75)
isObject(largeblock)
volume(largeblock,75)
surface(largeblock,75)
surfaceUsed(largeblock,0)
isLocated(largeblock,ancientquarry,0)
isRoom(deadroom)
surfaceUsed(pressureplate1,25)
capacityUsed(chest,50)
capacityUsed(cupboard,25)
isLocated(player,rockytunnel,0)
isLocated(mediumblock,player,0)

======================================================================================
Processing user input: take bloxk
======================================================================================

DEBUG: Pre-process input lemmas: [take, bloxk]
DEBUG: Pre-process input posTags: [VB, NN]
DEBUG: removeStart: []
DEBUG: removeEnd: []
DEBUG: Pre-processed: take bloxk
DEBUG: Lemmas: [take, bloxk]
DEBUG: Verb found: TAKE
DEBUG: PRSA set to: TAKE

DEBUG: PRSA: TAKE, PRSO: null, PRSI: null

DEBUG: ATTEMPT TO PERFORM ACTION ON PRSI

DEBUG: FAILED TO PERFORM ACTION ON PRSI

DEBUG: ATTEMPT TO PERFORM ACTION ON PRSO

DEBUG: FAILED TO PERFORM ACTION ON PRSO

DEBUG: ATTEMPT TO PERFORM GENERIC ACTION ON PRSA
DEBUG: Corrected Verb: take
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [climbableStack(3,storageroom)]

DEBUG: Querying: climbableStack(3,storageroom)
DEBUG: QueryCond not satisfied since query: climbableStack(3,storageroom) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [isLocated(plank,riversupports,1)]

DEBUG: Querying: isLocated(plank,riversupports,1)
DEBUG: QueryCond not satisfied since query: isLocated(plank,riversupports,1) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate1,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate1,50)
DEBUG: Solution: weightOnObjectAtLeast(pressureplate1,50) - bindings: yes.
DEBUG: QueryCond satisfied
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate2,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate2,50)
DEBUG: QueryCond not satisfied since query: weightOnObjectAtLeast(pressureplate2,50) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate1,50), weightOnObjectAtLeast(pressureplate2,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate1,50)
DEBUG: Solution: weightOnObjectAtLeast(pressureplate1,50) - bindings: yes.

DEBUG: Querying: weightOnObjectAtLeast(pressureplate2,50)
DEBUG: QueryCond not satisfied since query: weightOnObjectAtLeast(pressureplate2,50) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [isLocated(treasure,player,0)]

DEBUG: Querying: isLocated(treasure,player,0)
DEBUG: QueryCond not satisfied since query: isLocated(treasure,player,0) has no solutions

Knowledge Base:
':-'(notMember(_1069,[]),'!')
':-'(notMember(X,[Head|Tail]),('\='(X,Head),notMember(X,Tail)))
isObject(player)
capacity(player,2147483647)
capacityUsed(player,0)
':-'(inScope(A),(isObject(A),isLocated(A,B,_1075),isLocated(player,B,_1076),'!'))
':-'(inScope(A),(isObject(A),isLocated(A,B,0),hasProperty(B,closablecontainer),'!',isClosed(B,false),inScope(B)))
':-'(inScope(A),(isObject(A),isLocated(A,B,_1081),inScope(B)))
':-'(putIn(A,B),(inScope(A),inScope(B),'\='(A,B),isLocated(A,C,_1085),'\='(A,C),hasProperty(B,closablecontainer),'!',isClosed(B,false),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putIn(A,B),(inScope(A),inScope(B),'\='(A,B),isLocated(A,C,_1093),'\='(A,C),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putInIgnoreScope(A,B),('\='(A,B),isLocated(A,C,_1101),'\='(A,C),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putOn(A,B),(inScope(A),inScope(B),'\='(A,B),volume(A,X),surface(B,Y),surfaceUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putOnIgnoreScope(A,B),('\='(A,B),volume(A,X),surface(B,Y),surfaceUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putBelow(A,B),(inScope(A),inScope(B),'\='(A,B),volume(A,X),below(B,Y),belowUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putBelowIgnoreScope(A,B),('\='(A,B),volume(A,X),below(B,Y),belowUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(outOfScope(A),not(inScope(A)))
':-'(noCapacity(A),not(capacity(A,_1132)))
':-'(noSurface(A),not(surface(A,_1134)))
':-'(noBelow(A),not(below(A,_1136)))
':-'(cantFitCapacity(A,B),(volume(A,X),capacity(B,Y),capacityUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(cantFitSurface(A,B),(volume(A,X),surface(B,Y),surfaceUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(cantFitBelow(A,B),(volume(A,X),below(B,Y),belowUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(tooBigCapacity(A,B),(volume(A,X),capacity(B,Y),'>'(X,Y)))
':-'(tooBigSurface(A,B),(volume(A,X),surface(B,Y),'>'(X,Y)))
':-'(tooBigBelow(A,B),(volume(A,X),below(B,Y),'>'(X,Y)))
':-'(sameObject(A,B),'='(A,B))
':-'(notObject(A),not(isObject(A)))
':-'(targetClosed(A),(hasProperty(A,closablecontainer),isClosed(A,true)))
':-'(stableStack([O],1,R),(isRoom(R),isObject(O),isLocated(O,R,0),hasProperty(O,stable)))
':-'(stableStack([H1,H2|T],M,R),(isObject(H1),isLocated(H1,H2,1),hasProperty(H1,stable),stableStack([H2|T],N,R),is(M,'+'(N,1))))
':-'(stack([O],1,R),(isRoom(R),isObject(O),isLocated(O,R,0)))
':-'(stack([H1,H2|T],M,R),(isObject(H1),isLocated(H1,H2,1),stack([H2|T],N,R),is(M,'+'(N,1))))
':-'(climbableStack(N,R),stableStack(_1186,N,R))
':-'(notClimbableStackError(N,R),(stack(_1189,N,R),not(climbableStack(N,R))))
':-'(totalWeight(O,W,X,Y),(selfWeight(O,W2),setof(X,isLocated(X,O,0),IN),setof(Y,isLocated(Y,O,1),ON),'!',weightInObject(X,O,W3),weightOnObject(Y,O,W4),is(W,'+'('+'(W2,W3),W4))))
':-'(totalWeight(O,W,X,[]),(selfWeight(O,W2),setof(X,isLocated(X,O,0),IN),'!',weightInObject(X,O,W3),is(W,'+'(W2,W3))))
':-'(totalWeight(O,W,[],Y),(selfWeight(O,W2),setof(Y,isLocated(Y,O,1),ON),'!',weightOnObject(Y,O,W3),is(W,'+'(W2,W3))))
':-'(totalWeight(O,W,[],[]),selfWeight(O,W))
':-'(selfWeight(O,W),hasVariable(O,weight,W))
':-'(selfWeight(O,0),(isObject(O),not(hasVariable(O,weight,W))))
':-'(weightOnObject(L,O,W),(setof(X,isLocated(X,O,1),L),'!',weightOnObjectAux(L,O,W)))
':-'(weightOnObjectAux([H|T],O,W),(notMember(H,T),isLocated(H,O,1),'!',weightOnObjectAux(T,O,W3),totalWeight(H,W2,_1227,_1228),is(W,'+'(W2,W3))))
weightOnObjectAux(_1229,O,0)
':-'(weightInObject(L,O,W),(setof(X,isLocated(X,O,0),L),'!',weightInObjectAux(L,O,W)))
':-'(weightInObjectAux([H|T],O,W),(notMember(H,T),isLocated(H,O,0),'!',weightInObjectAux(T,O,W3),totalWeight(H,W2,_1241,_1242),is(W,'+'(W2,W3))))
weightInObjectAux(_1243,O,0)
':-'(weightOnObjectEquals(O,W),(weightOnObject(_1247,O,W2),'='(W2,W)))
':-'(weightOnObjectAtLeast(O,W),(weightOnObject(_1251,O,W2),'>='(W2,W)))
':-'(weightOnObjectAtMost(O,W),(weightOnObject(_1255,O,W2),'=<'(W2,W)))
':-'(weightInObjectEquals(O,W),(weightInObject(_1259,O,W2),'='(W2,W)))
':-'(weightInObjectAtLeast(O,W),(weightInObject(_1263,O,W2),'>='(W2,W)))
':-'(weightInObjectAtMost(O,W),(weightInObject(_1267,O,W2),'=<'(W2,W)))
':-'(weightOnObjectNotEquals(O,W),(weightOnObject(_1271,O,W2),'\='(W2,W)))
':-'(weightOnObjectTooLow(O,W),(weightOnObject(_1275,O,W2),'<'(W2,W)))
':-'(weightOnObjectTooHigh(O,W),(weightOnObject(_1279,O,W2),'>'(W2,W)))
':-'(weightInObjectNotEquals(O,W),(weightInObject(_1283,O,W2),'\='(W2,W)))
':-'(weightInObjectTooLow(O,W),(weightInObject(_1287,O,W2),'<'(W2,W)))
':-'(weightInObjectTooHigh(O,W),(weightInObject(_1291,O,W2),'>'(W2,W)))
isRoom(ruinsentrance)
isRoom(civilisation)
isRoom(columns)
hasProperty(smallblock,takeable)
hasProperty(smallblock,stable)
hasVariable(smallblock,weight,25)
isObject(smallblock)
volume(smallblock,25)
surface(smallblock,25)
surfaceUsed(smallblock,0)
isLocated(smallblock,columns,0)
isRoom(altarroom)
hasProperty(altar,stable)
isObject(altar)
volume(altar,1)
surface(altar,50)
surfaceUsed(altar,0)
isLocated(altar,altarroom,0)
isObject(pressureplate1)
volume(pressureplate1,1)
surface(pressureplate1,50)
isLocated(pressureplate1,altarroom,0)
isObject(pressureplate2)
volume(pressureplate2,1)
surface(pressureplate2,50)
surfaceUsed(pressureplate2,0)
isLocated(pressureplate2,altarroom,0)
hasProperty(watercontainer1,takeable)
hasVariable(watercontainer1,weight,50)
isObject(watercontainer1)
volume(watercontainer1,25)
capacity(watercontainer1,25)
capacityUsed(watercontainer1,0)
isLocated(watercontainer1,pressureplate1,1)
isRoom(treasureroom)
hasProperty(chest,takeable)
hasProperty(chest,closablecontainer)
hasProperty(chest,locked)
hasVariable(chest,weight,25)
isClosed(chest,true)
isObject(chest)
volume(chest,50)
capacity(chest,50)
isLocated(chest,treasureroom,0)
hasProperty(treasure,takeable)
hasVariable(treasure,weight,25)
isObject(treasure)
volume(treasure,50)
isLocated(treasure,chest,0)
isRoom(storageroom)
hasProperty(cupboard,closablecontainer)
hasProperty(cupboard,stable)
isClosed(cupboard,true)
isObject(cupboard)
volume(cupboard,1)
capacity(cupboard,50)
surface(cupboard,50)
surfaceUsed(cupboard,0)
isLocated(cupboard,storageroom,0)
hasProperty(watercontainer2,takeable)
hasVariable(watercontainer2,weight,10)
isObject(watercontainer2)
volume(watercontainer2,25)
capacity(watercontainer2,25)
capacityUsed(watercontainer2,0)
isLocated(watercontainer2,cupboard,0)
hasProperty(plank,takeable)
hasVariable(plank,weight,25)
isObject(plank)
volume(plank,50)
surface(plank,50)
surfaceUsed(plank,0)
isLocated(plank,storageroom,0)
isRoom(attic)
hasProperty(key,takeable)
hasVariable(key,weight,1)
isObject(key)
volume(key,10)
isLocated(key,attic,0)
isRoom(rockytunnel)
hasProperty(mediumblock,takeable)
hasProperty(mediumblock,stable)
hasVariable(mediumblock,weight,50)
isObject(mediumblock)
volume(mediumblock,50)
surface(mediumblock,50)
surfaceUsed(mediumblock,0)
isRoom(eastriver)
isObject(river)
volume(river,1)
isLocated(river,eastriver,0)
isObject(riversupports)
volume(riversupports,0)
surface(riversupports,50)
surfaceUsed(riversupports,0)
isLocated(riversupports,river,0)
isRoom(waterfallcavern)
isObject(waterfall)
volume(waterfall,1)
below(waterfall,100)
belowUsed(waterfall,0)
isLocated(waterfall,waterfallcavern,0)
isRoom(westriver)
isRoom(ancientquarry)
hasProperty(largeblock,takeable)
hasProperty(largeblock,stable)
hasVariable(largeblock,weight,75)
isObject(largeblock)
volume(largeblock,75)
surface(largeblock,75)
surfaceUsed(largeblock,0)
isLocated(largeblock,ancientquarry,0)
isRoom(deadroom)
surfaceUsed(pressureplate1,25)
capacityUsed(chest,50)
capacityUsed(cupboard,25)
isLocated(player,rockytunnel,0)
isLocated(mediumblock,player,0)

======================================================================================
Processing user input: take block
======================================================================================

DEBUG: Pre-process input lemmas: [take, block]
DEBUG: Pre-process input posTags: [VB, NNP]
DEBUG: Adding [block] to matched objects
DEBUG: Adding 1 to matched indices
DEBUG: removeStart: [1]
DEBUG: removeEnd: [1]
DEBUG: Pre-processed: take item1
DEBUG: Lemmas: [take, item]
DEBUG: Verb found: TAKE
DEBUG: PRSA set to: TAKE

DEBUG: PRSA: TAKE, PRSO: MEDIUMBLOCK, PRSI: null

DEBUG: ATTEMPT TO PERFORM ACTION ON PRSI

DEBUG: FAILED TO PERFORM ACTION ON PRSI

DEBUG: ATTEMPT TO PERFORM ACTION ON PRSO

DEBUG: FAILED TO PERFORM ACTION ON PRSO

DEBUG: ATTEMPT TO PERFORM GENERIC ACTION ON PRSA
DEBUG: Corrected Verb: take
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [climbableStack(3,storageroom)]

DEBUG: Querying: climbableStack(3,storageroom)
DEBUG: QueryCond not satisfied since query: climbableStack(3,storageroom) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [isLocated(plank,riversupports,1)]

DEBUG: Querying: isLocated(plank,riversupports,1)
DEBUG: QueryCond not satisfied since query: isLocated(plank,riversupports,1) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate1,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate1,50)
DEBUG: Solution: weightOnObjectAtLeast(pressureplate1,50) - bindings: yes.
DEBUG: QueryCond satisfied
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate2,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate2,50)
DEBUG: QueryCond not satisfied since query: weightOnObjectAtLeast(pressureplate2,50) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate1,50), weightOnObjectAtLeast(pressureplate2,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate1,50)
DEBUG: Solution: weightOnObjectAtLeast(pressureplate1,50) - bindings: yes.

DEBUG: Querying: weightOnObjectAtLeast(pressureplate2,50)
DEBUG: QueryCond not satisfied since query: weightOnObjectAtLeast(pressureplate2,50) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [isLocated(treasure,player,0)]

DEBUG: Querying: isLocated(treasure,player,0)
DEBUG: QueryCond not satisfied since query: isLocated(treasure,player,0) has no solutions

Knowledge Base:
':-'(notMember(_1069,[]),'!')
':-'(notMember(X,[Head|Tail]),('\='(X,Head),notMember(X,Tail)))
isObject(player)
capacity(player,2147483647)
capacityUsed(player,0)
':-'(inScope(A),(isObject(A),isLocated(A,B,_1075),isLocated(player,B,_1076),'!'))
':-'(inScope(A),(isObject(A),isLocated(A,B,0),hasProperty(B,closablecontainer),'!',isClosed(B,false),inScope(B)))
':-'(inScope(A),(isObject(A),isLocated(A,B,_1081),inScope(B)))
':-'(putIn(A,B),(inScope(A),inScope(B),'\='(A,B),isLocated(A,C,_1085),'\='(A,C),hasProperty(B,closablecontainer),'!',isClosed(B,false),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putIn(A,B),(inScope(A),inScope(B),'\='(A,B),isLocated(A,C,_1093),'\='(A,C),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putInIgnoreScope(A,B),('\='(A,B),isLocated(A,C,_1101),'\='(A,C),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putOn(A,B),(inScope(A),inScope(B),'\='(A,B),volume(A,X),surface(B,Y),surfaceUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putOnIgnoreScope(A,B),('\='(A,B),volume(A,X),surface(B,Y),surfaceUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putBelow(A,B),(inScope(A),inScope(B),'\='(A,B),volume(A,X),below(B,Y),belowUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putBelowIgnoreScope(A,B),('\='(A,B),volume(A,X),below(B,Y),belowUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(outOfScope(A),not(inScope(A)))
':-'(noCapacity(A),not(capacity(A,_1132)))
':-'(noSurface(A),not(surface(A,_1134)))
':-'(noBelow(A),not(below(A,_1136)))
':-'(cantFitCapacity(A,B),(volume(A,X),capacity(B,Y),capacityUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(cantFitSurface(A,B),(volume(A,X),surface(B,Y),surfaceUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(cantFitBelow(A,B),(volume(A,X),below(B,Y),belowUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(tooBigCapacity(A,B),(volume(A,X),capacity(B,Y),'>'(X,Y)))
':-'(tooBigSurface(A,B),(volume(A,X),surface(B,Y),'>'(X,Y)))
':-'(tooBigBelow(A,B),(volume(A,X),below(B,Y),'>'(X,Y)))
':-'(sameObject(A,B),'='(A,B))
':-'(notObject(A),not(isObject(A)))
':-'(targetClosed(A),(hasProperty(A,closablecontainer),isClosed(A,true)))
':-'(stableStack([O],1,R),(isRoom(R),isObject(O),isLocated(O,R,0),hasProperty(O,stable)))
':-'(stableStack([H1,H2|T],M,R),(isObject(H1),isLocated(H1,H2,1),hasProperty(H1,stable),stableStack([H2|T],N,R),is(M,'+'(N,1))))
':-'(stack([O],1,R),(isRoom(R),isObject(O),isLocated(O,R,0)))
':-'(stack([H1,H2|T],M,R),(isObject(H1),isLocated(H1,H2,1),stack([H2|T],N,R),is(M,'+'(N,1))))
':-'(climbableStack(N,R),stableStack(_1186,N,R))
':-'(notClimbableStackError(N,R),(stack(_1189,N,R),not(climbableStack(N,R))))
':-'(totalWeight(O,W,X,Y),(selfWeight(O,W2),setof(X,isLocated(X,O,0),IN),setof(Y,isLocated(Y,O,1),ON),'!',weightInObject(X,O,W3),weightOnObject(Y,O,W4),is(W,'+'('+'(W2,W3),W4))))
':-'(totalWeight(O,W,X,[]),(selfWeight(O,W2),setof(X,isLocated(X,O,0),IN),'!',weightInObject(X,O,W3),is(W,'+'(W2,W3))))
':-'(totalWeight(O,W,[],Y),(selfWeight(O,W2),setof(Y,isLocated(Y,O,1),ON),'!',weightOnObject(Y,O,W3),is(W,'+'(W2,W3))))
':-'(totalWeight(O,W,[],[]),selfWeight(O,W))
':-'(selfWeight(O,W),hasVariable(O,weight,W))
':-'(selfWeight(O,0),(isObject(O),not(hasVariable(O,weight,W))))
':-'(weightOnObject(L,O,W),(setof(X,isLocated(X,O,1),L),'!',weightOnObjectAux(L,O,W)))
':-'(weightOnObjectAux([H|T],O,W),(notMember(H,T),isLocated(H,O,1),'!',weightOnObjectAux(T,O,W3),totalWeight(H,W2,_1227,_1228),is(W,'+'(W2,W3))))
weightOnObjectAux(_1229,O,0)
':-'(weightInObject(L,O,W),(setof(X,isLocated(X,O,0),L),'!',weightInObjectAux(L,O,W)))
':-'(weightInObjectAux([H|T],O,W),(notMember(H,T),isLocated(H,O,0),'!',weightInObjectAux(T,O,W3),totalWeight(H,W2,_1241,_1242),is(W,'+'(W2,W3))))
weightInObjectAux(_1243,O,0)
':-'(weightOnObjectEquals(O,W),(weightOnObject(_1247,O,W2),'='(W2,W)))
':-'(weightOnObjectAtLeast(O,W),(weightOnObject(_1251,O,W2),'>='(W2,W)))
':-'(weightOnObjectAtMost(O,W),(weightOnObject(_1255,O,W2),'=<'(W2,W)))
':-'(weightInObjectEquals(O,W),(weightInObject(_1259,O,W2),'='(W2,W)))
':-'(weightInObjectAtLeast(O,W),(weightInObject(_1263,O,W2),'>='(W2,W)))
':-'(weightInObjectAtMost(O,W),(weightInObject(_1267,O,W2),'=<'(W2,W)))
':-'(weightOnObjectNotEquals(O,W),(weightOnObject(_1271,O,W2),'\='(W2,W)))
':-'(weightOnObjectTooLow(O,W),(weightOnObject(_1275,O,W2),'<'(W2,W)))
':-'(weightOnObjectTooHigh(O,W),(weightOnObject(_1279,O,W2),'>'(W2,W)))
':-'(weightInObjectNotEquals(O,W),(weightInObject(_1283,O,W2),'\='(W2,W)))
':-'(weightInObjectTooLow(O,W),(weightInObject(_1287,O,W2),'<'(W2,W)))
':-'(weightInObjectTooHigh(O,W),(weightInObject(_1291,O,W2),'>'(W2,W)))
isRoom(ruinsentrance)
isRoom(civilisation)
isRoom(columns)
hasProperty(smallblock,takeable)
hasProperty(smallblock,stable)
hasVariable(smallblock,weight,25)
isObject(smallblock)
volume(smallblock,25)
surface(smallblock,25)
surfaceUsed(smallblock,0)
isLocated(smallblock,columns,0)
isRoom(altarroom)
hasProperty(altar,stable)
isObject(altar)
volume(altar,1)
surface(altar,50)
surfaceUsed(altar,0)
isLocated(altar,altarroom,0)
isObject(pressureplate1)
volume(pressureplate1,1)
surface(pressureplate1,50)
isLocated(pressureplate1,altarroom,0)
isObject(pressureplate2)
volume(pressureplate2,1)
surface(pressureplate2,50)
surfaceUsed(pressureplate2,0)
isLocated(pressureplate2,altarroom,0)
hasProperty(watercontainer1,takeable)
hasVariable(watercontainer1,weight,50)
isObject(watercontainer1)
volume(watercontainer1,25)
capacity(watercontainer1,25)
capacityUsed(watercontainer1,0)
isLocated(watercontainer1,pressureplate1,1)
isRoom(treasureroom)
hasProperty(chest,takeable)
hasProperty(chest,closablecontainer)
hasProperty(chest,locked)
hasVariable(chest,weight,25)
isClosed(chest,true)
isObject(chest)
volume(chest,50)
capacity(chest,50)
isLocated(chest,treasureroom,0)
hasProperty(treasure,takeable)
hasVariable(treasure,weight,25)
isObject(treasure)
volume(treasure,50)
isLocated(treasure,chest,0)
isRoom(storageroom)
hasProperty(cupboard,closablecontainer)
hasProperty(cupboard,stable)
isClosed(cupboard,true)
isObject(cupboard)
volume(cupboard,1)
capacity(cupboard,50)
surface(cupboard,50)
surfaceUsed(cupboard,0)
isLocated(cupboard,storageroom,0)
hasProperty(watercontainer2,takeable)
hasVariable(watercontainer2,weight,10)
isObject(watercontainer2)
volume(watercontainer2,25)
capacity(watercontainer2,25)
capacityUsed(watercontainer2,0)
isLocated(watercontainer2,cupboard,0)
hasProperty(plank,takeable)
hasVariable(plank,weight,25)
isObject(plank)
volume(plank,50)
surface(plank,50)
surfaceUsed(plank,0)
isLocated(plank,storageroom,0)
isRoom(attic)
hasProperty(key,takeable)
hasVariable(key,weight,1)
isObject(key)
volume(key,10)
isLocated(key,attic,0)
isRoom(rockytunnel)
hasProperty(mediumblock,takeable)
hasProperty(mediumblock,stable)
hasVariable(mediumblock,weight,50)
isObject(mediumblock)
volume(mediumblock,50)
surface(mediumblock,50)
surfaceUsed(mediumblock,0)
isRoom(eastriver)
isObject(river)
volume(river,1)
isLocated(river,eastriver,0)
isObject(riversupports)
volume(riversupports,0)
surface(riversupports,50)
surfaceUsed(riversupports,0)
isLocated(riversupports,river,0)
isRoom(waterfallcavern)
isObject(waterfall)
volume(waterfall,1)
below(waterfall,100)
belowUsed(waterfall,0)
isLocated(waterfall,waterfallcavern,0)
isRoom(westriver)
isRoom(ancientquarry)
hasProperty(largeblock,takeable)
hasProperty(largeblock,stable)
hasVariable(largeblock,weight,75)
isObject(largeblock)
volume(largeblock,75)
surface(largeblock,75)
surfaceUsed(largeblock,0)
isLocated(largeblock,ancientquarry,0)
isRoom(deadroom)
surfaceUsed(pressureplate1,25)
capacityUsed(chest,50)
capacityUsed(cupboard,25)
isLocated(player,rockytunnel,0)
isLocated(mediumblock,player,0)

======================================================================================
Processing user input: e
======================================================================================


DEBUG: PRSA: MOVE, PRSO: EAST, PRSI: null

DEBUG: ATTEMPT TO PERFORM ACTION ON PRSI

DEBUG: FAILED TO PERFORM ACTION ON PRSI

DEBUG: ATTEMPT TO PERFORM ACTION ON PRSO

DEBUG: FAILED TO PERFORM ACTION ON PRSO

DEBUG: ATTEMPT TO PERFORM GENERIC ACTION ON PRSA
DEBUG: Corrected Verb: move

DEBUG: Removed clause isLocated(player,rockytunnel,0)

DEBUG: Adding clause isLocated(player,ruinsentrance,0)
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [climbableStack(3,storageroom)]

DEBUG: Querying: climbableStack(3,storageroom)
DEBUG: QueryCond not satisfied since query: climbableStack(3,storageroom) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [isLocated(plank,riversupports,1)]

DEBUG: Querying: isLocated(plank,riversupports,1)
DEBUG: QueryCond not satisfied since query: isLocated(plank,riversupports,1) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate1,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate1,50)
DEBUG: Solution: weightOnObjectAtLeast(pressureplate1,50) - bindings: yes.
DEBUG: QueryCond satisfied
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate2,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate2,50)
DEBUG: QueryCond not satisfied since query: weightOnObjectAtLeast(pressureplate2,50) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate1,50), weightOnObjectAtLeast(pressureplate2,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate1,50)
DEBUG: Solution: weightOnObjectAtLeast(pressureplate1,50) - bindings: yes.

DEBUG: Querying: weightOnObjectAtLeast(pressureplate2,50)
DEBUG: QueryCond not satisfied since query: weightOnObjectAtLeast(pressureplate2,50) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [isLocated(treasure,player,0)]

DEBUG: Querying: isLocated(treasure,player,0)
DEBUG: QueryCond not satisfied since query: isLocated(treasure,player,0) has no solutions

Knowledge Base:
':-'(notMember(_1069,[]),'!')
':-'(notMember(X,[Head|Tail]),('\='(X,Head),notMember(X,Tail)))
isObject(player)
capacity(player,2147483647)
capacityUsed(player,0)
':-'(inScope(A),(isObject(A),isLocated(A,B,_1075),isLocated(player,B,_1076),'!'))
':-'(inScope(A),(isObject(A),isLocated(A,B,0),hasProperty(B,closablecontainer),'!',isClosed(B,false),inScope(B)))
':-'(inScope(A),(isObject(A),isLocated(A,B,_1081),inScope(B)))
':-'(putIn(A,B),(inScope(A),inScope(B),'\='(A,B),isLocated(A,C,_1085),'\='(A,C),hasProperty(B,closablecontainer),'!',isClosed(B,false),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putIn(A,B),(inScope(A),inScope(B),'\='(A,B),isLocated(A,C,_1093),'\='(A,C),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putInIgnoreScope(A,B),('\='(A,B),isLocated(A,C,_1101),'\='(A,C),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putOn(A,B),(inScope(A),inScope(B),'\='(A,B),volume(A,X),surface(B,Y),surfaceUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putOnIgnoreScope(A,B),('\='(A,B),volume(A,X),surface(B,Y),surfaceUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putBelow(A,B),(inScope(A),inScope(B),'\='(A,B),volume(A,X),below(B,Y),belowUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putBelowIgnoreScope(A,B),('\='(A,B),volume(A,X),below(B,Y),belowUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(outOfScope(A),not(inScope(A)))
':-'(noCapacity(A),not(capacity(A,_1132)))
':-'(noSurface(A),not(surface(A,_1134)))
':-'(noBelow(A),not(below(A,_1136)))
':-'(cantFitCapacity(A,B),(volume(A,X),capacity(B,Y),capacityUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(cantFitSurface(A,B),(volume(A,X),surface(B,Y),surfaceUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(cantFitBelow(A,B),(volume(A,X),below(B,Y),belowUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(tooBigCapacity(A,B),(volume(A,X),capacity(B,Y),'>'(X,Y)))
':-'(tooBigSurface(A,B),(volume(A,X),surface(B,Y),'>'(X,Y)))
':-'(tooBigBelow(A,B),(volume(A,X),below(B,Y),'>'(X,Y)))
':-'(sameObject(A,B),'='(A,B))
':-'(notObject(A),not(isObject(A)))
':-'(targetClosed(A),(hasProperty(A,closablecontainer),isClosed(A,true)))
':-'(stableStack([O],1,R),(isRoom(R),isObject(O),isLocated(O,R,0),hasProperty(O,stable)))
':-'(stableStack([H1,H2|T],M,R),(isObject(H1),isLocated(H1,H2,1),hasProperty(H1,stable),stableStack([H2|T],N,R),is(M,'+'(N,1))))
':-'(stack([O],1,R),(isRoom(R),isObject(O),isLocated(O,R,0)))
':-'(stack([H1,H2|T],M,R),(isObject(H1),isLocated(H1,H2,1),stack([H2|T],N,R),is(M,'+'(N,1))))
':-'(climbableStack(N,R),stableStack(_1186,N,R))
':-'(notClimbableStackError(N,R),(stack(_1189,N,R),not(climbableStack(N,R))))
':-'(totalWeight(O,W,X,Y),(selfWeight(O,W2),setof(X,isLocated(X,O,0),IN),setof(Y,isLocated(Y,O,1),ON),'!',weightInObject(X,O,W3),weightOnObject(Y,O,W4),is(W,'+'('+'(W2,W3),W4))))
':-'(totalWeight(O,W,X,[]),(selfWeight(O,W2),setof(X,isLocated(X,O,0),IN),'!',weightInObject(X,O,W3),is(W,'+'(W2,W3))))
':-'(totalWeight(O,W,[],Y),(selfWeight(O,W2),setof(Y,isLocated(Y,O,1),ON),'!',weightOnObject(Y,O,W3),is(W,'+'(W2,W3))))
':-'(totalWeight(O,W,[],[]),selfWeight(O,W))
':-'(selfWeight(O,W),hasVariable(O,weight,W))
':-'(selfWeight(O,0),(isObject(O),not(hasVariable(O,weight,W))))
':-'(weightOnObject(L,O,W),(setof(X,isLocated(X,O,1),L),'!',weightOnObjectAux(L,O,W)))
':-'(weightOnObjectAux([H|T],O,W),(notMember(H,T),isLocated(H,O,1),'!',weightOnObjectAux(T,O,W3),totalWeight(H,W2,_1227,_1228),is(W,'+'(W2,W3))))
weightOnObjectAux(_1229,O,0)
':-'(weightInObject(L,O,W),(setof(X,isLocated(X,O,0),L),'!',weightInObjectAux(L,O,W)))
':-'(weightInObjectAux([H|T],O,W),(notMember(H,T),isLocated(H,O,0),'!',weightInObjectAux(T,O,W3),totalWeight(H,W2,_1241,_1242),is(W,'+'(W2,W3))))
weightInObjectAux(_1243,O,0)
':-'(weightOnObjectEquals(O,W),(weightOnObject(_1247,O,W2),'='(W2,W)))
':-'(weightOnObjectAtLeast(O,W),(weightOnObject(_1251,O,W2),'>='(W2,W)))
':-'(weightOnObjectAtMost(O,W),(weightOnObject(_1255,O,W2),'=<'(W2,W)))
':-'(weightInObjectEquals(O,W),(weightInObject(_1259,O,W2),'='(W2,W)))
':-'(weightInObjectAtLeast(O,W),(weightInObject(_1263,O,W2),'>='(W2,W)))
':-'(weightInObjectAtMost(O,W),(weightInObject(_1267,O,W2),'=<'(W2,W)))
':-'(weightOnObjectNotEquals(O,W),(weightOnObject(_1271,O,W2),'\='(W2,W)))
':-'(weightOnObjectTooLow(O,W),(weightOnObject(_1275,O,W2),'<'(W2,W)))
':-'(weightOnObjectTooHigh(O,W),(weightOnObject(_1279,O,W2),'>'(W2,W)))
':-'(weightInObjectNotEquals(O,W),(weightInObject(_1283,O,W2),'\='(W2,W)))
':-'(weightInObjectTooLow(O,W),(weightInObject(_1287,O,W2),'<'(W2,W)))
':-'(weightInObjectTooHigh(O,W),(weightInObject(_1291,O,W2),'>'(W2,W)))
isRoom(ruinsentrance)
isRoom(civilisation)
isRoom(columns)
hasProperty(smallblock,takeable)
hasProperty(smallblock,stable)
hasVariable(smallblock,weight,25)
isObject(smallblock)
volume(smallblock,25)
surface(smallblock,25)
surfaceUsed(smallblock,0)
isLocated(smallblock,columns,0)
isRoom(altarroom)
hasProperty(altar,stable)
isObject(altar)
volume(altar,1)
surface(altar,50)
surfaceUsed(altar,0)
isLocated(altar,altarroom,0)
isObject(pressureplate1)
volume(pressureplate1,1)
surface(pressureplate1,50)
isLocated(pressureplate1,altarroom,0)
isObject(pressureplate2)
volume(pressureplate2,1)
surface(pressureplate2,50)
surfaceUsed(pressureplate2,0)
isLocated(pressureplate2,altarroom,0)
hasProperty(watercontainer1,takeable)
hasVariable(watercontainer1,weight,50)
isObject(watercontainer1)
volume(watercontainer1,25)
capacity(watercontainer1,25)
capacityUsed(watercontainer1,0)
isLocated(watercontainer1,pressureplate1,1)
isRoom(treasureroom)
hasProperty(chest,takeable)
hasProperty(chest,closablecontainer)
hasProperty(chest,locked)
hasVariable(chest,weight,25)
isClosed(chest,true)
isObject(chest)
volume(chest,50)
capacity(chest,50)
isLocated(chest,treasureroom,0)
hasProperty(treasure,takeable)
hasVariable(treasure,weight,25)
isObject(treasure)
volume(treasure,50)
isLocated(treasure,chest,0)
isRoom(storageroom)
hasProperty(cupboard,closablecontainer)
hasProperty(cupboard,stable)
isClosed(cupboard,true)
isObject(cupboard)
volume(cupboard,1)
capacity(cupboard,50)
surface(cupboard,50)
surfaceUsed(cupboard,0)
isLocated(cupboard,storageroom,0)
hasProperty(watercontainer2,takeable)
hasVariable(watercontainer2,weight,10)
isObject(watercontainer2)
volume(watercontainer2,25)
capacity(watercontainer2,25)
capacityUsed(watercontainer2,0)
isLocated(watercontainer2,cupboard,0)
hasProperty(plank,takeable)
hasVariable(plank,weight,25)
isObject(plank)
volume(plank,50)
surface(plank,50)
surfaceUsed(plank,0)
isLocated(plank,storageroom,0)
isRoom(attic)
hasProperty(key,takeable)
hasVariable(key,weight,1)
isObject(key)
volume(key,10)
isLocated(key,attic,0)
isRoom(rockytunnel)
hasProperty(mediumblock,takeable)
hasProperty(mediumblock,stable)
hasVariable(mediumblock,weight,50)
isObject(mediumblock)
volume(mediumblock,50)
surface(mediumblock,50)
surfaceUsed(mediumblock,0)
isRoom(eastriver)
isObject(river)
volume(river,1)
isLocated(river,eastriver,0)
isObject(riversupports)
volume(riversupports,0)
surface(riversupports,50)
surfaceUsed(riversupports,0)
isLocated(riversupports,river,0)
isRoom(waterfallcavern)
isObject(waterfall)
volume(waterfall,1)
below(waterfall,100)
belowUsed(waterfall,0)
isLocated(waterfall,waterfallcavern,0)
isRoom(westriver)
isRoom(ancientquarry)
hasProperty(largeblock,takeable)
hasProperty(largeblock,stable)
hasVariable(largeblock,weight,75)
isObject(largeblock)
volume(largeblock,75)
surface(largeblock,75)
surfaceUsed(largeblock,0)
isLocated(largeblock,ancientquarry,0)
isRoom(deadroom)
surfaceUsed(pressureplate1,25)
capacityUsed(chest,50)
capacityUsed(cupboard,25)
isLocated(mediumblock,player,0)
isLocated(player,ruinsentrance,0)

======================================================================================
Processing user input: n
======================================================================================


DEBUG: PRSA: MOVE, PRSO: NORTH, PRSI: null

DEBUG: ATTEMPT TO PERFORM ACTION ON PRSI

DEBUG: FAILED TO PERFORM ACTION ON PRSI

DEBUG: ATTEMPT TO PERFORM ACTION ON PRSO

DEBUG: FAILED TO PERFORM ACTION ON PRSO

DEBUG: ATTEMPT TO PERFORM GENERIC ACTION ON PRSA
DEBUG: Corrected Verb: move

DEBUG: Removed clause isLocated(player,ruinsentrance,0)

DEBUG: Adding clause isLocated(player,columns,0)
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [climbableStack(3,storageroom)]

DEBUG: Querying: climbableStack(3,storageroom)
DEBUG: QueryCond not satisfied since query: climbableStack(3,storageroom) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [isLocated(plank,riversupports,1)]

DEBUG: Querying: isLocated(plank,riversupports,1)
DEBUG: QueryCond not satisfied since query: isLocated(plank,riversupports,1) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate1,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate1,50)
DEBUG: Solution: weightOnObjectAtLeast(pressureplate1,50) - bindings: yes.
DEBUG: QueryCond satisfied
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate2,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate2,50)
DEBUG: QueryCond not satisfied since query: weightOnObjectAtLeast(pressureplate2,50) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate1,50), weightOnObjectAtLeast(pressureplate2,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate1,50)
DEBUG: Solution: weightOnObjectAtLeast(pressureplate1,50) - bindings: yes.

DEBUG: Querying: weightOnObjectAtLeast(pressureplate2,50)
DEBUG: QueryCond not satisfied since query: weightOnObjectAtLeast(pressureplate2,50) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [isLocated(treasure,player,0)]

DEBUG: Querying: isLocated(treasure,player,0)
DEBUG: QueryCond not satisfied since query: isLocated(treasure,player,0) has no solutions

Knowledge Base:
':-'(notMember(_1069,[]),'!')
':-'(notMember(X,[Head|Tail]),('\='(X,Head),notMember(X,Tail)))
isObject(player)
capacity(player,2147483647)
capacityUsed(player,0)
':-'(inScope(A),(isObject(A),isLocated(A,B,_1075),isLocated(player,B,_1076),'!'))
':-'(inScope(A),(isObject(A),isLocated(A,B,0),hasProperty(B,closablecontainer),'!',isClosed(B,false),inScope(B)))
':-'(inScope(A),(isObject(A),isLocated(A,B,_1081),inScope(B)))
':-'(putIn(A,B),(inScope(A),inScope(B),'\='(A,B),isLocated(A,C,_1085),'\='(A,C),hasProperty(B,closablecontainer),'!',isClosed(B,false),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putIn(A,B),(inScope(A),inScope(B),'\='(A,B),isLocated(A,C,_1093),'\='(A,C),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putInIgnoreScope(A,B),('\='(A,B),isLocated(A,C,_1101),'\='(A,C),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putOn(A,B),(inScope(A),inScope(B),'\='(A,B),volume(A,X),surface(B,Y),surfaceUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putOnIgnoreScope(A,B),('\='(A,B),volume(A,X),surface(B,Y),surfaceUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putBelow(A,B),(inScope(A),inScope(B),'\='(A,B),volume(A,X),below(B,Y),belowUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putBelowIgnoreScope(A,B),('\='(A,B),volume(A,X),below(B,Y),belowUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(outOfScope(A),not(inScope(A)))
':-'(noCapacity(A),not(capacity(A,_1132)))
':-'(noSurface(A),not(surface(A,_1134)))
':-'(noBelow(A),not(below(A,_1136)))
':-'(cantFitCapacity(A,B),(volume(A,X),capacity(B,Y),capacityUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(cantFitSurface(A,B),(volume(A,X),surface(B,Y),surfaceUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(cantFitBelow(A,B),(volume(A,X),below(B,Y),belowUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(tooBigCapacity(A,B),(volume(A,X),capacity(B,Y),'>'(X,Y)))
':-'(tooBigSurface(A,B),(volume(A,X),surface(B,Y),'>'(X,Y)))
':-'(tooBigBelow(A,B),(volume(A,X),below(B,Y),'>'(X,Y)))
':-'(sameObject(A,B),'='(A,B))
':-'(notObject(A),not(isObject(A)))
':-'(targetClosed(A),(hasProperty(A,closablecontainer),isClosed(A,true)))
':-'(stableStack([O],1,R),(isRoom(R),isObject(O),isLocated(O,R,0),hasProperty(O,stable)))
':-'(stableStack([H1,H2|T],M,R),(isObject(H1),isLocated(H1,H2,1),hasProperty(H1,stable),stableStack([H2|T],N,R),is(M,'+'(N,1))))
':-'(stack([O],1,R),(isRoom(R),isObject(O),isLocated(O,R,0)))
':-'(stack([H1,H2|T],M,R),(isObject(H1),isLocated(H1,H2,1),stack([H2|T],N,R),is(M,'+'(N,1))))
':-'(climbableStack(N,R),stableStack(_1186,N,R))
':-'(notClimbableStackError(N,R),(stack(_1189,N,R),not(climbableStack(N,R))))
':-'(totalWeight(O,W,X,Y),(selfWeight(O,W2),setof(X,isLocated(X,O,0),IN),setof(Y,isLocated(Y,O,1),ON),'!',weightInObject(X,O,W3),weightOnObject(Y,O,W4),is(W,'+'('+'(W2,W3),W4))))
':-'(totalWeight(O,W,X,[]),(selfWeight(O,W2),setof(X,isLocated(X,O,0),IN),'!',weightInObject(X,O,W3),is(W,'+'(W2,W3))))
':-'(totalWeight(O,W,[],Y),(selfWeight(O,W2),setof(Y,isLocated(Y,O,1),ON),'!',weightOnObject(Y,O,W3),is(W,'+'(W2,W3))))
':-'(totalWeight(O,W,[],[]),selfWeight(O,W))
':-'(selfWeight(O,W),hasVariable(O,weight,W))
':-'(selfWeight(O,0),(isObject(O),not(hasVariable(O,weight,W))))
':-'(weightOnObject(L,O,W),(setof(X,isLocated(X,O,1),L),'!',weightOnObjectAux(L,O,W)))
':-'(weightOnObjectAux([H|T],O,W),(notMember(H,T),isLocated(H,O,1),'!',weightOnObjectAux(T,O,W3),totalWeight(H,W2,_1227,_1228),is(W,'+'(W2,W3))))
weightOnObjectAux(_1229,O,0)
':-'(weightInObject(L,O,W),(setof(X,isLocated(X,O,0),L),'!',weightInObjectAux(L,O,W)))
':-'(weightInObjectAux([H|T],O,W),(notMember(H,T),isLocated(H,O,0),'!',weightInObjectAux(T,O,W3),totalWeight(H,W2,_1241,_1242),is(W,'+'(W2,W3))))
weightInObjectAux(_1243,O,0)
':-'(weightOnObjectEquals(O,W),(weightOnObject(_1247,O,W2),'='(W2,W)))
':-'(weightOnObjectAtLeast(O,W),(weightOnObject(_1251,O,W2),'>='(W2,W)))
':-'(weightOnObjectAtMost(O,W),(weightOnObject(_1255,O,W2),'=<'(W2,W)))
':-'(weightInObjectEquals(O,W),(weightInObject(_1259,O,W2),'='(W2,W)))
':-'(weightInObjectAtLeast(O,W),(weightInObject(_1263,O,W2),'>='(W2,W)))
':-'(weightInObjectAtMost(O,W),(weightInObject(_1267,O,W2),'=<'(W2,W)))
':-'(weightOnObjectNotEquals(O,W),(weightOnObject(_1271,O,W2),'\='(W2,W)))
':-'(weightOnObjectTooLow(O,W),(weightOnObject(_1275,O,W2),'<'(W2,W)))
':-'(weightOnObjectTooHigh(O,W),(weightOnObject(_1279,O,W2),'>'(W2,W)))
':-'(weightInObjectNotEquals(O,W),(weightInObject(_1283,O,W2),'\='(W2,W)))
':-'(weightInObjectTooLow(O,W),(weightInObject(_1287,O,W2),'<'(W2,W)))
':-'(weightInObjectTooHigh(O,W),(weightInObject(_1291,O,W2),'>'(W2,W)))
isRoom(ruinsentrance)
isRoom(civilisation)
isRoom(columns)
hasProperty(smallblock,takeable)
hasProperty(smallblock,stable)
hasVariable(smallblock,weight,25)
isObject(smallblock)
volume(smallblock,25)
surface(smallblock,25)
surfaceUsed(smallblock,0)
isLocated(smallblock,columns,0)
isRoom(altarroom)
hasProperty(altar,stable)
isObject(altar)
volume(altar,1)
surface(altar,50)
surfaceUsed(altar,0)
isLocated(altar,altarroom,0)
isObject(pressureplate1)
volume(pressureplate1,1)
surface(pressureplate1,50)
isLocated(pressureplate1,altarroom,0)
isObject(pressureplate2)
volume(pressureplate2,1)
surface(pressureplate2,50)
surfaceUsed(pressureplate2,0)
isLocated(pressureplate2,altarroom,0)
hasProperty(watercontainer1,takeable)
hasVariable(watercontainer1,weight,50)
isObject(watercontainer1)
volume(watercontainer1,25)
capacity(watercontainer1,25)
capacityUsed(watercontainer1,0)
isLocated(watercontainer1,pressureplate1,1)
isRoom(treasureroom)
hasProperty(chest,takeable)
hasProperty(chest,closablecontainer)
hasProperty(chest,locked)
hasVariable(chest,weight,25)
isClosed(chest,true)
isObject(chest)
volume(chest,50)
capacity(chest,50)
isLocated(chest,treasureroom,0)
hasProperty(treasure,takeable)
hasVariable(treasure,weight,25)
isObject(treasure)
volume(treasure,50)
isLocated(treasure,chest,0)
isRoom(storageroom)
hasProperty(cupboard,closablecontainer)
hasProperty(cupboard,stable)
isClosed(cupboard,true)
isObject(cupboard)
volume(cupboard,1)
capacity(cupboard,50)
surface(cupboard,50)
surfaceUsed(cupboard,0)
isLocated(cupboard,storageroom,0)
hasProperty(watercontainer2,takeable)
hasVariable(watercontainer2,weight,10)
isObject(watercontainer2)
volume(watercontainer2,25)
capacity(watercontainer2,25)
capacityUsed(watercontainer2,0)
isLocated(watercontainer2,cupboard,0)
hasProperty(plank,takeable)
hasVariable(plank,weight,25)
isObject(plank)
volume(plank,50)
surface(plank,50)
surfaceUsed(plank,0)
isLocated(plank,storageroom,0)
isRoom(attic)
hasProperty(key,takeable)
hasVariable(key,weight,1)
isObject(key)
volume(key,10)
isLocated(key,attic,0)
isRoom(rockytunnel)
hasProperty(mediumblock,takeable)
hasProperty(mediumblock,stable)
hasVariable(mediumblock,weight,50)
isObject(mediumblock)
volume(mediumblock,50)
surface(mediumblock,50)
surfaceUsed(mediumblock,0)
isRoom(eastriver)
isObject(river)
volume(river,1)
isLocated(river,eastriver,0)
isObject(riversupports)
volume(riversupports,0)
surface(riversupports,50)
surfaceUsed(riversupports,0)
isLocated(riversupports,river,0)
isRoom(waterfallcavern)
isObject(waterfall)
volume(waterfall,1)
below(waterfall,100)
belowUsed(waterfall,0)
isLocated(waterfall,waterfallcavern,0)
isRoom(westriver)
isRoom(ancientquarry)
hasProperty(largeblock,takeable)
hasProperty(largeblock,stable)
hasVariable(largeblock,weight,75)
isObject(largeblock)
volume(largeblock,75)
surface(largeblock,75)
surfaceUsed(largeblock,0)
isLocated(largeblock,ancientquarry,0)
isRoom(deadroom)
surfaceUsed(pressureplate1,25)
capacityUsed(chest,50)
capacityUsed(cupboard,25)
isLocated(mediumblock,player,0)
isLocated(player,columns,0)

======================================================================================
Processing user input: put small on medium
======================================================================================

DEBUG: Pre-process input lemmas: [put, small, on, medium]
DEBUG: Pre-process input posTags: [VB, NNP, NNP, NNP]
DEBUG: Removing conflicting synonym: block
DEBUG: Adding [small] to matched objects
DEBUG: Adding 1 to matched indices
DEBUG: Adding [medium] to matched objects
DEBUG: Adding 3 to matched indices
DEBUG: removeStart: [1, 3]
DEBUG: removeEnd: [1, 3]
DEBUG: Pre-processed: put item1 on item2
DEBUG: Lemmas: [put, item, on, item]
DEBUG: Verb found: PUT ITEM ON ITEM
DEBUG: Verb found: PUT
DEBUG: PRSA set to: PUT ITEM ON ITEM

DEBUG: PRSA: PUT ITEM ON ITEM, PRSO: SMALLBLOCK, PRSI: MEDIUMBLOCK

DEBUG: ATTEMPT TO PERFORM ACTION ON PRSI

DEBUG: FAILED TO PERFORM ACTION ON PRSI

DEBUG: ATTEMPT TO PERFORM ACTION ON PRSO

DEBUG: FAILED TO PERFORM ACTION ON PRSO

DEBUG: ATTEMPT TO PERFORM GENERIC ACTION ON PRSA
DEBUG: Corrected Verb: place on

DEBUG: FAILED TO PERFORM GENERIC ACTION USING PRSA

DEBUG: ATTEMPT TO PERFORM ENHANCED ACTION ON PRSA
DEBUG: Trying to place on

DEBUG: Querying: putOn(smallblock,mediumblock)
DEBUG: Solution: putOn(smallblock,mediumblock) - bindings: yes.

DEBUG: Querying: isObject(columns)

DEBUG: Querying: isObject(mediumblock)
DEBUG: Solution: isObject(mediumblock) - bindings: yes.

DEBUG: Querying: surfaceUsed(mediumblock,X)
DEBUG: Solution: surfaceUsed(mediumblock,0) - bindings: yes.
X / 0

DEBUG: Removed clause surfaceUsed(mediumblock,0)

DEBUG: Adding clause surfaceUsed(mediumblock,25)

DEBUG: Removed clause isLocated(smallblock,columns,0)

DEBUG: Adding clause isLocated(smallblock,mediumblock,1)
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [climbableStack(3,storageroom)]

DEBUG: Querying: climbableStack(3,storageroom)
DEBUG: QueryCond not satisfied since query: climbableStack(3,storageroom) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [isLocated(plank,riversupports,1)]

DEBUG: Querying: isLocated(plank,riversupports,1)
DEBUG: QueryCond not satisfied since query: isLocated(plank,riversupports,1) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate1,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate1,50)
DEBUG: Solution: weightOnObjectAtLeast(pressureplate1,50) - bindings: yes.
DEBUG: QueryCond satisfied
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate2,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate2,50)
DEBUG: QueryCond not satisfied since query: weightOnObjectAtLeast(pressureplate2,50) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate1,50), weightOnObjectAtLeast(pressureplate2,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate1,50)
DEBUG: Solution: weightOnObjectAtLeast(pressureplate1,50) - bindings: yes.

DEBUG: Querying: weightOnObjectAtLeast(pressureplate2,50)
DEBUG: QueryCond not satisfied since query: weightOnObjectAtLeast(pressureplate2,50) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [isLocated(treasure,player,0)]

DEBUG: Querying: isLocated(treasure,player,0)
DEBUG: QueryCond not satisfied since query: isLocated(treasure,player,0) has no solutions

Knowledge Base:
':-'(notMember(_1069,[]),'!')
':-'(notMember(X,[Head|Tail]),('\='(X,Head),notMember(X,Tail)))
isObject(player)
capacity(player,2147483647)
capacityUsed(player,0)
':-'(inScope(A),(isObject(A),isLocated(A,B,_1075),isLocated(player,B,_1076),'!'))
':-'(inScope(A),(isObject(A),isLocated(A,B,0),hasProperty(B,closablecontainer),'!',isClosed(B,false),inScope(B)))
':-'(inScope(A),(isObject(A),isLocated(A,B,_1081),inScope(B)))
':-'(putIn(A,B),(inScope(A),inScope(B),'\='(A,B),isLocated(A,C,_1085),'\='(A,C),hasProperty(B,closablecontainer),'!',isClosed(B,false),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putIn(A,B),(inScope(A),inScope(B),'\='(A,B),isLocated(A,C,_1093),'\='(A,C),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putInIgnoreScope(A,B),('\='(A,B),isLocated(A,C,_1101),'\='(A,C),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putOn(A,B),(inScope(A),inScope(B),'\='(A,B),volume(A,X),surface(B,Y),surfaceUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putOnIgnoreScope(A,B),('\='(A,B),volume(A,X),surface(B,Y),surfaceUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putBelow(A,B),(inScope(A),inScope(B),'\='(A,B),volume(A,X),below(B,Y),belowUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putBelowIgnoreScope(A,B),('\='(A,B),volume(A,X),below(B,Y),belowUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(outOfScope(A),not(inScope(A)))
':-'(noCapacity(A),not(capacity(A,_1132)))
':-'(noSurface(A),not(surface(A,_1134)))
':-'(noBelow(A),not(below(A,_1136)))
':-'(cantFitCapacity(A,B),(volume(A,X),capacity(B,Y),capacityUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(cantFitSurface(A,B),(volume(A,X),surface(B,Y),surfaceUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(cantFitBelow(A,B),(volume(A,X),below(B,Y),belowUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(tooBigCapacity(A,B),(volume(A,X),capacity(B,Y),'>'(X,Y)))
':-'(tooBigSurface(A,B),(volume(A,X),surface(B,Y),'>'(X,Y)))
':-'(tooBigBelow(A,B),(volume(A,X),below(B,Y),'>'(X,Y)))
':-'(sameObject(A,B),'='(A,B))
':-'(notObject(A),not(isObject(A)))
':-'(targetClosed(A),(hasProperty(A,closablecontainer),isClosed(A,true)))
':-'(stableStack([O],1,R),(isRoom(R),isObject(O),isLocated(O,R,0),hasProperty(O,stable)))
':-'(stableStack([H1,H2|T],M,R),(isObject(H1),isLocated(H1,H2,1),hasProperty(H1,stable),stableStack([H2|T],N,R),is(M,'+'(N,1))))
':-'(stack([O],1,R),(isRoom(R),isObject(O),isLocated(O,R,0)))
':-'(stack([H1,H2|T],M,R),(isObject(H1),isLocated(H1,H2,1),stack([H2|T],N,R),is(M,'+'(N,1))))
':-'(climbableStack(N,R),stableStack(_1186,N,R))
':-'(notClimbableStackError(N,R),(stack(_1189,N,R),not(climbableStack(N,R))))
':-'(totalWeight(O,W,X,Y),(selfWeight(O,W2),setof(X,isLocated(X,O,0),IN),setof(Y,isLocated(Y,O,1),ON),'!',weightInObject(X,O,W3),weightOnObject(Y,O,W4),is(W,'+'('+'(W2,W3),W4))))
':-'(totalWeight(O,W,X,[]),(selfWeight(O,W2),setof(X,isLocated(X,O,0),IN),'!',weightInObject(X,O,W3),is(W,'+'(W2,W3))))
':-'(totalWeight(O,W,[],Y),(selfWeight(O,W2),setof(Y,isLocated(Y,O,1),ON),'!',weightOnObject(Y,O,W3),is(W,'+'(W2,W3))))
':-'(totalWeight(O,W,[],[]),selfWeight(O,W))
':-'(selfWeight(O,W),hasVariable(O,weight,W))
':-'(selfWeight(O,0),(isObject(O),not(hasVariable(O,weight,W))))
':-'(weightOnObject(L,O,W),(setof(X,isLocated(X,O,1),L),'!',weightOnObjectAux(L,O,W)))
':-'(weightOnObjectAux([H|T],O,W),(notMember(H,T),isLocated(H,O,1),'!',weightOnObjectAux(T,O,W3),totalWeight(H,W2,_1227,_1228),is(W,'+'(W2,W3))))
weightOnObjectAux(_1229,O,0)
':-'(weightInObject(L,O,W),(setof(X,isLocated(X,O,0),L),'!',weightInObjectAux(L,O,W)))
':-'(weightInObjectAux([H|T],O,W),(notMember(H,T),isLocated(H,O,0),'!',weightInObjectAux(T,O,W3),totalWeight(H,W2,_1241,_1242),is(W,'+'(W2,W3))))
weightInObjectAux(_1243,O,0)
':-'(weightOnObjectEquals(O,W),(weightOnObject(_1247,O,W2),'='(W2,W)))
':-'(weightOnObjectAtLeast(O,W),(weightOnObject(_1251,O,W2),'>='(W2,W)))
':-'(weightOnObjectAtMost(O,W),(weightOnObject(_1255,O,W2),'=<'(W2,W)))
':-'(weightInObjectEquals(O,W),(weightInObject(_1259,O,W2),'='(W2,W)))
':-'(weightInObjectAtLeast(O,W),(weightInObject(_1263,O,W2),'>='(W2,W)))
':-'(weightInObjectAtMost(O,W),(weightInObject(_1267,O,W2),'=<'(W2,W)))
':-'(weightOnObjectNotEquals(O,W),(weightOnObject(_1271,O,W2),'\='(W2,W)))
':-'(weightOnObjectTooLow(O,W),(weightOnObject(_1275,O,W2),'<'(W2,W)))
':-'(weightOnObjectTooHigh(O,W),(weightOnObject(_1279,O,W2),'>'(W2,W)))
':-'(weightInObjectNotEquals(O,W),(weightInObject(_1283,O,W2),'\='(W2,W)))
':-'(weightInObjectTooLow(O,W),(weightInObject(_1287,O,W2),'<'(W2,W)))
':-'(weightInObjectTooHigh(O,W),(weightInObject(_1291,O,W2),'>'(W2,W)))
isRoom(ruinsentrance)
isRoom(civilisation)
isRoom(columns)
hasProperty(smallblock,takeable)
hasProperty(smallblock,stable)
hasVariable(smallblock,weight,25)
isObject(smallblock)
volume(smallblock,25)
surface(smallblock,25)
surfaceUsed(smallblock,0)
isRoom(altarroom)
hasProperty(altar,stable)
isObject(altar)
volume(altar,1)
surface(altar,50)
surfaceUsed(altar,0)
isLocated(altar,altarroom,0)
isObject(pressureplate1)
volume(pressureplate1,1)
surface(pressureplate1,50)
isLocated(pressureplate1,altarroom,0)
isObject(pressureplate2)
volume(pressureplate2,1)
surface(pressureplate2,50)
surfaceUsed(pressureplate2,0)
isLocated(pressureplate2,altarroom,0)
hasProperty(watercontainer1,takeable)
hasVariable(watercontainer1,weight,50)
isObject(watercontainer1)
volume(watercontainer1,25)
capacity(watercontainer1,25)
capacityUsed(watercontainer1,0)
isLocated(watercontainer1,pressureplate1,1)
isRoom(treasureroom)
hasProperty(chest,takeable)
hasProperty(chest,closablecontainer)
hasProperty(chest,locked)
hasVariable(chest,weight,25)
isClosed(chest,true)
isObject(chest)
volume(chest,50)
capacity(chest,50)
isLocated(chest,treasureroom,0)
hasProperty(treasure,takeable)
hasVariable(treasure,weight,25)
isObject(treasure)
volume(treasure,50)
isLocated(treasure,chest,0)
isRoom(storageroom)
hasProperty(cupboard,closablecontainer)
hasProperty(cupboard,stable)
isClosed(cupboard,true)
isObject(cupboard)
volume(cupboard,1)
capacity(cupboard,50)
surface(cupboard,50)
surfaceUsed(cupboard,0)
isLocated(cupboard,storageroom,0)
hasProperty(watercontainer2,takeable)
hasVariable(watercontainer2,weight,10)
isObject(watercontainer2)
volume(watercontainer2,25)
capacity(watercontainer2,25)
capacityUsed(watercontainer2,0)
isLocated(watercontainer2,cupboard,0)
hasProperty(plank,takeable)
hasVariable(plank,weight,25)
isObject(plank)
volume(plank,50)
surface(plank,50)
surfaceUsed(plank,0)
isLocated(plank,storageroom,0)
isRoom(attic)
hasProperty(key,takeable)
hasVariable(key,weight,1)
isObject(key)
volume(key,10)
isLocated(key,attic,0)
isRoom(rockytunnel)
hasProperty(mediumblock,takeable)
hasProperty(mediumblock,stable)
hasVariable(mediumblock,weight,50)
isObject(mediumblock)
volume(mediumblock,50)
surface(mediumblock,50)
isRoom(eastriver)
isObject(river)
volume(river,1)
isLocated(river,eastriver,0)
isObject(riversupports)
volume(riversupports,0)
surface(riversupports,50)
surfaceUsed(riversupports,0)
isLocated(riversupports,river,0)
isRoom(waterfallcavern)
isObject(waterfall)
volume(waterfall,1)
below(waterfall,100)
belowUsed(waterfall,0)
isLocated(waterfall,waterfallcavern,0)
isRoom(westriver)
isRoom(ancientquarry)
hasProperty(largeblock,takeable)
hasProperty(largeblock,stable)
hasVariable(largeblock,weight,75)
isObject(largeblock)
volume(largeblock,75)
surface(largeblock,75)
surfaceUsed(largeblock,0)
isLocated(largeblock,ancientquarry,0)
isRoom(deadroom)
surfaceUsed(pressureplate1,25)
capacityUsed(chest,50)
capacityUsed(cupboard,25)
isLocated(mediumblock,player,0)
isLocated(player,columns,0)
surfaceUsed(mediumblock,25)
isLocated(smallblock,mediumblock,1)

======================================================================================
Processing user input: inventory
======================================================================================


DEBUG: PRSA: LOOK, PRSO: PLAYER, PRSI: null

DEBUG: ATTEMPT TO PERFORM ACTION ON PRSI

DEBUG: FAILED TO PERFORM ACTION ON PRSI

DEBUG: ATTEMPT TO PERFORM ACTION ON PRSO

DEBUG: FAILED TO PERFORM ACTION ON PRSO

DEBUG: ATTEMPT TO PERFORM GENERIC ACTION ON PRSA
DEBUG: Corrected Verb: look
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [climbableStack(3,storageroom)]

DEBUG: Querying: climbableStack(3,storageroom)
DEBUG: QueryCond not satisfied since query: climbableStack(3,storageroom) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [isLocated(plank,riversupports,1)]

DEBUG: Querying: isLocated(plank,riversupports,1)
DEBUG: QueryCond not satisfied since query: isLocated(plank,riversupports,1) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate1,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate1,50)
DEBUG: Solution: weightOnObjectAtLeast(pressureplate1,50) - bindings: yes.
DEBUG: QueryCond satisfied
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate2,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate2,50)
DEBUG: QueryCond not satisfied since query: weightOnObjectAtLeast(pressureplate2,50) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate1,50), weightOnObjectAtLeast(pressureplate2,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate1,50)
DEBUG: Solution: weightOnObjectAtLeast(pressureplate1,50) - bindings: yes.

DEBUG: Querying: weightOnObjectAtLeast(pressureplate2,50)
DEBUG: QueryCond not satisfied since query: weightOnObjectAtLeast(pressureplate2,50) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [isLocated(treasure,player,0)]

DEBUG: Querying: isLocated(treasure,player,0)
DEBUG: QueryCond not satisfied since query: isLocated(treasure,player,0) has no solutions

Knowledge Base:
':-'(notMember(_1069,[]),'!')
':-'(notMember(X,[Head|Tail]),('\='(X,Head),notMember(X,Tail)))
isObject(player)
capacity(player,2147483647)
capacityUsed(player,0)
':-'(inScope(A),(isObject(A),isLocated(A,B,_1075),isLocated(player,B,_1076),'!'))
':-'(inScope(A),(isObject(A),isLocated(A,B,0),hasProperty(B,closablecontainer),'!',isClosed(B,false),inScope(B)))
':-'(inScope(A),(isObject(A),isLocated(A,B,_1081),inScope(B)))
':-'(putIn(A,B),(inScope(A),inScope(B),'\='(A,B),isLocated(A,C,_1085),'\='(A,C),hasProperty(B,closablecontainer),'!',isClosed(B,false),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putIn(A,B),(inScope(A),inScope(B),'\='(A,B),isLocated(A,C,_1093),'\='(A,C),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putInIgnoreScope(A,B),('\='(A,B),isLocated(A,C,_1101),'\='(A,C),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putOn(A,B),(inScope(A),inScope(B),'\='(A,B),volume(A,X),surface(B,Y),surfaceUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putOnIgnoreScope(A,B),('\='(A,B),volume(A,X),surface(B,Y),surfaceUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putBelow(A,B),(inScope(A),inScope(B),'\='(A,B),volume(A,X),below(B,Y),belowUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putBelowIgnoreScope(A,B),('\='(A,B),volume(A,X),below(B,Y),belowUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(outOfScope(A),not(inScope(A)))
':-'(noCapacity(A),not(capacity(A,_1132)))
':-'(noSurface(A),not(surface(A,_1134)))
':-'(noBelow(A),not(below(A,_1136)))
':-'(cantFitCapacity(A,B),(volume(A,X),capacity(B,Y),capacityUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(cantFitSurface(A,B),(volume(A,X),surface(B,Y),surfaceUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(cantFitBelow(A,B),(volume(A,X),below(B,Y),belowUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(tooBigCapacity(A,B),(volume(A,X),capacity(B,Y),'>'(X,Y)))
':-'(tooBigSurface(A,B),(volume(A,X),surface(B,Y),'>'(X,Y)))
':-'(tooBigBelow(A,B),(volume(A,X),below(B,Y),'>'(X,Y)))
':-'(sameObject(A,B),'='(A,B))
':-'(notObject(A),not(isObject(A)))
':-'(targetClosed(A),(hasProperty(A,closablecontainer),isClosed(A,true)))
':-'(stableStack([O],1,R),(isRoom(R),isObject(O),isLocated(O,R,0),hasProperty(O,stable)))
':-'(stableStack([H1,H2|T],M,R),(isObject(H1),isLocated(H1,H2,1),hasProperty(H1,stable),stableStack([H2|T],N,R),is(M,'+'(N,1))))
':-'(stack([O],1,R),(isRoom(R),isObject(O),isLocated(O,R,0)))
':-'(stack([H1,H2|T],M,R),(isObject(H1),isLocated(H1,H2,1),stack([H2|T],N,R),is(M,'+'(N,1))))
':-'(climbableStack(N,R),stableStack(_1186,N,R))
':-'(notClimbableStackError(N,R),(stack(_1189,N,R),not(climbableStack(N,R))))
':-'(totalWeight(O,W,X,Y),(selfWeight(O,W2),setof(X,isLocated(X,O,0),IN),setof(Y,isLocated(Y,O,1),ON),'!',weightInObject(X,O,W3),weightOnObject(Y,O,W4),is(W,'+'('+'(W2,W3),W4))))
':-'(totalWeight(O,W,X,[]),(selfWeight(O,W2),setof(X,isLocated(X,O,0),IN),'!',weightInObject(X,O,W3),is(W,'+'(W2,W3))))
':-'(totalWeight(O,W,[],Y),(selfWeight(O,W2),setof(Y,isLocated(Y,O,1),ON),'!',weightOnObject(Y,O,W3),is(W,'+'(W2,W3))))
':-'(totalWeight(O,W,[],[]),selfWeight(O,W))
':-'(selfWeight(O,W),hasVariable(O,weight,W))
':-'(selfWeight(O,0),(isObject(O),not(hasVariable(O,weight,W))))
':-'(weightOnObject(L,O,W),(setof(X,isLocated(X,O,1),L),'!',weightOnObjectAux(L,O,W)))
':-'(weightOnObjectAux([H|T],O,W),(notMember(H,T),isLocated(H,O,1),'!',weightOnObjectAux(T,O,W3),totalWeight(H,W2,_1227,_1228),is(W,'+'(W2,W3))))
weightOnObjectAux(_1229,O,0)
':-'(weightInObject(L,O,W),(setof(X,isLocated(X,O,0),L),'!',weightInObjectAux(L,O,W)))
':-'(weightInObjectAux([H|T],O,W),(notMember(H,T),isLocated(H,O,0),'!',weightInObjectAux(T,O,W3),totalWeight(H,W2,_1241,_1242),is(W,'+'(W2,W3))))
weightInObjectAux(_1243,O,0)
':-'(weightOnObjectEquals(O,W),(weightOnObject(_1247,O,W2),'='(W2,W)))
':-'(weightOnObjectAtLeast(O,W),(weightOnObject(_1251,O,W2),'>='(W2,W)))
':-'(weightOnObjectAtMost(O,W),(weightOnObject(_1255,O,W2),'=<'(W2,W)))
':-'(weightInObjectEquals(O,W),(weightInObject(_1259,O,W2),'='(W2,W)))
':-'(weightInObjectAtLeast(O,W),(weightInObject(_1263,O,W2),'>='(W2,W)))
':-'(weightInObjectAtMost(O,W),(weightInObject(_1267,O,W2),'=<'(W2,W)))
':-'(weightOnObjectNotEquals(O,W),(weightOnObject(_1271,O,W2),'\='(W2,W)))
':-'(weightOnObjectTooLow(O,W),(weightOnObject(_1275,O,W2),'<'(W2,W)))
':-'(weightOnObjectTooHigh(O,W),(weightOnObject(_1279,O,W2),'>'(W2,W)))
':-'(weightInObjectNotEquals(O,W),(weightInObject(_1283,O,W2),'\='(W2,W)))
':-'(weightInObjectTooLow(O,W),(weightInObject(_1287,O,W2),'<'(W2,W)))
':-'(weightInObjectTooHigh(O,W),(weightInObject(_1291,O,W2),'>'(W2,W)))
isRoom(ruinsentrance)
isRoom(civilisation)
isRoom(columns)
hasProperty(smallblock,takeable)
hasProperty(smallblock,stable)
hasVariable(smallblock,weight,25)
isObject(smallblock)
volume(smallblock,25)
surface(smallblock,25)
surfaceUsed(smallblock,0)
isRoom(altarroom)
hasProperty(altar,stable)
isObject(altar)
volume(altar,1)
surface(altar,50)
surfaceUsed(altar,0)
isLocated(altar,altarroom,0)
isObject(pressureplate1)
volume(pressureplate1,1)
surface(pressureplate1,50)
isLocated(pressureplate1,altarroom,0)
isObject(pressureplate2)
volume(pressureplate2,1)
surface(pressureplate2,50)
surfaceUsed(pressureplate2,0)
isLocated(pressureplate2,altarroom,0)
hasProperty(watercontainer1,takeable)
hasVariable(watercontainer1,weight,50)
isObject(watercontainer1)
volume(watercontainer1,25)
capacity(watercontainer1,25)
capacityUsed(watercontainer1,0)
isLocated(watercontainer1,pressureplate1,1)
isRoom(treasureroom)
hasProperty(chest,takeable)
hasProperty(chest,closablecontainer)
hasProperty(chest,locked)
hasVariable(chest,weight,25)
isClosed(chest,true)
isObject(chest)
volume(chest,50)
capacity(chest,50)
isLocated(chest,treasureroom,0)
hasProperty(treasure,takeable)
hasVariable(treasure,weight,25)
isObject(treasure)
volume(treasure,50)
isLocated(treasure,chest,0)
isRoom(storageroom)
hasProperty(cupboard,closablecontainer)
hasProperty(cupboard,stable)
isClosed(cupboard,true)
isObject(cupboard)
volume(cupboard,1)
capacity(cupboard,50)
surface(cupboard,50)
surfaceUsed(cupboard,0)
isLocated(cupboard,storageroom,0)
hasProperty(watercontainer2,takeable)
hasVariable(watercontainer2,weight,10)
isObject(watercontainer2)
volume(watercontainer2,25)
capacity(watercontainer2,25)
capacityUsed(watercontainer2,0)
isLocated(watercontainer2,cupboard,0)
hasProperty(plank,takeable)
hasVariable(plank,weight,25)
isObject(plank)
volume(plank,50)
surface(plank,50)
surfaceUsed(plank,0)
isLocated(plank,storageroom,0)
isRoom(attic)
hasProperty(key,takeable)
hasVariable(key,weight,1)
isObject(key)
volume(key,10)
isLocated(key,attic,0)
isRoom(rockytunnel)
hasProperty(mediumblock,takeable)
hasProperty(mediumblock,stable)
hasVariable(mediumblock,weight,50)
isObject(mediumblock)
volume(mediumblock,50)
surface(mediumblock,50)
isRoom(eastriver)
isObject(river)
volume(river,1)
isLocated(river,eastriver,0)
isObject(riversupports)
volume(riversupports,0)
surface(riversupports,50)
surfaceUsed(riversupports,0)
isLocated(riversupports,river,0)
isRoom(waterfallcavern)
isObject(waterfall)
volume(waterfall,1)
below(waterfall,100)
belowUsed(waterfall,0)
isLocated(waterfall,waterfallcavern,0)
isRoom(westriver)
isRoom(ancientquarry)
hasProperty(largeblock,takeable)
hasProperty(largeblock,stable)
hasVariable(largeblock,weight,75)
isObject(largeblock)
volume(largeblock,75)
surface(largeblock,75)
surfaceUsed(largeblock,0)
isLocated(largeblock,ancientquarry,0)
isRoom(deadroom)
surfaceUsed(pressureplate1,25)
capacityUsed(chest,50)
capacityUsed(cupboard,25)
isLocated(mediumblock,player,0)
isLocated(player,columns,0)
surfaceUsed(mediumblock,25)
isLocated(smallblock,mediumblock,1)

======================================================================================
Processing user input: inspect block
======================================================================================

DEBUG: Pre-process input lemmas: [inspect, block]
DEBUG: Pre-process input posTags: [VB, NNP]
DEBUG: Removing conflicting synonym: block

DEBUG: PRSA: CONFLICT: BLOCK, PRSO: null, PRSI: null

DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [climbableStack(3,storageroom)]

DEBUG: Querying: climbableStack(3,storageroom)
DEBUG: QueryCond not satisfied since query: climbableStack(3,storageroom) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [isLocated(plank,riversupports,1)]

DEBUG: Querying: isLocated(plank,riversupports,1)
DEBUG: QueryCond not satisfied since query: isLocated(plank,riversupports,1) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate1,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate1,50)
DEBUG: Solution: weightOnObjectAtLeast(pressureplate1,50) - bindings: yes.
DEBUG: QueryCond satisfied
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate2,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate2,50)
DEBUG: QueryCond not satisfied since query: weightOnObjectAtLeast(pressureplate2,50) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate1,50), weightOnObjectAtLeast(pressureplate2,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate1,50)
DEBUG: Solution: weightOnObjectAtLeast(pressureplate1,50) - bindings: yes.

DEBUG: Querying: weightOnObjectAtLeast(pressureplate2,50)
DEBUG: QueryCond not satisfied since query: weightOnObjectAtLeast(pressureplate2,50) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [isLocated(treasure,player,0)]

DEBUG: Querying: isLocated(treasure,player,0)
DEBUG: QueryCond not satisfied since query: isLocated(treasure,player,0) has no solutions

Knowledge Base:
':-'(notMember(_1069,[]),'!')
':-'(notMember(X,[Head|Tail]),('\='(X,Head),notMember(X,Tail)))
isObject(player)
capacity(player,2147483647)
capacityUsed(player,0)
':-'(inScope(A),(isObject(A),isLocated(A,B,_1075),isLocated(player,B,_1076),'!'))
':-'(inScope(A),(isObject(A),isLocated(A,B,0),hasProperty(B,closablecontainer),'!',isClosed(B,false),inScope(B)))
':-'(inScope(A),(isObject(A),isLocated(A,B,_1081),inScope(B)))
':-'(putIn(A,B),(inScope(A),inScope(B),'\='(A,B),isLocated(A,C,_1085),'\='(A,C),hasProperty(B,closablecontainer),'!',isClosed(B,false),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putIn(A,B),(inScope(A),inScope(B),'\='(A,B),isLocated(A,C,_1093),'\='(A,C),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putInIgnoreScope(A,B),('\='(A,B),isLocated(A,C,_1101),'\='(A,C),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putOn(A,B),(inScope(A),inScope(B),'\='(A,B),volume(A,X),surface(B,Y),surfaceUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putOnIgnoreScope(A,B),('\='(A,B),volume(A,X),surface(B,Y),surfaceUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putBelow(A,B),(inScope(A),inScope(B),'\='(A,B),volume(A,X),below(B,Y),belowUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putBelowIgnoreScope(A,B),('\='(A,B),volume(A,X),below(B,Y),belowUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(outOfScope(A),not(inScope(A)))
':-'(noCapacity(A),not(capacity(A,_1132)))
':-'(noSurface(A),not(surface(A,_1134)))
':-'(noBelow(A),not(below(A,_1136)))
':-'(cantFitCapacity(A,B),(volume(A,X),capacity(B,Y),capacityUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(cantFitSurface(A,B),(volume(A,X),surface(B,Y),surfaceUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(cantFitBelow(A,B),(volume(A,X),below(B,Y),belowUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(tooBigCapacity(A,B),(volume(A,X),capacity(B,Y),'>'(X,Y)))
':-'(tooBigSurface(A,B),(volume(A,X),surface(B,Y),'>'(X,Y)))
':-'(tooBigBelow(A,B),(volume(A,X),below(B,Y),'>'(X,Y)))
':-'(sameObject(A,B),'='(A,B))
':-'(notObject(A),not(isObject(A)))
':-'(targetClosed(A),(hasProperty(A,closablecontainer),isClosed(A,true)))
':-'(stableStack([O],1,R),(isRoom(R),isObject(O),isLocated(O,R,0),hasProperty(O,stable)))
':-'(stableStack([H1,H2|T],M,R),(isObject(H1),isLocated(H1,H2,1),hasProperty(H1,stable),stableStack([H2|T],N,R),is(M,'+'(N,1))))
':-'(stack([O],1,R),(isRoom(R),isObject(O),isLocated(O,R,0)))
':-'(stack([H1,H2|T],M,R),(isObject(H1),isLocated(H1,H2,1),stack([H2|T],N,R),is(M,'+'(N,1))))
':-'(climbableStack(N,R),stableStack(_1186,N,R))
':-'(notClimbableStackError(N,R),(stack(_1189,N,R),not(climbableStack(N,R))))
':-'(totalWeight(O,W,X,Y),(selfWeight(O,W2),setof(X,isLocated(X,O,0),IN),setof(Y,isLocated(Y,O,1),ON),'!',weightInObject(X,O,W3),weightOnObject(Y,O,W4),is(W,'+'('+'(W2,W3),W4))))
':-'(totalWeight(O,W,X,[]),(selfWeight(O,W2),setof(X,isLocated(X,O,0),IN),'!',weightInObject(X,O,W3),is(W,'+'(W2,W3))))
':-'(totalWeight(O,W,[],Y),(selfWeight(O,W2),setof(Y,isLocated(Y,O,1),ON),'!',weightOnObject(Y,O,W3),is(W,'+'(W2,W3))))
':-'(totalWeight(O,W,[],[]),selfWeight(O,W))
':-'(selfWeight(O,W),hasVariable(O,weight,W))
':-'(selfWeight(O,0),(isObject(O),not(hasVariable(O,weight,W))))
':-'(weightOnObject(L,O,W),(setof(X,isLocated(X,O,1),L),'!',weightOnObjectAux(L,O,W)))
':-'(weightOnObjectAux([H|T],O,W),(notMember(H,T),isLocated(H,O,1),'!',weightOnObjectAux(T,O,W3),totalWeight(H,W2,_1227,_1228),is(W,'+'(W2,W3))))
weightOnObjectAux(_1229,O,0)
':-'(weightInObject(L,O,W),(setof(X,isLocated(X,O,0),L),'!',weightInObjectAux(L,O,W)))
':-'(weightInObjectAux([H|T],O,W),(notMember(H,T),isLocated(H,O,0),'!',weightInObjectAux(T,O,W3),totalWeight(H,W2,_1241,_1242),is(W,'+'(W2,W3))))
weightInObjectAux(_1243,O,0)
':-'(weightOnObjectEquals(O,W),(weightOnObject(_1247,O,W2),'='(W2,W)))
':-'(weightOnObjectAtLeast(O,W),(weightOnObject(_1251,O,W2),'>='(W2,W)))
':-'(weightOnObjectAtMost(O,W),(weightOnObject(_1255,O,W2),'=<'(W2,W)))
':-'(weightInObjectEquals(O,W),(weightInObject(_1259,O,W2),'='(W2,W)))
':-'(weightInObjectAtLeast(O,W),(weightInObject(_1263,O,W2),'>='(W2,W)))
':-'(weightInObjectAtMost(O,W),(weightInObject(_1267,O,W2),'=<'(W2,W)))
':-'(weightOnObjectNotEquals(O,W),(weightOnObject(_1271,O,W2),'\='(W2,W)))
':-'(weightOnObjectTooLow(O,W),(weightOnObject(_1275,O,W2),'<'(W2,W)))
':-'(weightOnObjectTooHigh(O,W),(weightOnObject(_1279,O,W2),'>'(W2,W)))
':-'(weightInObjectNotEquals(O,W),(weightInObject(_1283,O,W2),'\='(W2,W)))
':-'(weightInObjectTooLow(O,W),(weightInObject(_1287,O,W2),'<'(W2,W)))
':-'(weightInObjectTooHigh(O,W),(weightInObject(_1291,O,W2),'>'(W2,W)))
isRoom(ruinsentrance)
isRoom(civilisation)
isRoom(columns)
hasProperty(smallblock,takeable)
hasProperty(smallblock,stable)
hasVariable(smallblock,weight,25)
isObject(smallblock)
volume(smallblock,25)
surface(smallblock,25)
surfaceUsed(smallblock,0)
isRoom(altarroom)
hasProperty(altar,stable)
isObject(altar)
volume(altar,1)
surface(altar,50)
surfaceUsed(altar,0)
isLocated(altar,altarroom,0)
isObject(pressureplate1)
volume(pressureplate1,1)
surface(pressureplate1,50)
isLocated(pressureplate1,altarroom,0)
isObject(pressureplate2)
volume(pressureplate2,1)
surface(pressureplate2,50)
surfaceUsed(pressureplate2,0)
isLocated(pressureplate2,altarroom,0)
hasProperty(watercontainer1,takeable)
hasVariable(watercontainer1,weight,50)
isObject(watercontainer1)
volume(watercontainer1,25)
capacity(watercontainer1,25)
capacityUsed(watercontainer1,0)
isLocated(watercontainer1,pressureplate1,1)
isRoom(treasureroom)
hasProperty(chest,takeable)
hasProperty(chest,closablecontainer)
hasProperty(chest,locked)
hasVariable(chest,weight,25)
isClosed(chest,true)
isObject(chest)
volume(chest,50)
capacity(chest,50)
isLocated(chest,treasureroom,0)
hasProperty(treasure,takeable)
hasVariable(treasure,weight,25)
isObject(treasure)
volume(treasure,50)
isLocated(treasure,chest,0)
isRoom(storageroom)
hasProperty(cupboard,closablecontainer)
hasProperty(cupboard,stable)
isClosed(cupboard,true)
isObject(cupboard)
volume(cupboard,1)
capacity(cupboard,50)
surface(cupboard,50)
surfaceUsed(cupboard,0)
isLocated(cupboard,storageroom,0)
hasProperty(watercontainer2,takeable)
hasVariable(watercontainer2,weight,10)
isObject(watercontainer2)
volume(watercontainer2,25)
capacity(watercontainer2,25)
capacityUsed(watercontainer2,0)
isLocated(watercontainer2,cupboard,0)
hasProperty(plank,takeable)
hasVariable(plank,weight,25)
isObject(plank)
volume(plank,50)
surface(plank,50)
surfaceUsed(plank,0)
isLocated(plank,storageroom,0)
isRoom(attic)
hasProperty(key,takeable)
hasVariable(key,weight,1)
isObject(key)
volume(key,10)
isLocated(key,attic,0)
isRoom(rockytunnel)
hasProperty(mediumblock,takeable)
hasProperty(mediumblock,stable)
hasVariable(mediumblock,weight,50)
isObject(mediumblock)
volume(mediumblock,50)
surface(mediumblock,50)
isRoom(eastriver)
isObject(river)
volume(river,1)
isLocated(river,eastriver,0)
isObject(riversupports)
volume(riversupports,0)
surface(riversupports,50)
surfaceUsed(riversupports,0)
isLocated(riversupports,river,0)
isRoom(waterfallcavern)
isObject(waterfall)
volume(waterfall,1)
below(waterfall,100)
belowUsed(waterfall,0)
isLocated(waterfall,waterfallcavern,0)
isRoom(westriver)
isRoom(ancientquarry)
hasProperty(largeblock,takeable)
hasProperty(largeblock,stable)
hasVariable(largeblock,weight,75)
isObject(largeblock)
volume(largeblock,75)
surface(largeblock,75)
surfaceUsed(largeblock,0)
isLocated(largeblock,ancientquarry,0)
isRoom(deadroom)
surfaceUsed(pressureplate1,25)
capacityUsed(chest,50)
capacityUsed(cupboard,25)
isLocated(mediumblock,player,0)
isLocated(player,columns,0)
surfaceUsed(mediumblock,25)
isLocated(smallblock,mediumblock,1)

======================================================================================
Processing user input: inspect medium
======================================================================================

DEBUG: Pre-process input lemmas: [inspect, medium]
DEBUG: Pre-process input posTags: [VB, NN]
DEBUG: Removing conflicting synonym: block
DEBUG: Adding [medium] to matched objects
DEBUG: Adding 1 to matched indices
DEBUG: removeStart: [1]
DEBUG: removeEnd: [1]
DEBUG: Pre-processed: inspect item1
DEBUG: Lemmas: [inspect, item]
DEBUG: Verb found: INSPECT
DEBUG: PRSA set to: INSPECT

DEBUG: PRSA: INSPECT, PRSO: MEDIUMBLOCK, PRSI: null

DEBUG: ATTEMPT TO PERFORM ACTION ON PRSI

DEBUG: FAILED TO PERFORM ACTION ON PRSI

DEBUG: ATTEMPT TO PERFORM ACTION ON PRSO

DEBUG: FAILED TO PERFORM ACTION ON PRSO

DEBUG: ATTEMPT TO PERFORM GENERIC ACTION ON PRSA
DEBUG: Corrected Verb: look
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [climbableStack(3,storageroom)]

DEBUG: Querying: climbableStack(3,storageroom)
DEBUG: QueryCond not satisfied since query: climbableStack(3,storageroom) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [isLocated(plank,riversupports,1)]

DEBUG: Querying: isLocated(plank,riversupports,1)
DEBUG: QueryCond not satisfied since query: isLocated(plank,riversupports,1) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate1,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate1,50)
DEBUG: Solution: weightOnObjectAtLeast(pressureplate1,50) - bindings: yes.
DEBUG: QueryCond satisfied
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate2,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate2,50)
DEBUG: QueryCond not satisfied since query: weightOnObjectAtLeast(pressureplate2,50) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate1,50), weightOnObjectAtLeast(pressureplate2,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate1,50)
DEBUG: Solution: weightOnObjectAtLeast(pressureplate1,50) - bindings: yes.

DEBUG: Querying: weightOnObjectAtLeast(pressureplate2,50)
DEBUG: QueryCond not satisfied since query: weightOnObjectAtLeast(pressureplate2,50) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [isLocated(treasure,player,0)]

DEBUG: Querying: isLocated(treasure,player,0)
DEBUG: QueryCond not satisfied since query: isLocated(treasure,player,0) has no solutions

Knowledge Base:
':-'(notMember(_1069,[]),'!')
':-'(notMember(X,[Head|Tail]),('\='(X,Head),notMember(X,Tail)))
isObject(player)
capacity(player,2147483647)
capacityUsed(player,0)
':-'(inScope(A),(isObject(A),isLocated(A,B,_1075),isLocated(player,B,_1076),'!'))
':-'(inScope(A),(isObject(A),isLocated(A,B,0),hasProperty(B,closablecontainer),'!',isClosed(B,false),inScope(B)))
':-'(inScope(A),(isObject(A),isLocated(A,B,_1081),inScope(B)))
':-'(putIn(A,B),(inScope(A),inScope(B),'\='(A,B),isLocated(A,C,_1085),'\='(A,C),hasProperty(B,closablecontainer),'!',isClosed(B,false),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putIn(A,B),(inScope(A),inScope(B),'\='(A,B),isLocated(A,C,_1093),'\='(A,C),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putInIgnoreScope(A,B),('\='(A,B),isLocated(A,C,_1101),'\='(A,C),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putOn(A,B),(inScope(A),inScope(B),'\='(A,B),volume(A,X),surface(B,Y),surfaceUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putOnIgnoreScope(A,B),('\='(A,B),volume(A,X),surface(B,Y),surfaceUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putBelow(A,B),(inScope(A),inScope(B),'\='(A,B),volume(A,X),below(B,Y),belowUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putBelowIgnoreScope(A,B),('\='(A,B),volume(A,X),below(B,Y),belowUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(outOfScope(A),not(inScope(A)))
':-'(noCapacity(A),not(capacity(A,_1132)))
':-'(noSurface(A),not(surface(A,_1134)))
':-'(noBelow(A),not(below(A,_1136)))
':-'(cantFitCapacity(A,B),(volume(A,X),capacity(B,Y),capacityUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(cantFitSurface(A,B),(volume(A,X),surface(B,Y),surfaceUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(cantFitBelow(A,B),(volume(A,X),below(B,Y),belowUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(tooBigCapacity(A,B),(volume(A,X),capacity(B,Y),'>'(X,Y)))
':-'(tooBigSurface(A,B),(volume(A,X),surface(B,Y),'>'(X,Y)))
':-'(tooBigBelow(A,B),(volume(A,X),below(B,Y),'>'(X,Y)))
':-'(sameObject(A,B),'='(A,B))
':-'(notObject(A),not(isObject(A)))
':-'(targetClosed(A),(hasProperty(A,closablecontainer),isClosed(A,true)))
':-'(stableStack([O],1,R),(isRoom(R),isObject(O),isLocated(O,R,0),hasProperty(O,stable)))
':-'(stableStack([H1,H2|T],M,R),(isObject(H1),isLocated(H1,H2,1),hasProperty(H1,stable),stableStack([H2|T],N,R),is(M,'+'(N,1))))
':-'(stack([O],1,R),(isRoom(R),isObject(O),isLocated(O,R,0)))
':-'(stack([H1,H2|T],M,R),(isObject(H1),isLocated(H1,H2,1),stack([H2|T],N,R),is(M,'+'(N,1))))
':-'(climbableStack(N,R),stableStack(_1186,N,R))
':-'(notClimbableStackError(N,R),(stack(_1189,N,R),not(climbableStack(N,R))))
':-'(totalWeight(O,W,X,Y),(selfWeight(O,W2),setof(X,isLocated(X,O,0),IN),setof(Y,isLocated(Y,O,1),ON),'!',weightInObject(X,O,W3),weightOnObject(Y,O,W4),is(W,'+'('+'(W2,W3),W4))))
':-'(totalWeight(O,W,X,[]),(selfWeight(O,W2),setof(X,isLocated(X,O,0),IN),'!',weightInObject(X,O,W3),is(W,'+'(W2,W3))))
':-'(totalWeight(O,W,[],Y),(selfWeight(O,W2),setof(Y,isLocated(Y,O,1),ON),'!',weightOnObject(Y,O,W3),is(W,'+'(W2,W3))))
':-'(totalWeight(O,W,[],[]),selfWeight(O,W))
':-'(selfWeight(O,W),hasVariable(O,weight,W))
':-'(selfWeight(O,0),(isObject(O),not(hasVariable(O,weight,W))))
':-'(weightOnObject(L,O,W),(setof(X,isLocated(X,O,1),L),'!',weightOnObjectAux(L,O,W)))
':-'(weightOnObjectAux([H|T],O,W),(notMember(H,T),isLocated(H,O,1),'!',weightOnObjectAux(T,O,W3),totalWeight(H,W2,_1227,_1228),is(W,'+'(W2,W3))))
weightOnObjectAux(_1229,O,0)
':-'(weightInObject(L,O,W),(setof(X,isLocated(X,O,0),L),'!',weightInObjectAux(L,O,W)))
':-'(weightInObjectAux([H|T],O,W),(notMember(H,T),isLocated(H,O,0),'!',weightInObjectAux(T,O,W3),totalWeight(H,W2,_1241,_1242),is(W,'+'(W2,W3))))
weightInObjectAux(_1243,O,0)
':-'(weightOnObjectEquals(O,W),(weightOnObject(_1247,O,W2),'='(W2,W)))
':-'(weightOnObjectAtLeast(O,W),(weightOnObject(_1251,O,W2),'>='(W2,W)))
':-'(weightOnObjectAtMost(O,W),(weightOnObject(_1255,O,W2),'=<'(W2,W)))
':-'(weightInObjectEquals(O,W),(weightInObject(_1259,O,W2),'='(W2,W)))
':-'(weightInObjectAtLeast(O,W),(weightInObject(_1263,O,W2),'>='(W2,W)))
':-'(weightInObjectAtMost(O,W),(weightInObject(_1267,O,W2),'=<'(W2,W)))
':-'(weightOnObjectNotEquals(O,W),(weightOnObject(_1271,O,W2),'\='(W2,W)))
':-'(weightOnObjectTooLow(O,W),(weightOnObject(_1275,O,W2),'<'(W2,W)))
':-'(weightOnObjectTooHigh(O,W),(weightOnObject(_1279,O,W2),'>'(W2,W)))
':-'(weightInObjectNotEquals(O,W),(weightInObject(_1283,O,W2),'\='(W2,W)))
':-'(weightInObjectTooLow(O,W),(weightInObject(_1287,O,W2),'<'(W2,W)))
':-'(weightInObjectTooHigh(O,W),(weightInObject(_1291,O,W2),'>'(W2,W)))
isRoom(ruinsentrance)
isRoom(civilisation)
isRoom(columns)
hasProperty(smallblock,takeable)
hasProperty(smallblock,stable)
hasVariable(smallblock,weight,25)
isObject(smallblock)
volume(smallblock,25)
surface(smallblock,25)
surfaceUsed(smallblock,0)
isRoom(altarroom)
hasProperty(altar,stable)
isObject(altar)
volume(altar,1)
surface(altar,50)
surfaceUsed(altar,0)
isLocated(altar,altarroom,0)
isObject(pressureplate1)
volume(pressureplate1,1)
surface(pressureplate1,50)
isLocated(pressureplate1,altarroom,0)
isObject(pressureplate2)
volume(pressureplate2,1)
surface(pressureplate2,50)
surfaceUsed(pressureplate2,0)
isLocated(pressureplate2,altarroom,0)
hasProperty(watercontainer1,takeable)
hasVariable(watercontainer1,weight,50)
isObject(watercontainer1)
volume(watercontainer1,25)
capacity(watercontainer1,25)
capacityUsed(watercontainer1,0)
isLocated(watercontainer1,pressureplate1,1)
isRoom(treasureroom)
hasProperty(chest,takeable)
hasProperty(chest,closablecontainer)
hasProperty(chest,locked)
hasVariable(chest,weight,25)
isClosed(chest,true)
isObject(chest)
volume(chest,50)
capacity(chest,50)
isLocated(chest,treasureroom,0)
hasProperty(treasure,takeable)
hasVariable(treasure,weight,25)
isObject(treasure)
volume(treasure,50)
isLocated(treasure,chest,0)
isRoom(storageroom)
hasProperty(cupboard,closablecontainer)
hasProperty(cupboard,stable)
isClosed(cupboard,true)
isObject(cupboard)
volume(cupboard,1)
capacity(cupboard,50)
surface(cupboard,50)
surfaceUsed(cupboard,0)
isLocated(cupboard,storageroom,0)
hasProperty(watercontainer2,takeable)
hasVariable(watercontainer2,weight,10)
isObject(watercontainer2)
volume(watercontainer2,25)
capacity(watercontainer2,25)
capacityUsed(watercontainer2,0)
isLocated(watercontainer2,cupboard,0)
hasProperty(plank,takeable)
hasVariable(plank,weight,25)
isObject(plank)
volume(plank,50)
surface(plank,50)
surfaceUsed(plank,0)
isLocated(plank,storageroom,0)
isRoom(attic)
hasProperty(key,takeable)
hasVariable(key,weight,1)
isObject(key)
volume(key,10)
isLocated(key,attic,0)
isRoom(rockytunnel)
hasProperty(mediumblock,takeable)
hasProperty(mediumblock,stable)
hasVariable(mediumblock,weight,50)
isObject(mediumblock)
volume(mediumblock,50)
surface(mediumblock,50)
isRoom(eastriver)
isObject(river)
volume(river,1)
isLocated(river,eastriver,0)
isObject(riversupports)
volume(riversupports,0)
surface(riversupports,50)
surfaceUsed(riversupports,0)
isLocated(riversupports,river,0)
isRoom(waterfallcavern)
isObject(waterfall)
volume(waterfall,1)
below(waterfall,100)
belowUsed(waterfall,0)
isLocated(waterfall,waterfallcavern,0)
isRoom(westriver)
isRoom(ancientquarry)
hasProperty(largeblock,takeable)
hasProperty(largeblock,stable)
hasVariable(largeblock,weight,75)
isObject(largeblock)
volume(largeblock,75)
surface(largeblock,75)
surfaceUsed(largeblock,0)
isLocated(largeblock,ancientquarry,0)
isRoom(deadroom)
surfaceUsed(pressureplate1,25)
capacityUsed(chest,50)
capacityUsed(cupboard,25)
isLocated(mediumblock,player,0)
isLocated(player,columns,0)
surfaceUsed(mediumblock,25)
isLocated(smallblock,mediumblock,1)

======================================================================================
Processing user input: drop medium
======================================================================================

DEBUG: Pre-process input lemmas: [drop, medium]
DEBUG: Pre-process input posTags: [NN, NN]
DEBUG: Removing conflicting synonym: block
DEBUG: Adding [medium] to matched objects
DEBUG: Adding 1 to matched indices
DEBUG: removeStart: [1]
DEBUG: removeEnd: [1]
DEBUG: Pre-processed: drop item1
DEBUG: Lemmas: [drop, item]
DEBUG: Verb found: DROP
DEBUG: PRSA set to: DROP

DEBUG: PRSA: DROP, PRSO: MEDIUMBLOCK, PRSI: null

DEBUG: ATTEMPT TO PERFORM ACTION ON PRSI

DEBUG: FAILED TO PERFORM ACTION ON PRSI

DEBUG: ATTEMPT TO PERFORM ACTION ON PRSO

DEBUG: FAILED TO PERFORM ACTION ON PRSO

DEBUG: ATTEMPT TO PERFORM GENERIC ACTION ON PRSA
DEBUG: Corrected Verb: place

DEBUG: Removed clause isLocated(mediumblock,player,0)

DEBUG: Adding clause isLocated(mediumblock,columns,0)
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [climbableStack(3,storageroom)]

DEBUG: Querying: climbableStack(3,storageroom)
DEBUG: QueryCond not satisfied since query: climbableStack(3,storageroom) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [isLocated(plank,riversupports,1)]

DEBUG: Querying: isLocated(plank,riversupports,1)
DEBUG: QueryCond not satisfied since query: isLocated(plank,riversupports,1) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate1,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate1,50)
DEBUG: Solution: weightOnObjectAtLeast(pressureplate1,50) - bindings: yes.
DEBUG: QueryCond satisfied
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate2,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate2,50)
DEBUG: QueryCond not satisfied since query: weightOnObjectAtLeast(pressureplate2,50) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate1,50), weightOnObjectAtLeast(pressureplate2,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate1,50)
DEBUG: Solution: weightOnObjectAtLeast(pressureplate1,50) - bindings: yes.

DEBUG: Querying: weightOnObjectAtLeast(pressureplate2,50)
DEBUG: QueryCond not satisfied since query: weightOnObjectAtLeast(pressureplate2,50) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [isLocated(treasure,player,0)]

DEBUG: Querying: isLocated(treasure,player,0)
DEBUG: QueryCond not satisfied since query: isLocated(treasure,player,0) has no solutions

Knowledge Base:
':-'(notMember(_1069,[]),'!')
':-'(notMember(X,[Head|Tail]),('\='(X,Head),notMember(X,Tail)))
isObject(player)
capacity(player,2147483647)
capacityUsed(player,0)
':-'(inScope(A),(isObject(A),isLocated(A,B,_1075),isLocated(player,B,_1076),'!'))
':-'(inScope(A),(isObject(A),isLocated(A,B,0),hasProperty(B,closablecontainer),'!',isClosed(B,false),inScope(B)))
':-'(inScope(A),(isObject(A),isLocated(A,B,_1081),inScope(B)))
':-'(putIn(A,B),(inScope(A),inScope(B),'\='(A,B),isLocated(A,C,_1085),'\='(A,C),hasProperty(B,closablecontainer),'!',isClosed(B,false),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putIn(A,B),(inScope(A),inScope(B),'\='(A,B),isLocated(A,C,_1093),'\='(A,C),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putInIgnoreScope(A,B),('\='(A,B),isLocated(A,C,_1101),'\='(A,C),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putOn(A,B),(inScope(A),inScope(B),'\='(A,B),volume(A,X),surface(B,Y),surfaceUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putOnIgnoreScope(A,B),('\='(A,B),volume(A,X),surface(B,Y),surfaceUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putBelow(A,B),(inScope(A),inScope(B),'\='(A,B),volume(A,X),below(B,Y),belowUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putBelowIgnoreScope(A,B),('\='(A,B),volume(A,X),below(B,Y),belowUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(outOfScope(A),not(inScope(A)))
':-'(noCapacity(A),not(capacity(A,_1132)))
':-'(noSurface(A),not(surface(A,_1134)))
':-'(noBelow(A),not(below(A,_1136)))
':-'(cantFitCapacity(A,B),(volume(A,X),capacity(B,Y),capacityUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(cantFitSurface(A,B),(volume(A,X),surface(B,Y),surfaceUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(cantFitBelow(A,B),(volume(A,X),below(B,Y),belowUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(tooBigCapacity(A,B),(volume(A,X),capacity(B,Y),'>'(X,Y)))
':-'(tooBigSurface(A,B),(volume(A,X),surface(B,Y),'>'(X,Y)))
':-'(tooBigBelow(A,B),(volume(A,X),below(B,Y),'>'(X,Y)))
':-'(sameObject(A,B),'='(A,B))
':-'(notObject(A),not(isObject(A)))
':-'(targetClosed(A),(hasProperty(A,closablecontainer),isClosed(A,true)))
':-'(stableStack([O],1,R),(isRoom(R),isObject(O),isLocated(O,R,0),hasProperty(O,stable)))
':-'(stableStack([H1,H2|T],M,R),(isObject(H1),isLocated(H1,H2,1),hasProperty(H1,stable),stableStack([H2|T],N,R),is(M,'+'(N,1))))
':-'(stack([O],1,R),(isRoom(R),isObject(O),isLocated(O,R,0)))
':-'(stack([H1,H2|T],M,R),(isObject(H1),isLocated(H1,H2,1),stack([H2|T],N,R),is(M,'+'(N,1))))
':-'(climbableStack(N,R),stableStack(_1186,N,R))
':-'(notClimbableStackError(N,R),(stack(_1189,N,R),not(climbableStack(N,R))))
':-'(totalWeight(O,W,X,Y),(selfWeight(O,W2),setof(X,isLocated(X,O,0),IN),setof(Y,isLocated(Y,O,1),ON),'!',weightInObject(X,O,W3),weightOnObject(Y,O,W4),is(W,'+'('+'(W2,W3),W4))))
':-'(totalWeight(O,W,X,[]),(selfWeight(O,W2),setof(X,isLocated(X,O,0),IN),'!',weightInObject(X,O,W3),is(W,'+'(W2,W3))))
':-'(totalWeight(O,W,[],Y),(selfWeight(O,W2),setof(Y,isLocated(Y,O,1),ON),'!',weightOnObject(Y,O,W3),is(W,'+'(W2,W3))))
':-'(totalWeight(O,W,[],[]),selfWeight(O,W))
':-'(selfWeight(O,W),hasVariable(O,weight,W))
':-'(selfWeight(O,0),(isObject(O),not(hasVariable(O,weight,W))))
':-'(weightOnObject(L,O,W),(setof(X,isLocated(X,O,1),L),'!',weightOnObjectAux(L,O,W)))
':-'(weightOnObjectAux([H|T],O,W),(notMember(H,T),isLocated(H,O,1),'!',weightOnObjectAux(T,O,W3),totalWeight(H,W2,_1227,_1228),is(W,'+'(W2,W3))))
weightOnObjectAux(_1229,O,0)
':-'(weightInObject(L,O,W),(setof(X,isLocated(X,O,0),L),'!',weightInObjectAux(L,O,W)))
':-'(weightInObjectAux([H|T],O,W),(notMember(H,T),isLocated(H,O,0),'!',weightInObjectAux(T,O,W3),totalWeight(H,W2,_1241,_1242),is(W,'+'(W2,W3))))
weightInObjectAux(_1243,O,0)
':-'(weightOnObjectEquals(O,W),(weightOnObject(_1247,O,W2),'='(W2,W)))
':-'(weightOnObjectAtLeast(O,W),(weightOnObject(_1251,O,W2),'>='(W2,W)))
':-'(weightOnObjectAtMost(O,W),(weightOnObject(_1255,O,W2),'=<'(W2,W)))
':-'(weightInObjectEquals(O,W),(weightInObject(_1259,O,W2),'='(W2,W)))
':-'(weightInObjectAtLeast(O,W),(weightInObject(_1263,O,W2),'>='(W2,W)))
':-'(weightInObjectAtMost(O,W),(weightInObject(_1267,O,W2),'=<'(W2,W)))
':-'(weightOnObjectNotEquals(O,W),(weightOnObject(_1271,O,W2),'\='(W2,W)))
':-'(weightOnObjectTooLow(O,W),(weightOnObject(_1275,O,W2),'<'(W2,W)))
':-'(weightOnObjectTooHigh(O,W),(weightOnObject(_1279,O,W2),'>'(W2,W)))
':-'(weightInObjectNotEquals(O,W),(weightInObject(_1283,O,W2),'\='(W2,W)))
':-'(weightInObjectTooLow(O,W),(weightInObject(_1287,O,W2),'<'(W2,W)))
':-'(weightInObjectTooHigh(O,W),(weightInObject(_1291,O,W2),'>'(W2,W)))
isRoom(ruinsentrance)
isRoom(civilisation)
isRoom(columns)
hasProperty(smallblock,takeable)
hasProperty(smallblock,stable)
hasVariable(smallblock,weight,25)
isObject(smallblock)
volume(smallblock,25)
surface(smallblock,25)
surfaceUsed(smallblock,0)
isRoom(altarroom)
hasProperty(altar,stable)
isObject(altar)
volume(altar,1)
surface(altar,50)
surfaceUsed(altar,0)
isLocated(altar,altarroom,0)
isObject(pressureplate1)
volume(pressureplate1,1)
surface(pressureplate1,50)
isLocated(pressureplate1,altarroom,0)
isObject(pressureplate2)
volume(pressureplate2,1)
surface(pressureplate2,50)
surfaceUsed(pressureplate2,0)
isLocated(pressureplate2,altarroom,0)
hasProperty(watercontainer1,takeable)
hasVariable(watercontainer1,weight,50)
isObject(watercontainer1)
volume(watercontainer1,25)
capacity(watercontainer1,25)
capacityUsed(watercontainer1,0)
isLocated(watercontainer1,pressureplate1,1)
isRoom(treasureroom)
hasProperty(chest,takeable)
hasProperty(chest,closablecontainer)
hasProperty(chest,locked)
hasVariable(chest,weight,25)
isClosed(chest,true)
isObject(chest)
volume(chest,50)
capacity(chest,50)
isLocated(chest,treasureroom,0)
hasProperty(treasure,takeable)
hasVariable(treasure,weight,25)
isObject(treasure)
volume(treasure,50)
isLocated(treasure,chest,0)
isRoom(storageroom)
hasProperty(cupboard,closablecontainer)
hasProperty(cupboard,stable)
isClosed(cupboard,true)
isObject(cupboard)
volume(cupboard,1)
capacity(cupboard,50)
surface(cupboard,50)
surfaceUsed(cupboard,0)
isLocated(cupboard,storageroom,0)
hasProperty(watercontainer2,takeable)
hasVariable(watercontainer2,weight,10)
isObject(watercontainer2)
volume(watercontainer2,25)
capacity(watercontainer2,25)
capacityUsed(watercontainer2,0)
isLocated(watercontainer2,cupboard,0)
hasProperty(plank,takeable)
hasVariable(plank,weight,25)
isObject(plank)
volume(plank,50)
surface(plank,50)
surfaceUsed(plank,0)
isLocated(plank,storageroom,0)
isRoom(attic)
hasProperty(key,takeable)
hasVariable(key,weight,1)
isObject(key)
volume(key,10)
isLocated(key,attic,0)
isRoom(rockytunnel)
hasProperty(mediumblock,takeable)
hasProperty(mediumblock,stable)
hasVariable(mediumblock,weight,50)
isObject(mediumblock)
volume(mediumblock,50)
surface(mediumblock,50)
isRoom(eastriver)
isObject(river)
volume(river,1)
isLocated(river,eastriver,0)
isObject(riversupports)
volume(riversupports,0)
surface(riversupports,50)
surfaceUsed(riversupports,0)
isLocated(riversupports,river,0)
isRoom(waterfallcavern)
isObject(waterfall)
volume(waterfall,1)
below(waterfall,100)
belowUsed(waterfall,0)
isLocated(waterfall,waterfallcavern,0)
isRoom(westriver)
isRoom(ancientquarry)
hasProperty(largeblock,takeable)
hasProperty(largeblock,stable)
hasVariable(largeblock,weight,75)
isObject(largeblock)
volume(largeblock,75)
surface(largeblock,75)
surfaceUsed(largeblock,0)
isLocated(largeblock,ancientquarry,0)
isRoom(deadroom)
surfaceUsed(pressureplate1,25)
capacityUsed(chest,50)
capacityUsed(cupboard,25)
isLocated(player,columns,0)
surfaceUsed(mediumblock,25)
isLocated(smallblock,mediumblock,1)
isLocated(mediumblock,columns,0)

======================================================================================
Processing user input: see
======================================================================================


DEBUG: PRSA: LOOK AROUND, PRSO: null, PRSI: null

DEBUG: ATTEMPT TO PERFORM ACTION ON PRSI

DEBUG: FAILED TO PERFORM ACTION ON PRSI

DEBUG: ATTEMPT TO PERFORM ACTION ON PRSO

DEBUG: FAILED TO PERFORM ACTION ON PRSO

DEBUG: ATTEMPT TO PERFORM GENERIC ACTION ON PRSA
DEBUG: Corrected Verb: look around
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [climbableStack(3,storageroom)]

DEBUG: Querying: climbableStack(3,storageroom)
DEBUG: QueryCond not satisfied since query: climbableStack(3,storageroom) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [isLocated(plank,riversupports,1)]

DEBUG: Querying: isLocated(plank,riversupports,1)
DEBUG: QueryCond not satisfied since query: isLocated(plank,riversupports,1) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate1,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate1,50)
DEBUG: Solution: weightOnObjectAtLeast(pressureplate1,50) - bindings: yes.
DEBUG: QueryCond satisfied
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate2,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate2,50)
DEBUG: QueryCond not satisfied since query: weightOnObjectAtLeast(pressureplate2,50) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate1,50), weightOnObjectAtLeast(pressureplate2,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate1,50)
DEBUG: Solution: weightOnObjectAtLeast(pressureplate1,50) - bindings: yes.

DEBUG: Querying: weightOnObjectAtLeast(pressureplate2,50)
DEBUG: QueryCond not satisfied since query: weightOnObjectAtLeast(pressureplate2,50) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [isLocated(treasure,player,0)]

DEBUG: Querying: isLocated(treasure,player,0)
DEBUG: QueryCond not satisfied since query: isLocated(treasure,player,0) has no solutions

Knowledge Base:
':-'(notMember(_1069,[]),'!')
':-'(notMember(X,[Head|Tail]),('\='(X,Head),notMember(X,Tail)))
isObject(player)
capacity(player,2147483647)
capacityUsed(player,0)
':-'(inScope(A),(isObject(A),isLocated(A,B,_1075),isLocated(player,B,_1076),'!'))
':-'(inScope(A),(isObject(A),isLocated(A,B,0),hasProperty(B,closablecontainer),'!',isClosed(B,false),inScope(B)))
':-'(inScope(A),(isObject(A),isLocated(A,B,_1081),inScope(B)))
':-'(putIn(A,B),(inScope(A),inScope(B),'\='(A,B),isLocated(A,C,_1085),'\='(A,C),hasProperty(B,closablecontainer),'!',isClosed(B,false),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putIn(A,B),(inScope(A),inScope(B),'\='(A,B),isLocated(A,C,_1093),'\='(A,C),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putInIgnoreScope(A,B),('\='(A,B),isLocated(A,C,_1101),'\='(A,C),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putOn(A,B),(inScope(A),inScope(B),'\='(A,B),volume(A,X),surface(B,Y),surfaceUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putOnIgnoreScope(A,B),('\='(A,B),volume(A,X),surface(B,Y),surfaceUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putBelow(A,B),(inScope(A),inScope(B),'\='(A,B),volume(A,X),below(B,Y),belowUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putBelowIgnoreScope(A,B),('\='(A,B),volume(A,X),below(B,Y),belowUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(outOfScope(A),not(inScope(A)))
':-'(noCapacity(A),not(capacity(A,_1132)))
':-'(noSurface(A),not(surface(A,_1134)))
':-'(noBelow(A),not(below(A,_1136)))
':-'(cantFitCapacity(A,B),(volume(A,X),capacity(B,Y),capacityUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(cantFitSurface(A,B),(volume(A,X),surface(B,Y),surfaceUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(cantFitBelow(A,B),(volume(A,X),below(B,Y),belowUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(tooBigCapacity(A,B),(volume(A,X),capacity(B,Y),'>'(X,Y)))
':-'(tooBigSurface(A,B),(volume(A,X),surface(B,Y),'>'(X,Y)))
':-'(tooBigBelow(A,B),(volume(A,X),below(B,Y),'>'(X,Y)))
':-'(sameObject(A,B),'='(A,B))
':-'(notObject(A),not(isObject(A)))
':-'(targetClosed(A),(hasProperty(A,closablecontainer),isClosed(A,true)))
':-'(stableStack([O],1,R),(isRoom(R),isObject(O),isLocated(O,R,0),hasProperty(O,stable)))
':-'(stableStack([H1,H2|T],M,R),(isObject(H1),isLocated(H1,H2,1),hasProperty(H1,stable),stableStack([H2|T],N,R),is(M,'+'(N,1))))
':-'(stack([O],1,R),(isRoom(R),isObject(O),isLocated(O,R,0)))
':-'(stack([H1,H2|T],M,R),(isObject(H1),isLocated(H1,H2,1),stack([H2|T],N,R),is(M,'+'(N,1))))
':-'(climbableStack(N,R),stableStack(_1186,N,R))
':-'(notClimbableStackError(N,R),(stack(_1189,N,R),not(climbableStack(N,R))))
':-'(totalWeight(O,W,X,Y),(selfWeight(O,W2),setof(X,isLocated(X,O,0),IN),setof(Y,isLocated(Y,O,1),ON),'!',weightInObject(X,O,W3),weightOnObject(Y,O,W4),is(W,'+'('+'(W2,W3),W4))))
':-'(totalWeight(O,W,X,[]),(selfWeight(O,W2),setof(X,isLocated(X,O,0),IN),'!',weightInObject(X,O,W3),is(W,'+'(W2,W3))))
':-'(totalWeight(O,W,[],Y),(selfWeight(O,W2),setof(Y,isLocated(Y,O,1),ON),'!',weightOnObject(Y,O,W3),is(W,'+'(W2,W3))))
':-'(totalWeight(O,W,[],[]),selfWeight(O,W))
':-'(selfWeight(O,W),hasVariable(O,weight,W))
':-'(selfWeight(O,0),(isObject(O),not(hasVariable(O,weight,W))))
':-'(weightOnObject(L,O,W),(setof(X,isLocated(X,O,1),L),'!',weightOnObjectAux(L,O,W)))
':-'(weightOnObjectAux([H|T],O,W),(notMember(H,T),isLocated(H,O,1),'!',weightOnObjectAux(T,O,W3),totalWeight(H,W2,_1227,_1228),is(W,'+'(W2,W3))))
weightOnObjectAux(_1229,O,0)
':-'(weightInObject(L,O,W),(setof(X,isLocated(X,O,0),L),'!',weightInObjectAux(L,O,W)))
':-'(weightInObjectAux([H|T],O,W),(notMember(H,T),isLocated(H,O,0),'!',weightInObjectAux(T,O,W3),totalWeight(H,W2,_1241,_1242),is(W,'+'(W2,W3))))
weightInObjectAux(_1243,O,0)
':-'(weightOnObjectEquals(O,W),(weightOnObject(_1247,O,W2),'='(W2,W)))
':-'(weightOnObjectAtLeast(O,W),(weightOnObject(_1251,O,W2),'>='(W2,W)))
':-'(weightOnObjectAtMost(O,W),(weightOnObject(_1255,O,W2),'=<'(W2,W)))
':-'(weightInObjectEquals(O,W),(weightInObject(_1259,O,W2),'='(W2,W)))
':-'(weightInObjectAtLeast(O,W),(weightInObject(_1263,O,W2),'>='(W2,W)))
':-'(weightInObjectAtMost(O,W),(weightInObject(_1267,O,W2),'=<'(W2,W)))
':-'(weightOnObjectNotEquals(O,W),(weightOnObject(_1271,O,W2),'\='(W2,W)))
':-'(weightOnObjectTooLow(O,W),(weightOnObject(_1275,O,W2),'<'(W2,W)))
':-'(weightOnObjectTooHigh(O,W),(weightOnObject(_1279,O,W2),'>'(W2,W)))
':-'(weightInObjectNotEquals(O,W),(weightInObject(_1283,O,W2),'\='(W2,W)))
':-'(weightInObjectTooLow(O,W),(weightInObject(_1287,O,W2),'<'(W2,W)))
':-'(weightInObjectTooHigh(O,W),(weightInObject(_1291,O,W2),'>'(W2,W)))
isRoom(ruinsentrance)
isRoom(civilisation)
isRoom(columns)
hasProperty(smallblock,takeable)
hasProperty(smallblock,stable)
hasVariable(smallblock,weight,25)
isObject(smallblock)
volume(smallblock,25)
surface(smallblock,25)
surfaceUsed(smallblock,0)
isRoom(altarroom)
hasProperty(altar,stable)
isObject(altar)
volume(altar,1)
surface(altar,50)
surfaceUsed(altar,0)
isLocated(altar,altarroom,0)
isObject(pressureplate1)
volume(pressureplate1,1)
surface(pressureplate1,50)
isLocated(pressureplate1,altarroom,0)
isObject(pressureplate2)
volume(pressureplate2,1)
surface(pressureplate2,50)
surfaceUsed(pressureplate2,0)
isLocated(pressureplate2,altarroom,0)
hasProperty(watercontainer1,takeable)
hasVariable(watercontainer1,weight,50)
isObject(watercontainer1)
volume(watercontainer1,25)
capacity(watercontainer1,25)
capacityUsed(watercontainer1,0)
isLocated(watercontainer1,pressureplate1,1)
isRoom(treasureroom)
hasProperty(chest,takeable)
hasProperty(chest,closablecontainer)
hasProperty(chest,locked)
hasVariable(chest,weight,25)
isClosed(chest,true)
isObject(chest)
volume(chest,50)
capacity(chest,50)
isLocated(chest,treasureroom,0)
hasProperty(treasure,takeable)
hasVariable(treasure,weight,25)
isObject(treasure)
volume(treasure,50)
isLocated(treasure,chest,0)
isRoom(storageroom)
hasProperty(cupboard,closablecontainer)
hasProperty(cupboard,stable)
isClosed(cupboard,true)
isObject(cupboard)
volume(cupboard,1)
capacity(cupboard,50)
surface(cupboard,50)
surfaceUsed(cupboard,0)
isLocated(cupboard,storageroom,0)
hasProperty(watercontainer2,takeable)
hasVariable(watercontainer2,weight,10)
isObject(watercontainer2)
volume(watercontainer2,25)
capacity(watercontainer2,25)
capacityUsed(watercontainer2,0)
isLocated(watercontainer2,cupboard,0)
hasProperty(plank,takeable)
hasVariable(plank,weight,25)
isObject(plank)
volume(plank,50)
surface(plank,50)
surfaceUsed(plank,0)
isLocated(plank,storageroom,0)
isRoom(attic)
hasProperty(key,takeable)
hasVariable(key,weight,1)
isObject(key)
volume(key,10)
isLocated(key,attic,0)
isRoom(rockytunnel)
hasProperty(mediumblock,takeable)
hasProperty(mediumblock,stable)
hasVariable(mediumblock,weight,50)
isObject(mediumblock)
volume(mediumblock,50)
surface(mediumblock,50)
isRoom(eastriver)
isObject(river)
volume(river,1)
isLocated(river,eastriver,0)
isObject(riversupports)
volume(riversupports,0)
surface(riversupports,50)
surfaceUsed(riversupports,0)
isLocated(riversupports,river,0)
isRoom(waterfallcavern)
isObject(waterfall)
volume(waterfall,1)
below(waterfall,100)
belowUsed(waterfall,0)
isLocated(waterfall,waterfallcavern,0)
isRoom(westriver)
isRoom(ancientquarry)
hasProperty(largeblock,takeable)
hasProperty(largeblock,stable)
hasVariable(largeblock,weight,75)
isObject(largeblock)
volume(largeblock,75)
surface(largeblock,75)
surfaceUsed(largeblock,0)
isLocated(largeblock,ancientquarry,0)
isRoom(deadroom)
surfaceUsed(pressureplate1,25)
capacityUsed(chest,50)
capacityUsed(cupboard,25)
isLocated(player,columns,0)
surfaceUsed(mediumblock,25)
isLocated(smallblock,mediumblock,1)
isLocated(mediumblock,columns,0)

======================================================================================
Processing user input: take medium
======================================================================================

DEBUG: Pre-process input lemmas: [take, medium]
DEBUG: Pre-process input posTags: [VB, NN]
DEBUG: Removing conflicting synonym: block
DEBUG: Adding [medium] to matched objects
DEBUG: Adding 1 to matched indices
DEBUG: removeStart: [1]
DEBUG: removeEnd: [1]
DEBUG: Pre-processed: take item1
DEBUG: Lemmas: [take, item]
DEBUG: Verb found: TAKE
DEBUG: PRSA set to: TAKE

DEBUG: PRSA: TAKE, PRSO: MEDIUMBLOCK, PRSI: null

DEBUG: ATTEMPT TO PERFORM ACTION ON PRSI

DEBUG: FAILED TO PERFORM ACTION ON PRSI

DEBUG: ATTEMPT TO PERFORM ACTION ON PRSO

DEBUG: FAILED TO PERFORM ACTION ON PRSO

DEBUG: ATTEMPT TO PERFORM GENERIC ACTION ON PRSA
DEBUG: Corrected Verb: take
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [climbableStack(3,storageroom)]

DEBUG: Querying: climbableStack(3,storageroom)
DEBUG: QueryCond not satisfied since query: climbableStack(3,storageroom) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [isLocated(plank,riversupports,1)]

DEBUG: Querying: isLocated(plank,riversupports,1)
DEBUG: QueryCond not satisfied since query: isLocated(plank,riversupports,1) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate1,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate1,50)
DEBUG: Solution: weightOnObjectAtLeast(pressureplate1,50) - bindings: yes.
DEBUG: QueryCond satisfied
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate2,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate2,50)
DEBUG: QueryCond not satisfied since query: weightOnObjectAtLeast(pressureplate2,50) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate1,50), weightOnObjectAtLeast(pressureplate2,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate1,50)
DEBUG: Solution: weightOnObjectAtLeast(pressureplate1,50) - bindings: yes.

DEBUG: Querying: weightOnObjectAtLeast(pressureplate2,50)
DEBUG: QueryCond not satisfied since query: weightOnObjectAtLeast(pressureplate2,50) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [isLocated(treasure,player,0)]

DEBUG: Querying: isLocated(treasure,player,0)
DEBUG: QueryCond not satisfied since query: isLocated(treasure,player,0) has no solutions

Knowledge Base:
':-'(notMember(_1069,[]),'!')
':-'(notMember(X,[Head|Tail]),('\='(X,Head),notMember(X,Tail)))
isObject(player)
capacity(player,2147483647)
capacityUsed(player,0)
':-'(inScope(A),(isObject(A),isLocated(A,B,_1075),isLocated(player,B,_1076),'!'))
':-'(inScope(A),(isObject(A),isLocated(A,B,0),hasProperty(B,closablecontainer),'!',isClosed(B,false),inScope(B)))
':-'(inScope(A),(isObject(A),isLocated(A,B,_1081),inScope(B)))
':-'(putIn(A,B),(inScope(A),inScope(B),'\='(A,B),isLocated(A,C,_1085),'\='(A,C),hasProperty(B,closablecontainer),'!',isClosed(B,false),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putIn(A,B),(inScope(A),inScope(B),'\='(A,B),isLocated(A,C,_1093),'\='(A,C),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putInIgnoreScope(A,B),('\='(A,B),isLocated(A,C,_1101),'\='(A,C),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putOn(A,B),(inScope(A),inScope(B),'\='(A,B),volume(A,X),surface(B,Y),surfaceUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putOnIgnoreScope(A,B),('\='(A,B),volume(A,X),surface(B,Y),surfaceUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putBelow(A,B),(inScope(A),inScope(B),'\='(A,B),volume(A,X),below(B,Y),belowUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putBelowIgnoreScope(A,B),('\='(A,B),volume(A,X),below(B,Y),belowUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(outOfScope(A),not(inScope(A)))
':-'(noCapacity(A),not(capacity(A,_1132)))
':-'(noSurface(A),not(surface(A,_1134)))
':-'(noBelow(A),not(below(A,_1136)))
':-'(cantFitCapacity(A,B),(volume(A,X),capacity(B,Y),capacityUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(cantFitSurface(A,B),(volume(A,X),surface(B,Y),surfaceUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(cantFitBelow(A,B),(volume(A,X),below(B,Y),belowUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(tooBigCapacity(A,B),(volume(A,X),capacity(B,Y),'>'(X,Y)))
':-'(tooBigSurface(A,B),(volume(A,X),surface(B,Y),'>'(X,Y)))
':-'(tooBigBelow(A,B),(volume(A,X),below(B,Y),'>'(X,Y)))
':-'(sameObject(A,B),'='(A,B))
':-'(notObject(A),not(isObject(A)))
':-'(targetClosed(A),(hasProperty(A,closablecontainer),isClosed(A,true)))
':-'(stableStack([O],1,R),(isRoom(R),isObject(O),isLocated(O,R,0),hasProperty(O,stable)))
':-'(stableStack([H1,H2|T],M,R),(isObject(H1),isLocated(H1,H2,1),hasProperty(H1,stable),stableStack([H2|T],N,R),is(M,'+'(N,1))))
':-'(stack([O],1,R),(isRoom(R),isObject(O),isLocated(O,R,0)))
':-'(stack([H1,H2|T],M,R),(isObject(H1),isLocated(H1,H2,1),stack([H2|T],N,R),is(M,'+'(N,1))))
':-'(climbableStack(N,R),stableStack(_1186,N,R))
':-'(notClimbableStackError(N,R),(stack(_1189,N,R),not(climbableStack(N,R))))
':-'(totalWeight(O,W,X,Y),(selfWeight(O,W2),setof(X,isLocated(X,O,0),IN),setof(Y,isLocated(Y,O,1),ON),'!',weightInObject(X,O,W3),weightOnObject(Y,O,W4),is(W,'+'('+'(W2,W3),W4))))
':-'(totalWeight(O,W,X,[]),(selfWeight(O,W2),setof(X,isLocated(X,O,0),IN),'!',weightInObject(X,O,W3),is(W,'+'(W2,W3))))
':-'(totalWeight(O,W,[],Y),(selfWeight(O,W2),setof(Y,isLocated(Y,O,1),ON),'!',weightOnObject(Y,O,W3),is(W,'+'(W2,W3))))
':-'(totalWeight(O,W,[],[]),selfWeight(O,W))
':-'(selfWeight(O,W),hasVariable(O,weight,W))
':-'(selfWeight(O,0),(isObject(O),not(hasVariable(O,weight,W))))
':-'(weightOnObject(L,O,W),(setof(X,isLocated(X,O,1),L),'!',weightOnObjectAux(L,O,W)))
':-'(weightOnObjectAux([H|T],O,W),(notMember(H,T),isLocated(H,O,1),'!',weightOnObjectAux(T,O,W3),totalWeight(H,W2,_1227,_1228),is(W,'+'(W2,W3))))
weightOnObjectAux(_1229,O,0)
':-'(weightInObject(L,O,W),(setof(X,isLocated(X,O,0),L),'!',weightInObjectAux(L,O,W)))
':-'(weightInObjectAux([H|T],O,W),(notMember(H,T),isLocated(H,O,0),'!',weightInObjectAux(T,O,W3),totalWeight(H,W2,_1241,_1242),is(W,'+'(W2,W3))))
weightInObjectAux(_1243,O,0)
':-'(weightOnObjectEquals(O,W),(weightOnObject(_1247,O,W2),'='(W2,W)))
':-'(weightOnObjectAtLeast(O,W),(weightOnObject(_1251,O,W2),'>='(W2,W)))
':-'(weightOnObjectAtMost(O,W),(weightOnObject(_1255,O,W2),'=<'(W2,W)))
':-'(weightInObjectEquals(O,W),(weightInObject(_1259,O,W2),'='(W2,W)))
':-'(weightInObjectAtLeast(O,W),(weightInObject(_1263,O,W2),'>='(W2,W)))
':-'(weightInObjectAtMost(O,W),(weightInObject(_1267,O,W2),'=<'(W2,W)))
':-'(weightOnObjectNotEquals(O,W),(weightOnObject(_1271,O,W2),'\='(W2,W)))
':-'(weightOnObjectTooLow(O,W),(weightOnObject(_1275,O,W2),'<'(W2,W)))
':-'(weightOnObjectTooHigh(O,W),(weightOnObject(_1279,O,W2),'>'(W2,W)))
':-'(weightInObjectNotEquals(O,W),(weightInObject(_1283,O,W2),'\='(W2,W)))
':-'(weightInObjectTooLow(O,W),(weightInObject(_1287,O,W2),'<'(W2,W)))
':-'(weightInObjectTooHigh(O,W),(weightInObject(_1291,O,W2),'>'(W2,W)))
isRoom(ruinsentrance)
isRoom(civilisation)
isRoom(columns)
hasProperty(smallblock,takeable)
hasProperty(smallblock,stable)
hasVariable(smallblock,weight,25)
isObject(smallblock)
volume(smallblock,25)
surface(smallblock,25)
surfaceUsed(smallblock,0)
isRoom(altarroom)
hasProperty(altar,stable)
isObject(altar)
volume(altar,1)
surface(altar,50)
surfaceUsed(altar,0)
isLocated(altar,altarroom,0)
isObject(pressureplate1)
volume(pressureplate1,1)
surface(pressureplate1,50)
isLocated(pressureplate1,altarroom,0)
isObject(pressureplate2)
volume(pressureplate2,1)
surface(pressureplate2,50)
surfaceUsed(pressureplate2,0)
isLocated(pressureplate2,altarroom,0)
hasProperty(watercontainer1,takeable)
hasVariable(watercontainer1,weight,50)
isObject(watercontainer1)
volume(watercontainer1,25)
capacity(watercontainer1,25)
capacityUsed(watercontainer1,0)
isLocated(watercontainer1,pressureplate1,1)
isRoom(treasureroom)
hasProperty(chest,takeable)
hasProperty(chest,closablecontainer)
hasProperty(chest,locked)
hasVariable(chest,weight,25)
isClosed(chest,true)
isObject(chest)
volume(chest,50)
capacity(chest,50)
isLocated(chest,treasureroom,0)
hasProperty(treasure,takeable)
hasVariable(treasure,weight,25)
isObject(treasure)
volume(treasure,50)
isLocated(treasure,chest,0)
isRoom(storageroom)
hasProperty(cupboard,closablecontainer)
hasProperty(cupboard,stable)
isClosed(cupboard,true)
isObject(cupboard)
volume(cupboard,1)
capacity(cupboard,50)
surface(cupboard,50)
surfaceUsed(cupboard,0)
isLocated(cupboard,storageroom,0)
hasProperty(watercontainer2,takeable)
hasVariable(watercontainer2,weight,10)
isObject(watercontainer2)
volume(watercontainer2,25)
capacity(watercontainer2,25)
capacityUsed(watercontainer2,0)
isLocated(watercontainer2,cupboard,0)
hasProperty(plank,takeable)
hasVariable(plank,weight,25)
isObject(plank)
volume(plank,50)
surface(plank,50)
surfaceUsed(plank,0)
isLocated(plank,storageroom,0)
isRoom(attic)
hasProperty(key,takeable)
hasVariable(key,weight,1)
isObject(key)
volume(key,10)
isLocated(key,attic,0)
isRoom(rockytunnel)
hasProperty(mediumblock,takeable)
hasProperty(mediumblock,stable)
hasVariable(mediumblock,weight,50)
isObject(mediumblock)
volume(mediumblock,50)
surface(mediumblock,50)
isRoom(eastriver)
isObject(river)
volume(river,1)
isLocated(river,eastriver,0)
isObject(riversupports)
volume(riversupports,0)
surface(riversupports,50)
surfaceUsed(riversupports,0)
isLocated(riversupports,river,0)
isRoom(waterfallcavern)
isObject(waterfall)
volume(waterfall,1)
below(waterfall,100)
belowUsed(waterfall,0)
isLocated(waterfall,waterfallcavern,0)
isRoom(westriver)
isRoom(ancientquarry)
hasProperty(largeblock,takeable)
hasProperty(largeblock,stable)
hasVariable(largeblock,weight,75)
isObject(largeblock)
volume(largeblock,75)
surface(largeblock,75)
surfaceUsed(largeblock,0)
isLocated(largeblock,ancientquarry,0)
isRoom(deadroom)
surfaceUsed(pressureplate1,25)
capacityUsed(chest,50)
capacityUsed(cupboard,25)
isLocated(player,columns,0)
surfaceUsed(mediumblock,25)
isLocated(smallblock,mediumblock,1)
isLocated(mediumblock,columns,0)

======================================================================================
Processing user input: take small
======================================================================================

DEBUG: Pre-process input lemmas: [take, small]
DEBUG: Pre-process input posTags: [VB, NNP]
DEBUG: Removing conflicting synonym: block
DEBUG: Adding [small] to matched objects
DEBUG: Adding 1 to matched indices
DEBUG: removeStart: [1]
DEBUG: removeEnd: [1]
DEBUG: Pre-processed: take item1
DEBUG: Lemmas: [take, item]
DEBUG: Verb found: TAKE
DEBUG: PRSA set to: TAKE

DEBUG: PRSA: TAKE, PRSO: SMALLBLOCK, PRSI: null

DEBUG: ATTEMPT TO PERFORM ACTION ON PRSI

DEBUG: FAILED TO PERFORM ACTION ON PRSI

DEBUG: ATTEMPT TO PERFORM ACTION ON PRSO

DEBUG: FAILED TO PERFORM ACTION ON PRSO

DEBUG: ATTEMPT TO PERFORM GENERIC ACTION ON PRSA
DEBUG: Corrected Verb: take

DEBUG: Querying: isObject(mediumblock)
DEBUG: Solution: isObject(mediumblock) - bindings: yes.

DEBUG: Querying: surfaceUsed(mediumblock,X)
DEBUG: Solution: surfaceUsed(mediumblock,25) - bindings: yes.
X / 25

DEBUG: Removed clause surfaceUsed(mediumblock,25)

DEBUG: Adding clause surfaceUsed(mediumblock,0)

DEBUG: Removed clause isLocated(smallblock,mediumblock,1)

DEBUG: Adding clause isLocated(smallblock,player,0)
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [climbableStack(3,storageroom)]

DEBUG: Querying: climbableStack(3,storageroom)
DEBUG: QueryCond not satisfied since query: climbableStack(3,storageroom) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [isLocated(plank,riversupports,1)]

DEBUG: Querying: isLocated(plank,riversupports,1)
DEBUG: QueryCond not satisfied since query: isLocated(plank,riversupports,1) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate1,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate1,50)
DEBUG: Solution: weightOnObjectAtLeast(pressureplate1,50) - bindings: yes.
DEBUG: QueryCond satisfied
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate2,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate2,50)
DEBUG: QueryCond not satisfied since query: weightOnObjectAtLeast(pressureplate2,50) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate1,50), weightOnObjectAtLeast(pressureplate2,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate1,50)
DEBUG: Solution: weightOnObjectAtLeast(pressureplate1,50) - bindings: yes.

DEBUG: Querying: weightOnObjectAtLeast(pressureplate2,50)
DEBUG: QueryCond not satisfied since query: weightOnObjectAtLeast(pressureplate2,50) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [isLocated(treasure,player,0)]

DEBUG: Querying: isLocated(treasure,player,0)
DEBUG: QueryCond not satisfied since query: isLocated(treasure,player,0) has no solutions

Knowledge Base:
':-'(notMember(_1069,[]),'!')
':-'(notMember(X,[Head|Tail]),('\='(X,Head),notMember(X,Tail)))
isObject(player)
capacity(player,2147483647)
capacityUsed(player,0)
':-'(inScope(A),(isObject(A),isLocated(A,B,_1075),isLocated(player,B,_1076),'!'))
':-'(inScope(A),(isObject(A),isLocated(A,B,0),hasProperty(B,closablecontainer),'!',isClosed(B,false),inScope(B)))
':-'(inScope(A),(isObject(A),isLocated(A,B,_1081),inScope(B)))
':-'(putIn(A,B),(inScope(A),inScope(B),'\='(A,B),isLocated(A,C,_1085),'\='(A,C),hasProperty(B,closablecontainer),'!',isClosed(B,false),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putIn(A,B),(inScope(A),inScope(B),'\='(A,B),isLocated(A,C,_1093),'\='(A,C),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putInIgnoreScope(A,B),('\='(A,B),isLocated(A,C,_1101),'\='(A,C),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putOn(A,B),(inScope(A),inScope(B),'\='(A,B),volume(A,X),surface(B,Y),surfaceUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putOnIgnoreScope(A,B),('\='(A,B),volume(A,X),surface(B,Y),surfaceUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putBelow(A,B),(inScope(A),inScope(B),'\='(A,B),volume(A,X),below(B,Y),belowUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putBelowIgnoreScope(A,B),('\='(A,B),volume(A,X),below(B,Y),belowUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(outOfScope(A),not(inScope(A)))
':-'(noCapacity(A),not(capacity(A,_1132)))
':-'(noSurface(A),not(surface(A,_1134)))
':-'(noBelow(A),not(below(A,_1136)))
':-'(cantFitCapacity(A,B),(volume(A,X),capacity(B,Y),capacityUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(cantFitSurface(A,B),(volume(A,X),surface(B,Y),surfaceUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(cantFitBelow(A,B),(volume(A,X),below(B,Y),belowUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(tooBigCapacity(A,B),(volume(A,X),capacity(B,Y),'>'(X,Y)))
':-'(tooBigSurface(A,B),(volume(A,X),surface(B,Y),'>'(X,Y)))
':-'(tooBigBelow(A,B),(volume(A,X),below(B,Y),'>'(X,Y)))
':-'(sameObject(A,B),'='(A,B))
':-'(notObject(A),not(isObject(A)))
':-'(targetClosed(A),(hasProperty(A,closablecontainer),isClosed(A,true)))
':-'(stableStack([O],1,R),(isRoom(R),isObject(O),isLocated(O,R,0),hasProperty(O,stable)))
':-'(stableStack([H1,H2|T],M,R),(isObject(H1),isLocated(H1,H2,1),hasProperty(H1,stable),stableStack([H2|T],N,R),is(M,'+'(N,1))))
':-'(stack([O],1,R),(isRoom(R),isObject(O),isLocated(O,R,0)))
':-'(stack([H1,H2|T],M,R),(isObject(H1),isLocated(H1,H2,1),stack([H2|T],N,R),is(M,'+'(N,1))))
':-'(climbableStack(N,R),stableStack(_1186,N,R))
':-'(notClimbableStackError(N,R),(stack(_1189,N,R),not(climbableStack(N,R))))
':-'(totalWeight(O,W,X,Y),(selfWeight(O,W2),setof(X,isLocated(X,O,0),IN),setof(Y,isLocated(Y,O,1),ON),'!',weightInObject(X,O,W3),weightOnObject(Y,O,W4),is(W,'+'('+'(W2,W3),W4))))
':-'(totalWeight(O,W,X,[]),(selfWeight(O,W2),setof(X,isLocated(X,O,0),IN),'!',weightInObject(X,O,W3),is(W,'+'(W2,W3))))
':-'(totalWeight(O,W,[],Y),(selfWeight(O,W2),setof(Y,isLocated(Y,O,1),ON),'!',weightOnObject(Y,O,W3),is(W,'+'(W2,W3))))
':-'(totalWeight(O,W,[],[]),selfWeight(O,W))
':-'(selfWeight(O,W),hasVariable(O,weight,W))
':-'(selfWeight(O,0),(isObject(O),not(hasVariable(O,weight,W))))
':-'(weightOnObject(L,O,W),(setof(X,isLocated(X,O,1),L),'!',weightOnObjectAux(L,O,W)))
':-'(weightOnObjectAux([H|T],O,W),(notMember(H,T),isLocated(H,O,1),'!',weightOnObjectAux(T,O,W3),totalWeight(H,W2,_1227,_1228),is(W,'+'(W2,W3))))
weightOnObjectAux(_1229,O,0)
':-'(weightInObject(L,O,W),(setof(X,isLocated(X,O,0),L),'!',weightInObjectAux(L,O,W)))
':-'(weightInObjectAux([H|T],O,W),(notMember(H,T),isLocated(H,O,0),'!',weightInObjectAux(T,O,W3),totalWeight(H,W2,_1241,_1242),is(W,'+'(W2,W3))))
weightInObjectAux(_1243,O,0)
':-'(weightOnObjectEquals(O,W),(weightOnObject(_1247,O,W2),'='(W2,W)))
':-'(weightOnObjectAtLeast(O,W),(weightOnObject(_1251,O,W2),'>='(W2,W)))
':-'(weightOnObjectAtMost(O,W),(weightOnObject(_1255,O,W2),'=<'(W2,W)))
':-'(weightInObjectEquals(O,W),(weightInObject(_1259,O,W2),'='(W2,W)))
':-'(weightInObjectAtLeast(O,W),(weightInObject(_1263,O,W2),'>='(W2,W)))
':-'(weightInObjectAtMost(O,W),(weightInObject(_1267,O,W2),'=<'(W2,W)))
':-'(weightOnObjectNotEquals(O,W),(weightOnObject(_1271,O,W2),'\='(W2,W)))
':-'(weightOnObjectTooLow(O,W),(weightOnObject(_1275,O,W2),'<'(W2,W)))
':-'(weightOnObjectTooHigh(O,W),(weightOnObject(_1279,O,W2),'>'(W2,W)))
':-'(weightInObjectNotEquals(O,W),(weightInObject(_1283,O,W2),'\='(W2,W)))
':-'(weightInObjectTooLow(O,W),(weightInObject(_1287,O,W2),'<'(W2,W)))
':-'(weightInObjectTooHigh(O,W),(weightInObject(_1291,O,W2),'>'(W2,W)))
isRoom(ruinsentrance)
isRoom(civilisation)
isRoom(columns)
hasProperty(smallblock,takeable)
hasProperty(smallblock,stable)
hasVariable(smallblock,weight,25)
isObject(smallblock)
volume(smallblock,25)
surface(smallblock,25)
surfaceUsed(smallblock,0)
isRoom(altarroom)
hasProperty(altar,stable)
isObject(altar)
volume(altar,1)
surface(altar,50)
surfaceUsed(altar,0)
isLocated(altar,altarroom,0)
isObject(pressureplate1)
volume(pressureplate1,1)
surface(pressureplate1,50)
isLocated(pressureplate1,altarroom,0)
isObject(pressureplate2)
volume(pressureplate2,1)
surface(pressureplate2,50)
surfaceUsed(pressureplate2,0)
isLocated(pressureplate2,altarroom,0)
hasProperty(watercontainer1,takeable)
hasVariable(watercontainer1,weight,50)
isObject(watercontainer1)
volume(watercontainer1,25)
capacity(watercontainer1,25)
capacityUsed(watercontainer1,0)
isLocated(watercontainer1,pressureplate1,1)
isRoom(treasureroom)
hasProperty(chest,takeable)
hasProperty(chest,closablecontainer)
hasProperty(chest,locked)
hasVariable(chest,weight,25)
isClosed(chest,true)
isObject(chest)
volume(chest,50)
capacity(chest,50)
isLocated(chest,treasureroom,0)
hasProperty(treasure,takeable)
hasVariable(treasure,weight,25)
isObject(treasure)
volume(treasure,50)
isLocated(treasure,chest,0)
isRoom(storageroom)
hasProperty(cupboard,closablecontainer)
hasProperty(cupboard,stable)
isClosed(cupboard,true)
isObject(cupboard)
volume(cupboard,1)
capacity(cupboard,50)
surface(cupboard,50)
surfaceUsed(cupboard,0)
isLocated(cupboard,storageroom,0)
hasProperty(watercontainer2,takeable)
hasVariable(watercontainer2,weight,10)
isObject(watercontainer2)
volume(watercontainer2,25)
capacity(watercontainer2,25)
capacityUsed(watercontainer2,0)
isLocated(watercontainer2,cupboard,0)
hasProperty(plank,takeable)
hasVariable(plank,weight,25)
isObject(plank)
volume(plank,50)
surface(plank,50)
surfaceUsed(plank,0)
isLocated(plank,storageroom,0)
isRoom(attic)
hasProperty(key,takeable)
hasVariable(key,weight,1)
isObject(key)
volume(key,10)
isLocated(key,attic,0)
isRoom(rockytunnel)
hasProperty(mediumblock,takeable)
hasProperty(mediumblock,stable)
hasVariable(mediumblock,weight,50)
isObject(mediumblock)
volume(mediumblock,50)
surface(mediumblock,50)
isRoom(eastriver)
isObject(river)
volume(river,1)
isLocated(river,eastriver,0)
isObject(riversupports)
volume(riversupports,0)
surface(riversupports,50)
surfaceUsed(riversupports,0)
isLocated(riversupports,river,0)
isRoom(waterfallcavern)
isObject(waterfall)
volume(waterfall,1)
below(waterfall,100)
belowUsed(waterfall,0)
isLocated(waterfall,waterfallcavern,0)
isRoom(westriver)
isRoom(ancientquarry)
hasProperty(largeblock,takeable)
hasProperty(largeblock,stable)
hasVariable(largeblock,weight,75)
isObject(largeblock)
volume(largeblock,75)
surface(largeblock,75)
surfaceUsed(largeblock,0)
isLocated(largeblock,ancientquarry,0)
isRoom(deadroom)
surfaceUsed(pressureplate1,25)
capacityUsed(chest,50)
capacityUsed(cupboard,25)
isLocated(player,columns,0)
isLocated(mediumblock,columns,0)
surfaceUsed(mediumblock,0)
isLocated(smallblock,player,0)

======================================================================================
Processing user input: take small
======================================================================================

DEBUG: Pre-process input lemmas: [take, small]
DEBUG: Pre-process input posTags: [VB, NNP]
DEBUG: Removing conflicting synonym: block
DEBUG: Adding [small] to matched objects
DEBUG: Adding 1 to matched indices
DEBUG: removeStart: [1]
DEBUG: removeEnd: [1]
DEBUG: Pre-processed: take item1
DEBUG: Lemmas: [take, item]
DEBUG: Verb found: TAKE
DEBUG: PRSA set to: TAKE

DEBUG: PRSA: TAKE, PRSO: SMALLBLOCK, PRSI: null

DEBUG: ATTEMPT TO PERFORM ACTION ON PRSI

DEBUG: FAILED TO PERFORM ACTION ON PRSI

DEBUG: ATTEMPT TO PERFORM ACTION ON PRSO

DEBUG: FAILED TO PERFORM ACTION ON PRSO

DEBUG: ATTEMPT TO PERFORM GENERIC ACTION ON PRSA
DEBUG: Corrected Verb: take
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [climbableStack(3,storageroom)]

DEBUG: Querying: climbableStack(3,storageroom)
DEBUG: QueryCond not satisfied since query: climbableStack(3,storageroom) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [isLocated(plank,riversupports,1)]

DEBUG: Querying: isLocated(plank,riversupports,1)
DEBUG: QueryCond not satisfied since query: isLocated(plank,riversupports,1) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate1,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate1,50)
DEBUG: Solution: weightOnObjectAtLeast(pressureplate1,50) - bindings: yes.
DEBUG: QueryCond satisfied
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate2,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate2,50)
DEBUG: QueryCond not satisfied since query: weightOnObjectAtLeast(pressureplate2,50) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate1,50), weightOnObjectAtLeast(pressureplate2,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate1,50)
DEBUG: Solution: weightOnObjectAtLeast(pressureplate1,50) - bindings: yes.

DEBUG: Querying: weightOnObjectAtLeast(pressureplate2,50)
DEBUG: QueryCond not satisfied since query: weightOnObjectAtLeast(pressureplate2,50) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [isLocated(treasure,player,0)]

DEBUG: Querying: isLocated(treasure,player,0)
DEBUG: QueryCond not satisfied since query: isLocated(treasure,player,0) has no solutions

Knowledge Base:
':-'(notMember(_1069,[]),'!')
':-'(notMember(X,[Head|Tail]),('\='(X,Head),notMember(X,Tail)))
isObject(player)
capacity(player,2147483647)
capacityUsed(player,0)
':-'(inScope(A),(isObject(A),isLocated(A,B,_1075),isLocated(player,B,_1076),'!'))
':-'(inScope(A),(isObject(A),isLocated(A,B,0),hasProperty(B,closablecontainer),'!',isClosed(B,false),inScope(B)))
':-'(inScope(A),(isObject(A),isLocated(A,B,_1081),inScope(B)))
':-'(putIn(A,B),(inScope(A),inScope(B),'\='(A,B),isLocated(A,C,_1085),'\='(A,C),hasProperty(B,closablecontainer),'!',isClosed(B,false),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putIn(A,B),(inScope(A),inScope(B),'\='(A,B),isLocated(A,C,_1093),'\='(A,C),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putInIgnoreScope(A,B),('\='(A,B),isLocated(A,C,_1101),'\='(A,C),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putOn(A,B),(inScope(A),inScope(B),'\='(A,B),volume(A,X),surface(B,Y),surfaceUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putOnIgnoreScope(A,B),('\='(A,B),volume(A,X),surface(B,Y),surfaceUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putBelow(A,B),(inScope(A),inScope(B),'\='(A,B),volume(A,X),below(B,Y),belowUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putBelowIgnoreScope(A,B),('\='(A,B),volume(A,X),below(B,Y),belowUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(outOfScope(A),not(inScope(A)))
':-'(noCapacity(A),not(capacity(A,_1132)))
':-'(noSurface(A),not(surface(A,_1134)))
':-'(noBelow(A),not(below(A,_1136)))
':-'(cantFitCapacity(A,B),(volume(A,X),capacity(B,Y),capacityUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(cantFitSurface(A,B),(volume(A,X),surface(B,Y),surfaceUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(cantFitBelow(A,B),(volume(A,X),below(B,Y),belowUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(tooBigCapacity(A,B),(volume(A,X),capacity(B,Y),'>'(X,Y)))
':-'(tooBigSurface(A,B),(volume(A,X),surface(B,Y),'>'(X,Y)))
':-'(tooBigBelow(A,B),(volume(A,X),below(B,Y),'>'(X,Y)))
':-'(sameObject(A,B),'='(A,B))
':-'(notObject(A),not(isObject(A)))
':-'(targetClosed(A),(hasProperty(A,closablecontainer),isClosed(A,true)))
':-'(stableStack([O],1,R),(isRoom(R),isObject(O),isLocated(O,R,0),hasProperty(O,stable)))
':-'(stableStack([H1,H2|T],M,R),(isObject(H1),isLocated(H1,H2,1),hasProperty(H1,stable),stableStack([H2|T],N,R),is(M,'+'(N,1))))
':-'(stack([O],1,R),(isRoom(R),isObject(O),isLocated(O,R,0)))
':-'(stack([H1,H2|T],M,R),(isObject(H1),isLocated(H1,H2,1),stack([H2|T],N,R),is(M,'+'(N,1))))
':-'(climbableStack(N,R),stableStack(_1186,N,R))
':-'(notClimbableStackError(N,R),(stack(_1189,N,R),not(climbableStack(N,R))))
':-'(totalWeight(O,W,X,Y),(selfWeight(O,W2),setof(X,isLocated(X,O,0),IN),setof(Y,isLocated(Y,O,1),ON),'!',weightInObject(X,O,W3),weightOnObject(Y,O,W4),is(W,'+'('+'(W2,W3),W4))))
':-'(totalWeight(O,W,X,[]),(selfWeight(O,W2),setof(X,isLocated(X,O,0),IN),'!',weightInObject(X,O,W3),is(W,'+'(W2,W3))))
':-'(totalWeight(O,W,[],Y),(selfWeight(O,W2),setof(Y,isLocated(Y,O,1),ON),'!',weightOnObject(Y,O,W3),is(W,'+'(W2,W3))))
':-'(totalWeight(O,W,[],[]),selfWeight(O,W))
':-'(selfWeight(O,W),hasVariable(O,weight,W))
':-'(selfWeight(O,0),(isObject(O),not(hasVariable(O,weight,W))))
':-'(weightOnObject(L,O,W),(setof(X,isLocated(X,O,1),L),'!',weightOnObjectAux(L,O,W)))
':-'(weightOnObjectAux([H|T],O,W),(notMember(H,T),isLocated(H,O,1),'!',weightOnObjectAux(T,O,W3),totalWeight(H,W2,_1227,_1228),is(W,'+'(W2,W3))))
weightOnObjectAux(_1229,O,0)
':-'(weightInObject(L,O,W),(setof(X,isLocated(X,O,0),L),'!',weightInObjectAux(L,O,W)))
':-'(weightInObjectAux([H|T],O,W),(notMember(H,T),isLocated(H,O,0),'!',weightInObjectAux(T,O,W3),totalWeight(H,W2,_1241,_1242),is(W,'+'(W2,W3))))
weightInObjectAux(_1243,O,0)
':-'(weightOnObjectEquals(O,W),(weightOnObject(_1247,O,W2),'='(W2,W)))
':-'(weightOnObjectAtLeast(O,W),(weightOnObject(_1251,O,W2),'>='(W2,W)))
':-'(weightOnObjectAtMost(O,W),(weightOnObject(_1255,O,W2),'=<'(W2,W)))
':-'(weightInObjectEquals(O,W),(weightInObject(_1259,O,W2),'='(W2,W)))
':-'(weightInObjectAtLeast(O,W),(weightInObject(_1263,O,W2),'>='(W2,W)))
':-'(weightInObjectAtMost(O,W),(weightInObject(_1267,O,W2),'=<'(W2,W)))
':-'(weightOnObjectNotEquals(O,W),(weightOnObject(_1271,O,W2),'\='(W2,W)))
':-'(weightOnObjectTooLow(O,W),(weightOnObject(_1275,O,W2),'<'(W2,W)))
':-'(weightOnObjectTooHigh(O,W),(weightOnObject(_1279,O,W2),'>'(W2,W)))
':-'(weightInObjectNotEquals(O,W),(weightInObject(_1283,O,W2),'\='(W2,W)))
':-'(weightInObjectTooLow(O,W),(weightInObject(_1287,O,W2),'<'(W2,W)))
':-'(weightInObjectTooHigh(O,W),(weightInObject(_1291,O,W2),'>'(W2,W)))
isRoom(ruinsentrance)
isRoom(civilisation)
isRoom(columns)
hasProperty(smallblock,takeable)
hasProperty(smallblock,stable)
hasVariable(smallblock,weight,25)
isObject(smallblock)
volume(smallblock,25)
surface(smallblock,25)
surfaceUsed(smallblock,0)
isRoom(altarroom)
hasProperty(altar,stable)
isObject(altar)
volume(altar,1)
surface(altar,50)
surfaceUsed(altar,0)
isLocated(altar,altarroom,0)
isObject(pressureplate1)
volume(pressureplate1,1)
surface(pressureplate1,50)
isLocated(pressureplate1,altarroom,0)
isObject(pressureplate2)
volume(pressureplate2,1)
surface(pressureplate2,50)
surfaceUsed(pressureplate2,0)
isLocated(pressureplate2,altarroom,0)
hasProperty(watercontainer1,takeable)
hasVariable(watercontainer1,weight,50)
isObject(watercontainer1)
volume(watercontainer1,25)
capacity(watercontainer1,25)
capacityUsed(watercontainer1,0)
isLocated(watercontainer1,pressureplate1,1)
isRoom(treasureroom)
hasProperty(chest,takeable)
hasProperty(chest,closablecontainer)
hasProperty(chest,locked)
hasVariable(chest,weight,25)
isClosed(chest,true)
isObject(chest)
volume(chest,50)
capacity(chest,50)
isLocated(chest,treasureroom,0)
hasProperty(treasure,takeable)
hasVariable(treasure,weight,25)
isObject(treasure)
volume(treasure,50)
isLocated(treasure,chest,0)
isRoom(storageroom)
hasProperty(cupboard,closablecontainer)
hasProperty(cupboard,stable)
isClosed(cupboard,true)
isObject(cupboard)
volume(cupboard,1)
capacity(cupboard,50)
surface(cupboard,50)
surfaceUsed(cupboard,0)
isLocated(cupboard,storageroom,0)
hasProperty(watercontainer2,takeable)
hasVariable(watercontainer2,weight,10)
isObject(watercontainer2)
volume(watercontainer2,25)
capacity(watercontainer2,25)
capacityUsed(watercontainer2,0)
isLocated(watercontainer2,cupboard,0)
hasProperty(plank,takeable)
hasVariable(plank,weight,25)
isObject(plank)
volume(plank,50)
surface(plank,50)
surfaceUsed(plank,0)
isLocated(plank,storageroom,0)
isRoom(attic)
hasProperty(key,takeable)
hasVariable(key,weight,1)
isObject(key)
volume(key,10)
isLocated(key,attic,0)
isRoom(rockytunnel)
hasProperty(mediumblock,takeable)
hasProperty(mediumblock,stable)
hasVariable(mediumblock,weight,50)
isObject(mediumblock)
volume(mediumblock,50)
surface(mediumblock,50)
isRoom(eastriver)
isObject(river)
volume(river,1)
isLocated(river,eastriver,0)
isObject(riversupports)
volume(riversupports,0)
surface(riversupports,50)
surfaceUsed(riversupports,0)
isLocated(riversupports,river,0)
isRoom(waterfallcavern)
isObject(waterfall)
volume(waterfall,1)
below(waterfall,100)
belowUsed(waterfall,0)
isLocated(waterfall,waterfallcavern,0)
isRoom(westriver)
isRoom(ancientquarry)
hasProperty(largeblock,takeable)
hasProperty(largeblock,stable)
hasVariable(largeblock,weight,75)
isObject(largeblock)
volume(largeblock,75)
surface(largeblock,75)
surfaceUsed(largeblock,0)
isLocated(largeblock,ancientquarry,0)
isRoom(deadroom)
surfaceUsed(pressureplate1,25)
capacityUsed(chest,50)
capacityUsed(cupboard,25)
isLocated(player,columns,0)
isLocated(mediumblock,columns,0)
surfaceUsed(mediumblock,0)
isLocated(smallblock,player,0)

======================================================================================
Processing user input: take medium
======================================================================================

DEBUG: Pre-process input lemmas: [take, medium]
DEBUG: Pre-process input posTags: [VB, NN]
DEBUG: Removing conflicting synonym: block
DEBUG: Adding [medium] to matched objects
DEBUG: Adding 1 to matched indices
DEBUG: removeStart: [1]
DEBUG: removeEnd: [1]
DEBUG: Pre-processed: take item1
DEBUG: Lemmas: [take, item]
DEBUG: Verb found: TAKE
DEBUG: PRSA set to: TAKE

DEBUG: PRSA: TAKE, PRSO: MEDIUMBLOCK, PRSI: null

DEBUG: ATTEMPT TO PERFORM ACTION ON PRSI

DEBUG: FAILED TO PERFORM ACTION ON PRSI

DEBUG: ATTEMPT TO PERFORM ACTION ON PRSO

DEBUG: FAILED TO PERFORM ACTION ON PRSO

DEBUG: ATTEMPT TO PERFORM GENERIC ACTION ON PRSA
DEBUG: Corrected Verb: take

DEBUG: Querying: isObject(columns)

DEBUG: Removed clause isLocated(mediumblock,columns,0)

DEBUG: Adding clause isLocated(mediumblock,player,0)
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [climbableStack(3,storageroom)]

DEBUG: Querying: climbableStack(3,storageroom)
DEBUG: QueryCond not satisfied since query: climbableStack(3,storageroom) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [isLocated(plank,riversupports,1)]

DEBUG: Querying: isLocated(plank,riversupports,1)
DEBUG: QueryCond not satisfied since query: isLocated(plank,riversupports,1) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate1,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate1,50)
DEBUG: Solution: weightOnObjectAtLeast(pressureplate1,50) - bindings: yes.
DEBUG: QueryCond satisfied
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate2,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate2,50)
DEBUG: QueryCond not satisfied since query: weightOnObjectAtLeast(pressureplate2,50) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate1,50), weightOnObjectAtLeast(pressureplate2,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate1,50)
DEBUG: Solution: weightOnObjectAtLeast(pressureplate1,50) - bindings: yes.

DEBUG: Querying: weightOnObjectAtLeast(pressureplate2,50)
DEBUG: QueryCond not satisfied since query: weightOnObjectAtLeast(pressureplate2,50) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [isLocated(treasure,player,0)]

DEBUG: Querying: isLocated(treasure,player,0)
DEBUG: QueryCond not satisfied since query: isLocated(treasure,player,0) has no solutions

Knowledge Base:
':-'(notMember(_1069,[]),'!')
':-'(notMember(X,[Head|Tail]),('\='(X,Head),notMember(X,Tail)))
isObject(player)
capacity(player,2147483647)
capacityUsed(player,0)
':-'(inScope(A),(isObject(A),isLocated(A,B,_1075),isLocated(player,B,_1076),'!'))
':-'(inScope(A),(isObject(A),isLocated(A,B,0),hasProperty(B,closablecontainer),'!',isClosed(B,false),inScope(B)))
':-'(inScope(A),(isObject(A),isLocated(A,B,_1081),inScope(B)))
':-'(putIn(A,B),(inScope(A),inScope(B),'\='(A,B),isLocated(A,C,_1085),'\='(A,C),hasProperty(B,closablecontainer),'!',isClosed(B,false),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putIn(A,B),(inScope(A),inScope(B),'\='(A,B),isLocated(A,C,_1093),'\='(A,C),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putInIgnoreScope(A,B),('\='(A,B),isLocated(A,C,_1101),'\='(A,C),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putOn(A,B),(inScope(A),inScope(B),'\='(A,B),volume(A,X),surface(B,Y),surfaceUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putOnIgnoreScope(A,B),('\='(A,B),volume(A,X),surface(B,Y),surfaceUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putBelow(A,B),(inScope(A),inScope(B),'\='(A,B),volume(A,X),below(B,Y),belowUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putBelowIgnoreScope(A,B),('\='(A,B),volume(A,X),below(B,Y),belowUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(outOfScope(A),not(inScope(A)))
':-'(noCapacity(A),not(capacity(A,_1132)))
':-'(noSurface(A),not(surface(A,_1134)))
':-'(noBelow(A),not(below(A,_1136)))
':-'(cantFitCapacity(A,B),(volume(A,X),capacity(B,Y),capacityUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(cantFitSurface(A,B),(volume(A,X),surface(B,Y),surfaceUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(cantFitBelow(A,B),(volume(A,X),below(B,Y),belowUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(tooBigCapacity(A,B),(volume(A,X),capacity(B,Y),'>'(X,Y)))
':-'(tooBigSurface(A,B),(volume(A,X),surface(B,Y),'>'(X,Y)))
':-'(tooBigBelow(A,B),(volume(A,X),below(B,Y),'>'(X,Y)))
':-'(sameObject(A,B),'='(A,B))
':-'(notObject(A),not(isObject(A)))
':-'(targetClosed(A),(hasProperty(A,closablecontainer),isClosed(A,true)))
':-'(stableStack([O],1,R),(isRoom(R),isObject(O),isLocated(O,R,0),hasProperty(O,stable)))
':-'(stableStack([H1,H2|T],M,R),(isObject(H1),isLocated(H1,H2,1),hasProperty(H1,stable),stableStack([H2|T],N,R),is(M,'+'(N,1))))
':-'(stack([O],1,R),(isRoom(R),isObject(O),isLocated(O,R,0)))
':-'(stack([H1,H2|T],M,R),(isObject(H1),isLocated(H1,H2,1),stack([H2|T],N,R),is(M,'+'(N,1))))
':-'(climbableStack(N,R),stableStack(_1186,N,R))
':-'(notClimbableStackError(N,R),(stack(_1189,N,R),not(climbableStack(N,R))))
':-'(totalWeight(O,W,X,Y),(selfWeight(O,W2),setof(X,isLocated(X,O,0),IN),setof(Y,isLocated(Y,O,1),ON),'!',weightInObject(X,O,W3),weightOnObject(Y,O,W4),is(W,'+'('+'(W2,W3),W4))))
':-'(totalWeight(O,W,X,[]),(selfWeight(O,W2),setof(X,isLocated(X,O,0),IN),'!',weightInObject(X,O,W3),is(W,'+'(W2,W3))))
':-'(totalWeight(O,W,[],Y),(selfWeight(O,W2),setof(Y,isLocated(Y,O,1),ON),'!',weightOnObject(Y,O,W3),is(W,'+'(W2,W3))))
':-'(totalWeight(O,W,[],[]),selfWeight(O,W))
':-'(selfWeight(O,W),hasVariable(O,weight,W))
':-'(selfWeight(O,0),(isObject(O),not(hasVariable(O,weight,W))))
':-'(weightOnObject(L,O,W),(setof(X,isLocated(X,O,1),L),'!',weightOnObjectAux(L,O,W)))
':-'(weightOnObjectAux([H|T],O,W),(notMember(H,T),isLocated(H,O,1),'!',weightOnObjectAux(T,O,W3),totalWeight(H,W2,_1227,_1228),is(W,'+'(W2,W3))))
weightOnObjectAux(_1229,O,0)
':-'(weightInObject(L,O,W),(setof(X,isLocated(X,O,0),L),'!',weightInObjectAux(L,O,W)))
':-'(weightInObjectAux([H|T],O,W),(notMember(H,T),isLocated(H,O,0),'!',weightInObjectAux(T,O,W3),totalWeight(H,W2,_1241,_1242),is(W,'+'(W2,W3))))
weightInObjectAux(_1243,O,0)
':-'(weightOnObjectEquals(O,W),(weightOnObject(_1247,O,W2),'='(W2,W)))
':-'(weightOnObjectAtLeast(O,W),(weightOnObject(_1251,O,W2),'>='(W2,W)))
':-'(weightOnObjectAtMost(O,W),(weightOnObject(_1255,O,W2),'=<'(W2,W)))
':-'(weightInObjectEquals(O,W),(weightInObject(_1259,O,W2),'='(W2,W)))
':-'(weightInObjectAtLeast(O,W),(weightInObject(_1263,O,W2),'>='(W2,W)))
':-'(weightInObjectAtMost(O,W),(weightInObject(_1267,O,W2),'=<'(W2,W)))
':-'(weightOnObjectNotEquals(O,W),(weightOnObject(_1271,O,W2),'\='(W2,W)))
':-'(weightOnObjectTooLow(O,W),(weightOnObject(_1275,O,W2),'<'(W2,W)))
':-'(weightOnObjectTooHigh(O,W),(weightOnObject(_1279,O,W2),'>'(W2,W)))
':-'(weightInObjectNotEquals(O,W),(weightInObject(_1283,O,W2),'\='(W2,W)))
':-'(weightInObjectTooLow(O,W),(weightInObject(_1287,O,W2),'<'(W2,W)))
':-'(weightInObjectTooHigh(O,W),(weightInObject(_1291,O,W2),'>'(W2,W)))
isRoom(ruinsentrance)
isRoom(civilisation)
isRoom(columns)
hasProperty(smallblock,takeable)
hasProperty(smallblock,stable)
hasVariable(smallblock,weight,25)
isObject(smallblock)
volume(smallblock,25)
surface(smallblock,25)
surfaceUsed(smallblock,0)
isRoom(altarroom)
hasProperty(altar,stable)
isObject(altar)
volume(altar,1)
surface(altar,50)
surfaceUsed(altar,0)
isLocated(altar,altarroom,0)
isObject(pressureplate1)
volume(pressureplate1,1)
surface(pressureplate1,50)
isLocated(pressureplate1,altarroom,0)
isObject(pressureplate2)
volume(pressureplate2,1)
surface(pressureplate2,50)
surfaceUsed(pressureplate2,0)
isLocated(pressureplate2,altarroom,0)
hasProperty(watercontainer1,takeable)
hasVariable(watercontainer1,weight,50)
isObject(watercontainer1)
volume(watercontainer1,25)
capacity(watercontainer1,25)
capacityUsed(watercontainer1,0)
isLocated(watercontainer1,pressureplate1,1)
isRoom(treasureroom)
hasProperty(chest,takeable)
hasProperty(chest,closablecontainer)
hasProperty(chest,locked)
hasVariable(chest,weight,25)
isClosed(chest,true)
isObject(chest)
volume(chest,50)
capacity(chest,50)
isLocated(chest,treasureroom,0)
hasProperty(treasure,takeable)
hasVariable(treasure,weight,25)
isObject(treasure)
volume(treasure,50)
isLocated(treasure,chest,0)
isRoom(storageroom)
hasProperty(cupboard,closablecontainer)
hasProperty(cupboard,stable)
isClosed(cupboard,true)
isObject(cupboard)
volume(cupboard,1)
capacity(cupboard,50)
surface(cupboard,50)
surfaceUsed(cupboard,0)
isLocated(cupboard,storageroom,0)
hasProperty(watercontainer2,takeable)
hasVariable(watercontainer2,weight,10)
isObject(watercontainer2)
volume(watercontainer2,25)
capacity(watercontainer2,25)
capacityUsed(watercontainer2,0)
isLocated(watercontainer2,cupboard,0)
hasProperty(plank,takeable)
hasVariable(plank,weight,25)
isObject(plank)
volume(plank,50)
surface(plank,50)
surfaceUsed(plank,0)
isLocated(plank,storageroom,0)
isRoom(attic)
hasProperty(key,takeable)
hasVariable(key,weight,1)
isObject(key)
volume(key,10)
isLocated(key,attic,0)
isRoom(rockytunnel)
hasProperty(mediumblock,takeable)
hasProperty(mediumblock,stable)
hasVariable(mediumblock,weight,50)
isObject(mediumblock)
volume(mediumblock,50)
surface(mediumblock,50)
isRoom(eastriver)
isObject(river)
volume(river,1)
isLocated(river,eastriver,0)
isObject(riversupports)
volume(riversupports,0)
surface(riversupports,50)
surfaceUsed(riversupports,0)
isLocated(riversupports,river,0)
isRoom(waterfallcavern)
isObject(waterfall)
volume(waterfall,1)
below(waterfall,100)
belowUsed(waterfall,0)
isLocated(waterfall,waterfallcavern,0)
isRoom(westriver)
isRoom(ancientquarry)
hasProperty(largeblock,takeable)
hasProperty(largeblock,stable)
hasVariable(largeblock,weight,75)
isObject(largeblock)
volume(largeblock,75)
surface(largeblock,75)
surfaceUsed(largeblock,0)
isLocated(largeblock,ancientquarry,0)
isRoom(deadroom)
surfaceUsed(pressureplate1,25)
capacityUsed(chest,50)
capacityUsed(cupboard,25)
isLocated(player,columns,0)
surfaceUsed(mediumblock,0)
isLocated(smallblock,player,0)
isLocated(mediumblock,player,0)

======================================================================================
Processing user input: put small on medium
======================================================================================

DEBUG: Pre-process input lemmas: [put, small, on, medium]
DEBUG: Pre-process input posTags: [VB, NNP, NNP, NNP]
DEBUG: Removing conflicting synonym: block
DEBUG: Adding [medium] to matched objects
DEBUG: Adding 3 to matched indices
DEBUG: Adding [small] to matched objects
DEBUG: Adding 1 to matched indices
DEBUG: removeStart: [3, 1]
DEBUG: removeEnd: [3, 1]
DEBUG: Pre-processed: put item2 on item1
DEBUG: Lemmas: [put, item, on, item]
DEBUG: Verb found: PUT ITEM ON ITEM
DEBUG: Verb found: PUT
DEBUG: PRSA set to: PUT ITEM ON ITEM

DEBUG: PRSA: PUT ITEM ON ITEM, PRSO: SMALLBLOCK, PRSI: MEDIUMBLOCK

DEBUG: ATTEMPT TO PERFORM ACTION ON PRSI

DEBUG: FAILED TO PERFORM ACTION ON PRSI

DEBUG: ATTEMPT TO PERFORM ACTION ON PRSO

DEBUG: FAILED TO PERFORM ACTION ON PRSO

DEBUG: ATTEMPT TO PERFORM GENERIC ACTION ON PRSA
DEBUG: Corrected Verb: place on

DEBUG: FAILED TO PERFORM GENERIC ACTION USING PRSA

DEBUG: ATTEMPT TO PERFORM ENHANCED ACTION ON PRSA
DEBUG: Trying to place on

DEBUG: Querying: putOn(smallblock,mediumblock)
DEBUG: Solution: putOn(smallblock,mediumblock) - bindings: yes.

DEBUG: Querying: isObject(player)
DEBUG: Solution: isObject(player) - bindings: yes.

DEBUG: Querying: capacityUsed(player,X)
DEBUG: Solution: capacityUsed(player,0) - bindings: yes.
X / 0

DEBUG: Removed clause capacityUsed(player,0)

DEBUG: Adding clause capacityUsed(player,-25)

DEBUG: Querying: isObject(mediumblock)
DEBUG: Solution: isObject(mediumblock) - bindings: yes.

DEBUG: Querying: surfaceUsed(mediumblock,X)
DEBUG: Solution: surfaceUsed(mediumblock,0) - bindings: yes.
X / 0

DEBUG: Removed clause surfaceUsed(mediumblock,0)

DEBUG: Adding clause surfaceUsed(mediumblock,25)

DEBUG: Removed clause isLocated(smallblock,player,0)

DEBUG: Adding clause isLocated(smallblock,mediumblock,1)
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [climbableStack(3,storageroom)]

DEBUG: Querying: climbableStack(3,storageroom)
DEBUG: QueryCond not satisfied since query: climbableStack(3,storageroom) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [isLocated(plank,riversupports,1)]

DEBUG: Querying: isLocated(plank,riversupports,1)
DEBUG: QueryCond not satisfied since query: isLocated(plank,riversupports,1) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate1,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate1,50)
DEBUG: Solution: weightOnObjectAtLeast(pressureplate1,50) - bindings: yes.
DEBUG: QueryCond satisfied
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate2,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate2,50)
DEBUG: QueryCond not satisfied since query: weightOnObjectAtLeast(pressureplate2,50) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate1,50), weightOnObjectAtLeast(pressureplate2,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate1,50)
DEBUG: Solution: weightOnObjectAtLeast(pressureplate1,50) - bindings: yes.

DEBUG: Querying: weightOnObjectAtLeast(pressureplate2,50)
DEBUG: QueryCond not satisfied since query: weightOnObjectAtLeast(pressureplate2,50) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [isLocated(treasure,player,0)]

DEBUG: Querying: isLocated(treasure,player,0)
DEBUG: QueryCond not satisfied since query: isLocated(treasure,player,0) has no solutions

Knowledge Base:
':-'(notMember(_1069,[]),'!')
':-'(notMember(X,[Head|Tail]),('\='(X,Head),notMember(X,Tail)))
isObject(player)
capacity(player,2147483647)
':-'(inScope(A),(isObject(A),isLocated(A,B,_1075),isLocated(player,B,_1076),'!'))
':-'(inScope(A),(isObject(A),isLocated(A,B,0),hasProperty(B,closablecontainer),'!',isClosed(B,false),inScope(B)))
':-'(inScope(A),(isObject(A),isLocated(A,B,_1081),inScope(B)))
':-'(putIn(A,B),(inScope(A),inScope(B),'\='(A,B),isLocated(A,C,_1085),'\='(A,C),hasProperty(B,closablecontainer),'!',isClosed(B,false),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putIn(A,B),(inScope(A),inScope(B),'\='(A,B),isLocated(A,C,_1093),'\='(A,C),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putInIgnoreScope(A,B),('\='(A,B),isLocated(A,C,_1101),'\='(A,C),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putOn(A,B),(inScope(A),inScope(B),'\='(A,B),volume(A,X),surface(B,Y),surfaceUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putOnIgnoreScope(A,B),('\='(A,B),volume(A,X),surface(B,Y),surfaceUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putBelow(A,B),(inScope(A),inScope(B),'\='(A,B),volume(A,X),below(B,Y),belowUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putBelowIgnoreScope(A,B),('\='(A,B),volume(A,X),below(B,Y),belowUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(outOfScope(A),not(inScope(A)))
':-'(noCapacity(A),not(capacity(A,_1132)))
':-'(noSurface(A),not(surface(A,_1134)))
':-'(noBelow(A),not(below(A,_1136)))
':-'(cantFitCapacity(A,B),(volume(A,X),capacity(B,Y),capacityUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(cantFitSurface(A,B),(volume(A,X),surface(B,Y),surfaceUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(cantFitBelow(A,B),(volume(A,X),below(B,Y),belowUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(tooBigCapacity(A,B),(volume(A,X),capacity(B,Y),'>'(X,Y)))
':-'(tooBigSurface(A,B),(volume(A,X),surface(B,Y),'>'(X,Y)))
':-'(tooBigBelow(A,B),(volume(A,X),below(B,Y),'>'(X,Y)))
':-'(sameObject(A,B),'='(A,B))
':-'(notObject(A),not(isObject(A)))
':-'(targetClosed(A),(hasProperty(A,closablecontainer),isClosed(A,true)))
':-'(stableStack([O],1,R),(isRoom(R),isObject(O),isLocated(O,R,0),hasProperty(O,stable)))
':-'(stableStack([H1,H2|T],M,R),(isObject(H1),isLocated(H1,H2,1),hasProperty(H1,stable),stableStack([H2|T],N,R),is(M,'+'(N,1))))
':-'(stack([O],1,R),(isRoom(R),isObject(O),isLocated(O,R,0)))
':-'(stack([H1,H2|T],M,R),(isObject(H1),isLocated(H1,H2,1),stack([H2|T],N,R),is(M,'+'(N,1))))
':-'(climbableStack(N,R),stableStack(_1186,N,R))
':-'(notClimbableStackError(N,R),(stack(_1189,N,R),not(climbableStack(N,R))))
':-'(totalWeight(O,W,X,Y),(selfWeight(O,W2),setof(X,isLocated(X,O,0),IN),setof(Y,isLocated(Y,O,1),ON),'!',weightInObject(X,O,W3),weightOnObject(Y,O,W4),is(W,'+'('+'(W2,W3),W4))))
':-'(totalWeight(O,W,X,[]),(selfWeight(O,W2),setof(X,isLocated(X,O,0),IN),'!',weightInObject(X,O,W3),is(W,'+'(W2,W3))))
':-'(totalWeight(O,W,[],Y),(selfWeight(O,W2),setof(Y,isLocated(Y,O,1),ON),'!',weightOnObject(Y,O,W3),is(W,'+'(W2,W3))))
':-'(totalWeight(O,W,[],[]),selfWeight(O,W))
':-'(selfWeight(O,W),hasVariable(O,weight,W))
':-'(selfWeight(O,0),(isObject(O),not(hasVariable(O,weight,W))))
':-'(weightOnObject(L,O,W),(setof(X,isLocated(X,O,1),L),'!',weightOnObjectAux(L,O,W)))
':-'(weightOnObjectAux([H|T],O,W),(notMember(H,T),isLocated(H,O,1),'!',weightOnObjectAux(T,O,W3),totalWeight(H,W2,_1227,_1228),is(W,'+'(W2,W3))))
weightOnObjectAux(_1229,O,0)
':-'(weightInObject(L,O,W),(setof(X,isLocated(X,O,0),L),'!',weightInObjectAux(L,O,W)))
':-'(weightInObjectAux([H|T],O,W),(notMember(H,T),isLocated(H,O,0),'!',weightInObjectAux(T,O,W3),totalWeight(H,W2,_1241,_1242),is(W,'+'(W2,W3))))
weightInObjectAux(_1243,O,0)
':-'(weightOnObjectEquals(O,W),(weightOnObject(_1247,O,W2),'='(W2,W)))
':-'(weightOnObjectAtLeast(O,W),(weightOnObject(_1251,O,W2),'>='(W2,W)))
':-'(weightOnObjectAtMost(O,W),(weightOnObject(_1255,O,W2),'=<'(W2,W)))
':-'(weightInObjectEquals(O,W),(weightInObject(_1259,O,W2),'='(W2,W)))
':-'(weightInObjectAtLeast(O,W),(weightInObject(_1263,O,W2),'>='(W2,W)))
':-'(weightInObjectAtMost(O,W),(weightInObject(_1267,O,W2),'=<'(W2,W)))
':-'(weightOnObjectNotEquals(O,W),(weightOnObject(_1271,O,W2),'\='(W2,W)))
':-'(weightOnObjectTooLow(O,W),(weightOnObject(_1275,O,W2),'<'(W2,W)))
':-'(weightOnObjectTooHigh(O,W),(weightOnObject(_1279,O,W2),'>'(W2,W)))
':-'(weightInObjectNotEquals(O,W),(weightInObject(_1283,O,W2),'\='(W2,W)))
':-'(weightInObjectTooLow(O,W),(weightInObject(_1287,O,W2),'<'(W2,W)))
':-'(weightInObjectTooHigh(O,W),(weightInObject(_1291,O,W2),'>'(W2,W)))
isRoom(ruinsentrance)
isRoom(civilisation)
isRoom(columns)
hasProperty(smallblock,takeable)
hasProperty(smallblock,stable)
hasVariable(smallblock,weight,25)
isObject(smallblock)
volume(smallblock,25)
surface(smallblock,25)
surfaceUsed(smallblock,0)
isRoom(altarroom)
hasProperty(altar,stable)
isObject(altar)
volume(altar,1)
surface(altar,50)
surfaceUsed(altar,0)
isLocated(altar,altarroom,0)
isObject(pressureplate1)
volume(pressureplate1,1)
surface(pressureplate1,50)
isLocated(pressureplate1,altarroom,0)
isObject(pressureplate2)
volume(pressureplate2,1)
surface(pressureplate2,50)
surfaceUsed(pressureplate2,0)
isLocated(pressureplate2,altarroom,0)
hasProperty(watercontainer1,takeable)
hasVariable(watercontainer1,weight,50)
isObject(watercontainer1)
volume(watercontainer1,25)
capacity(watercontainer1,25)
capacityUsed(watercontainer1,0)
isLocated(watercontainer1,pressureplate1,1)
isRoom(treasureroom)
hasProperty(chest,takeable)
hasProperty(chest,closablecontainer)
hasProperty(chest,locked)
hasVariable(chest,weight,25)
isClosed(chest,true)
isObject(chest)
volume(chest,50)
capacity(chest,50)
isLocated(chest,treasureroom,0)
hasProperty(treasure,takeable)
hasVariable(treasure,weight,25)
isObject(treasure)
volume(treasure,50)
isLocated(treasure,chest,0)
isRoom(storageroom)
hasProperty(cupboard,closablecontainer)
hasProperty(cupboard,stable)
isClosed(cupboard,true)
isObject(cupboard)
volume(cupboard,1)
capacity(cupboard,50)
surface(cupboard,50)
surfaceUsed(cupboard,0)
isLocated(cupboard,storageroom,0)
hasProperty(watercontainer2,takeable)
hasVariable(watercontainer2,weight,10)
isObject(watercontainer2)
volume(watercontainer2,25)
capacity(watercontainer2,25)
capacityUsed(watercontainer2,0)
isLocated(watercontainer2,cupboard,0)
hasProperty(plank,takeable)
hasVariable(plank,weight,25)
isObject(plank)
volume(plank,50)
surface(plank,50)
surfaceUsed(plank,0)
isLocated(plank,storageroom,0)
isRoom(attic)
hasProperty(key,takeable)
hasVariable(key,weight,1)
isObject(key)
volume(key,10)
isLocated(key,attic,0)
isRoom(rockytunnel)
hasProperty(mediumblock,takeable)
hasProperty(mediumblock,stable)
hasVariable(mediumblock,weight,50)
isObject(mediumblock)
volume(mediumblock,50)
surface(mediumblock,50)
isRoom(eastriver)
isObject(river)
volume(river,1)
isLocated(river,eastriver,0)
isObject(riversupports)
volume(riversupports,0)
surface(riversupports,50)
surfaceUsed(riversupports,0)
isLocated(riversupports,river,0)
isRoom(waterfallcavern)
isObject(waterfall)
volume(waterfall,1)
below(waterfall,100)
belowUsed(waterfall,0)
isLocated(waterfall,waterfallcavern,0)
isRoom(westriver)
isRoom(ancientquarry)
hasProperty(largeblock,takeable)
hasProperty(largeblock,stable)
hasVariable(largeblock,weight,75)
isObject(largeblock)
volume(largeblock,75)
surface(largeblock,75)
surfaceUsed(largeblock,0)
isLocated(largeblock,ancientquarry,0)
isRoom(deadroom)
surfaceUsed(pressureplate1,25)
capacityUsed(chest,50)
capacityUsed(cupboard,25)
isLocated(player,columns,0)
isLocated(mediumblock,player,0)
capacityUsed(player,-25)
surfaceUsed(mediumblock,25)
isLocated(smallblock,mediumblock,1)

======================================================================================
Processing user input: take medium
======================================================================================

DEBUG: Pre-process input lemmas: [take, medium]
DEBUG: Pre-process input posTags: [VB, NN]
DEBUG: Removing conflicting synonym: block
DEBUG: Adding [medium] to matched objects
DEBUG: Adding 1 to matched indices
DEBUG: removeStart: [1]
DEBUG: removeEnd: [1]
DEBUG: Pre-processed: take item1
DEBUG: Lemmas: [take, item]
DEBUG: Verb found: TAKE
DEBUG: PRSA set to: TAKE

DEBUG: PRSA: TAKE, PRSO: MEDIUMBLOCK, PRSI: null

DEBUG: ATTEMPT TO PERFORM ACTION ON PRSI

DEBUG: FAILED TO PERFORM ACTION ON PRSI

DEBUG: ATTEMPT TO PERFORM ACTION ON PRSO

DEBUG: FAILED TO PERFORM ACTION ON PRSO

DEBUG: ATTEMPT TO PERFORM GENERIC ACTION ON PRSA
DEBUG: Corrected Verb: take
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [climbableStack(3,storageroom)]

DEBUG: Querying: climbableStack(3,storageroom)
DEBUG: QueryCond not satisfied since query: climbableStack(3,storageroom) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [isLocated(plank,riversupports,1)]

DEBUG: Querying: isLocated(plank,riversupports,1)
DEBUG: QueryCond not satisfied since query: isLocated(plank,riversupports,1) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate1,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate1,50)
DEBUG: Solution: weightOnObjectAtLeast(pressureplate1,50) - bindings: yes.
DEBUG: QueryCond satisfied
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate2,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate2,50)
DEBUG: QueryCond not satisfied since query: weightOnObjectAtLeast(pressureplate2,50) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate1,50), weightOnObjectAtLeast(pressureplate2,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate1,50)
DEBUG: Solution: weightOnObjectAtLeast(pressureplate1,50) - bindings: yes.

DEBUG: Querying: weightOnObjectAtLeast(pressureplate2,50)
DEBUG: QueryCond not satisfied since query: weightOnObjectAtLeast(pressureplate2,50) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [isLocated(treasure,player,0)]

DEBUG: Querying: isLocated(treasure,player,0)
DEBUG: QueryCond not satisfied since query: isLocated(treasure,player,0) has no solutions

Knowledge Base:
':-'(notMember(_1069,[]),'!')
':-'(notMember(X,[Head|Tail]),('\='(X,Head),notMember(X,Tail)))
isObject(player)
capacity(player,2147483647)
':-'(inScope(A),(isObject(A),isLocated(A,B,_1075),isLocated(player,B,_1076),'!'))
':-'(inScope(A),(isObject(A),isLocated(A,B,0),hasProperty(B,closablecontainer),'!',isClosed(B,false),inScope(B)))
':-'(inScope(A),(isObject(A),isLocated(A,B,_1081),inScope(B)))
':-'(putIn(A,B),(inScope(A),inScope(B),'\='(A,B),isLocated(A,C,_1085),'\='(A,C),hasProperty(B,closablecontainer),'!',isClosed(B,false),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putIn(A,B),(inScope(A),inScope(B),'\='(A,B),isLocated(A,C,_1093),'\='(A,C),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putInIgnoreScope(A,B),('\='(A,B),isLocated(A,C,_1101),'\='(A,C),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putOn(A,B),(inScope(A),inScope(B),'\='(A,B),volume(A,X),surface(B,Y),surfaceUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putOnIgnoreScope(A,B),('\='(A,B),volume(A,X),surface(B,Y),surfaceUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putBelow(A,B),(inScope(A),inScope(B),'\='(A,B),volume(A,X),below(B,Y),belowUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putBelowIgnoreScope(A,B),('\='(A,B),volume(A,X),below(B,Y),belowUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(outOfScope(A),not(inScope(A)))
':-'(noCapacity(A),not(capacity(A,_1132)))
':-'(noSurface(A),not(surface(A,_1134)))
':-'(noBelow(A),not(below(A,_1136)))
':-'(cantFitCapacity(A,B),(volume(A,X),capacity(B,Y),capacityUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(cantFitSurface(A,B),(volume(A,X),surface(B,Y),surfaceUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(cantFitBelow(A,B),(volume(A,X),below(B,Y),belowUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(tooBigCapacity(A,B),(volume(A,X),capacity(B,Y),'>'(X,Y)))
':-'(tooBigSurface(A,B),(volume(A,X),surface(B,Y),'>'(X,Y)))
':-'(tooBigBelow(A,B),(volume(A,X),below(B,Y),'>'(X,Y)))
':-'(sameObject(A,B),'='(A,B))
':-'(notObject(A),not(isObject(A)))
':-'(targetClosed(A),(hasProperty(A,closablecontainer),isClosed(A,true)))
':-'(stableStack([O],1,R),(isRoom(R),isObject(O),isLocated(O,R,0),hasProperty(O,stable)))
':-'(stableStack([H1,H2|T],M,R),(isObject(H1),isLocated(H1,H2,1),hasProperty(H1,stable),stableStack([H2|T],N,R),is(M,'+'(N,1))))
':-'(stack([O],1,R),(isRoom(R),isObject(O),isLocated(O,R,0)))
':-'(stack([H1,H2|T],M,R),(isObject(H1),isLocated(H1,H2,1),stack([H2|T],N,R),is(M,'+'(N,1))))
':-'(climbableStack(N,R),stableStack(_1186,N,R))
':-'(notClimbableStackError(N,R),(stack(_1189,N,R),not(climbableStack(N,R))))
':-'(totalWeight(O,W,X,Y),(selfWeight(O,W2),setof(X,isLocated(X,O,0),IN),setof(Y,isLocated(Y,O,1),ON),'!',weightInObject(X,O,W3),weightOnObject(Y,O,W4),is(W,'+'('+'(W2,W3),W4))))
':-'(totalWeight(O,W,X,[]),(selfWeight(O,W2),setof(X,isLocated(X,O,0),IN),'!',weightInObject(X,O,W3),is(W,'+'(W2,W3))))
':-'(totalWeight(O,W,[],Y),(selfWeight(O,W2),setof(Y,isLocated(Y,O,1),ON),'!',weightOnObject(Y,O,W3),is(W,'+'(W2,W3))))
':-'(totalWeight(O,W,[],[]),selfWeight(O,W))
':-'(selfWeight(O,W),hasVariable(O,weight,W))
':-'(selfWeight(O,0),(isObject(O),not(hasVariable(O,weight,W))))
':-'(weightOnObject(L,O,W),(setof(X,isLocated(X,O,1),L),'!',weightOnObjectAux(L,O,W)))
':-'(weightOnObjectAux([H|T],O,W),(notMember(H,T),isLocated(H,O,1),'!',weightOnObjectAux(T,O,W3),totalWeight(H,W2,_1227,_1228),is(W,'+'(W2,W3))))
weightOnObjectAux(_1229,O,0)
':-'(weightInObject(L,O,W),(setof(X,isLocated(X,O,0),L),'!',weightInObjectAux(L,O,W)))
':-'(weightInObjectAux([H|T],O,W),(notMember(H,T),isLocated(H,O,0),'!',weightInObjectAux(T,O,W3),totalWeight(H,W2,_1241,_1242),is(W,'+'(W2,W3))))
weightInObjectAux(_1243,O,0)
':-'(weightOnObjectEquals(O,W),(weightOnObject(_1247,O,W2),'='(W2,W)))
':-'(weightOnObjectAtLeast(O,W),(weightOnObject(_1251,O,W2),'>='(W2,W)))
':-'(weightOnObjectAtMost(O,W),(weightOnObject(_1255,O,W2),'=<'(W2,W)))
':-'(weightInObjectEquals(O,W),(weightInObject(_1259,O,W2),'='(W2,W)))
':-'(weightInObjectAtLeast(O,W),(weightInObject(_1263,O,W2),'>='(W2,W)))
':-'(weightInObjectAtMost(O,W),(weightInObject(_1267,O,W2),'=<'(W2,W)))
':-'(weightOnObjectNotEquals(O,W),(weightOnObject(_1271,O,W2),'\='(W2,W)))
':-'(weightOnObjectTooLow(O,W),(weightOnObject(_1275,O,W2),'<'(W2,W)))
':-'(weightOnObjectTooHigh(O,W),(weightOnObject(_1279,O,W2),'>'(W2,W)))
':-'(weightInObjectNotEquals(O,W),(weightInObject(_1283,O,W2),'\='(W2,W)))
':-'(weightInObjectTooLow(O,W),(weightInObject(_1287,O,W2),'<'(W2,W)))
':-'(weightInObjectTooHigh(O,W),(weightInObject(_1291,O,W2),'>'(W2,W)))
isRoom(ruinsentrance)
isRoom(civilisation)
isRoom(columns)
hasProperty(smallblock,takeable)
hasProperty(smallblock,stable)
hasVariable(smallblock,weight,25)
isObject(smallblock)
volume(smallblock,25)
surface(smallblock,25)
surfaceUsed(smallblock,0)
isRoom(altarroom)
hasProperty(altar,stable)
isObject(altar)
volume(altar,1)
surface(altar,50)
surfaceUsed(altar,0)
isLocated(altar,altarroom,0)
isObject(pressureplate1)
volume(pressureplate1,1)
surface(pressureplate1,50)
isLocated(pressureplate1,altarroom,0)
isObject(pressureplate2)
volume(pressureplate2,1)
surface(pressureplate2,50)
surfaceUsed(pressureplate2,0)
isLocated(pressureplate2,altarroom,0)
hasProperty(watercontainer1,takeable)
hasVariable(watercontainer1,weight,50)
isObject(watercontainer1)
volume(watercontainer1,25)
capacity(watercontainer1,25)
capacityUsed(watercontainer1,0)
isLocated(watercontainer1,pressureplate1,1)
isRoom(treasureroom)
hasProperty(chest,takeable)
hasProperty(chest,closablecontainer)
hasProperty(chest,locked)
hasVariable(chest,weight,25)
isClosed(chest,true)
isObject(chest)
volume(chest,50)
capacity(chest,50)
isLocated(chest,treasureroom,0)
hasProperty(treasure,takeable)
hasVariable(treasure,weight,25)
isObject(treasure)
volume(treasure,50)
isLocated(treasure,chest,0)
isRoom(storageroom)
hasProperty(cupboard,closablecontainer)
hasProperty(cupboard,stable)
isClosed(cupboard,true)
isObject(cupboard)
volume(cupboard,1)
capacity(cupboard,50)
surface(cupboard,50)
surfaceUsed(cupboard,0)
isLocated(cupboard,storageroom,0)
hasProperty(watercontainer2,takeable)
hasVariable(watercontainer2,weight,10)
isObject(watercontainer2)
volume(watercontainer2,25)
capacity(watercontainer2,25)
capacityUsed(watercontainer2,0)
isLocated(watercontainer2,cupboard,0)
hasProperty(plank,takeable)
hasVariable(plank,weight,25)
isObject(plank)
volume(plank,50)
surface(plank,50)
surfaceUsed(plank,0)
isLocated(plank,storageroom,0)
isRoom(attic)
hasProperty(key,takeable)
hasVariable(key,weight,1)
isObject(key)
volume(key,10)
isLocated(key,attic,0)
isRoom(rockytunnel)
hasProperty(mediumblock,takeable)
hasProperty(mediumblock,stable)
hasVariable(mediumblock,weight,50)
isObject(mediumblock)
volume(mediumblock,50)
surface(mediumblock,50)
isRoom(eastriver)
isObject(river)
volume(river,1)
isLocated(river,eastriver,0)
isObject(riversupports)
volume(riversupports,0)
surface(riversupports,50)
surfaceUsed(riversupports,0)
isLocated(riversupports,river,0)
isRoom(waterfallcavern)
isObject(waterfall)
volume(waterfall,1)
below(waterfall,100)
belowUsed(waterfall,0)
isLocated(waterfall,waterfallcavern,0)
isRoom(westriver)
isRoom(ancientquarry)
hasProperty(largeblock,takeable)
hasProperty(largeblock,stable)
hasVariable(largeblock,weight,75)
isObject(largeblock)
volume(largeblock,75)
surface(largeblock,75)
surfaceUsed(largeblock,0)
isLocated(largeblock,ancientquarry,0)
isRoom(deadroom)
surfaceUsed(pressureplate1,25)
capacityUsed(chest,50)
capacityUsed(cupboard,25)
isLocated(player,columns,0)
isLocated(mediumblock,player,0)
capacityUsed(player,-25)
surfaceUsed(mediumblock,25)
isLocated(smallblock,mediumblock,1)

======================================================================================
Processing user input: take small
======================================================================================

DEBUG: Pre-process input lemmas: [take, small]
DEBUG: Pre-process input posTags: [VB, NNP]
DEBUG: Removing conflicting synonym: block
DEBUG: Adding [small] to matched objects
DEBUG: Adding 1 to matched indices
DEBUG: removeStart: [1]
DEBUG: removeEnd: [1]
DEBUG: Pre-processed: take item1
DEBUG: Lemmas: [take, item]
DEBUG: Verb found: TAKE
DEBUG: PRSA set to: TAKE

DEBUG: PRSA: TAKE, PRSO: SMALLBLOCK, PRSI: null

DEBUG: ATTEMPT TO PERFORM ACTION ON PRSI

DEBUG: FAILED TO PERFORM ACTION ON PRSI

DEBUG: ATTEMPT TO PERFORM ACTION ON PRSO

DEBUG: FAILED TO PERFORM ACTION ON PRSO

DEBUG: ATTEMPT TO PERFORM GENERIC ACTION ON PRSA
DEBUG: Corrected Verb: take

DEBUG: Querying: isObject(mediumblock)
DEBUG: Solution: isObject(mediumblock) - bindings: yes.

DEBUG: Querying: surfaceUsed(mediumblock,X)
DEBUG: Solution: surfaceUsed(mediumblock,25) - bindings: yes.
X / 25

DEBUG: Removed clause surfaceUsed(mediumblock,25)

DEBUG: Adding clause surfaceUsed(mediumblock,0)

DEBUG: Removed clause isLocated(smallblock,mediumblock,1)

DEBUG: Adding clause isLocated(smallblock,player,0)
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [climbableStack(3,storageroom)]

DEBUG: Querying: climbableStack(3,storageroom)
DEBUG: QueryCond not satisfied since query: climbableStack(3,storageroom) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [isLocated(plank,riversupports,1)]

DEBUG: Querying: isLocated(plank,riversupports,1)
DEBUG: QueryCond not satisfied since query: isLocated(plank,riversupports,1) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate1,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate1,50)
DEBUG: Solution: weightOnObjectAtLeast(pressureplate1,50) - bindings: yes.
DEBUG: QueryCond satisfied
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate2,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate2,50)
DEBUG: QueryCond not satisfied since query: weightOnObjectAtLeast(pressureplate2,50) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate1,50), weightOnObjectAtLeast(pressureplate2,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate1,50)
DEBUG: Solution: weightOnObjectAtLeast(pressureplate1,50) - bindings: yes.

DEBUG: Querying: weightOnObjectAtLeast(pressureplate2,50)
DEBUG: QueryCond not satisfied since query: weightOnObjectAtLeast(pressureplate2,50) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [isLocated(treasure,player,0)]

DEBUG: Querying: isLocated(treasure,player,0)
DEBUG: QueryCond not satisfied since query: isLocated(treasure,player,0) has no solutions

Knowledge Base:
':-'(notMember(_1069,[]),'!')
':-'(notMember(X,[Head|Tail]),('\='(X,Head),notMember(X,Tail)))
isObject(player)
capacity(player,2147483647)
':-'(inScope(A),(isObject(A),isLocated(A,B,_1075),isLocated(player,B,_1076),'!'))
':-'(inScope(A),(isObject(A),isLocated(A,B,0),hasProperty(B,closablecontainer),'!',isClosed(B,false),inScope(B)))
':-'(inScope(A),(isObject(A),isLocated(A,B,_1081),inScope(B)))
':-'(putIn(A,B),(inScope(A),inScope(B),'\='(A,B),isLocated(A,C,_1085),'\='(A,C),hasProperty(B,closablecontainer),'!',isClosed(B,false),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putIn(A,B),(inScope(A),inScope(B),'\='(A,B),isLocated(A,C,_1093),'\='(A,C),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putInIgnoreScope(A,B),('\='(A,B),isLocated(A,C,_1101),'\='(A,C),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putOn(A,B),(inScope(A),inScope(B),'\='(A,B),volume(A,X),surface(B,Y),surfaceUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putOnIgnoreScope(A,B),('\='(A,B),volume(A,X),surface(B,Y),surfaceUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putBelow(A,B),(inScope(A),inScope(B),'\='(A,B),volume(A,X),below(B,Y),belowUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putBelowIgnoreScope(A,B),('\='(A,B),volume(A,X),below(B,Y),belowUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(outOfScope(A),not(inScope(A)))
':-'(noCapacity(A),not(capacity(A,_1132)))
':-'(noSurface(A),not(surface(A,_1134)))
':-'(noBelow(A),not(below(A,_1136)))
':-'(cantFitCapacity(A,B),(volume(A,X),capacity(B,Y),capacityUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(cantFitSurface(A,B),(volume(A,X),surface(B,Y),surfaceUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(cantFitBelow(A,B),(volume(A,X),below(B,Y),belowUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(tooBigCapacity(A,B),(volume(A,X),capacity(B,Y),'>'(X,Y)))
':-'(tooBigSurface(A,B),(volume(A,X),surface(B,Y),'>'(X,Y)))
':-'(tooBigBelow(A,B),(volume(A,X),below(B,Y),'>'(X,Y)))
':-'(sameObject(A,B),'='(A,B))
':-'(notObject(A),not(isObject(A)))
':-'(targetClosed(A),(hasProperty(A,closablecontainer),isClosed(A,true)))
':-'(stableStack([O],1,R),(isRoom(R),isObject(O),isLocated(O,R,0),hasProperty(O,stable)))
':-'(stableStack([H1,H2|T],M,R),(isObject(H1),isLocated(H1,H2,1),hasProperty(H1,stable),stableStack([H2|T],N,R),is(M,'+'(N,1))))
':-'(stack([O],1,R),(isRoom(R),isObject(O),isLocated(O,R,0)))
':-'(stack([H1,H2|T],M,R),(isObject(H1),isLocated(H1,H2,1),stack([H2|T],N,R),is(M,'+'(N,1))))
':-'(climbableStack(N,R),stableStack(_1186,N,R))
':-'(notClimbableStackError(N,R),(stack(_1189,N,R),not(climbableStack(N,R))))
':-'(totalWeight(O,W,X,Y),(selfWeight(O,W2),setof(X,isLocated(X,O,0),IN),setof(Y,isLocated(Y,O,1),ON),'!',weightInObject(X,O,W3),weightOnObject(Y,O,W4),is(W,'+'('+'(W2,W3),W4))))
':-'(totalWeight(O,W,X,[]),(selfWeight(O,W2),setof(X,isLocated(X,O,0),IN),'!',weightInObject(X,O,W3),is(W,'+'(W2,W3))))
':-'(totalWeight(O,W,[],Y),(selfWeight(O,W2),setof(Y,isLocated(Y,O,1),ON),'!',weightOnObject(Y,O,W3),is(W,'+'(W2,W3))))
':-'(totalWeight(O,W,[],[]),selfWeight(O,W))
':-'(selfWeight(O,W),hasVariable(O,weight,W))
':-'(selfWeight(O,0),(isObject(O),not(hasVariable(O,weight,W))))
':-'(weightOnObject(L,O,W),(setof(X,isLocated(X,O,1),L),'!',weightOnObjectAux(L,O,W)))
':-'(weightOnObjectAux([H|T],O,W),(notMember(H,T),isLocated(H,O,1),'!',weightOnObjectAux(T,O,W3),totalWeight(H,W2,_1227,_1228),is(W,'+'(W2,W3))))
weightOnObjectAux(_1229,O,0)
':-'(weightInObject(L,O,W),(setof(X,isLocated(X,O,0),L),'!',weightInObjectAux(L,O,W)))
':-'(weightInObjectAux([H|T],O,W),(notMember(H,T),isLocated(H,O,0),'!',weightInObjectAux(T,O,W3),totalWeight(H,W2,_1241,_1242),is(W,'+'(W2,W3))))
weightInObjectAux(_1243,O,0)
':-'(weightOnObjectEquals(O,W),(weightOnObject(_1247,O,W2),'='(W2,W)))
':-'(weightOnObjectAtLeast(O,W),(weightOnObject(_1251,O,W2),'>='(W2,W)))
':-'(weightOnObjectAtMost(O,W),(weightOnObject(_1255,O,W2),'=<'(W2,W)))
':-'(weightInObjectEquals(O,W),(weightInObject(_1259,O,W2),'='(W2,W)))
':-'(weightInObjectAtLeast(O,W),(weightInObject(_1263,O,W2),'>='(W2,W)))
':-'(weightInObjectAtMost(O,W),(weightInObject(_1267,O,W2),'=<'(W2,W)))
':-'(weightOnObjectNotEquals(O,W),(weightOnObject(_1271,O,W2),'\='(W2,W)))
':-'(weightOnObjectTooLow(O,W),(weightOnObject(_1275,O,W2),'<'(W2,W)))
':-'(weightOnObjectTooHigh(O,W),(weightOnObject(_1279,O,W2),'>'(W2,W)))
':-'(weightInObjectNotEquals(O,W),(weightInObject(_1283,O,W2),'\='(W2,W)))
':-'(weightInObjectTooLow(O,W),(weightInObject(_1287,O,W2),'<'(W2,W)))
':-'(weightInObjectTooHigh(O,W),(weightInObject(_1291,O,W2),'>'(W2,W)))
isRoom(ruinsentrance)
isRoom(civilisation)
isRoom(columns)
hasProperty(smallblock,takeable)
hasProperty(smallblock,stable)
hasVariable(smallblock,weight,25)
isObject(smallblock)
volume(smallblock,25)
surface(smallblock,25)
surfaceUsed(smallblock,0)
isRoom(altarroom)
hasProperty(altar,stable)
isObject(altar)
volume(altar,1)
surface(altar,50)
surfaceUsed(altar,0)
isLocated(altar,altarroom,0)
isObject(pressureplate1)
volume(pressureplate1,1)
surface(pressureplate1,50)
isLocated(pressureplate1,altarroom,0)
isObject(pressureplate2)
volume(pressureplate2,1)
surface(pressureplate2,50)
surfaceUsed(pressureplate2,0)
isLocated(pressureplate2,altarroom,0)
hasProperty(watercontainer1,takeable)
hasVariable(watercontainer1,weight,50)
isObject(watercontainer1)
volume(watercontainer1,25)
capacity(watercontainer1,25)
capacityUsed(watercontainer1,0)
isLocated(watercontainer1,pressureplate1,1)
isRoom(treasureroom)
hasProperty(chest,takeable)
hasProperty(chest,closablecontainer)
hasProperty(chest,locked)
hasVariable(chest,weight,25)
isClosed(chest,true)
isObject(chest)
volume(chest,50)
capacity(chest,50)
isLocated(chest,treasureroom,0)
hasProperty(treasure,takeable)
hasVariable(treasure,weight,25)
isObject(treasure)
volume(treasure,50)
isLocated(treasure,chest,0)
isRoom(storageroom)
hasProperty(cupboard,closablecontainer)
hasProperty(cupboard,stable)
isClosed(cupboard,true)
isObject(cupboard)
volume(cupboard,1)
capacity(cupboard,50)
surface(cupboard,50)
surfaceUsed(cupboard,0)
isLocated(cupboard,storageroom,0)
hasProperty(watercontainer2,takeable)
hasVariable(watercontainer2,weight,10)
isObject(watercontainer2)
volume(watercontainer2,25)
capacity(watercontainer2,25)
capacityUsed(watercontainer2,0)
isLocated(watercontainer2,cupboard,0)
hasProperty(plank,takeable)
hasVariable(plank,weight,25)
isObject(plank)
volume(plank,50)
surface(plank,50)
surfaceUsed(plank,0)
isLocated(plank,storageroom,0)
isRoom(attic)
hasProperty(key,takeable)
hasVariable(key,weight,1)
isObject(key)
volume(key,10)
isLocated(key,attic,0)
isRoom(rockytunnel)
hasProperty(mediumblock,takeable)
hasProperty(mediumblock,stable)
hasVariable(mediumblock,weight,50)
isObject(mediumblock)
volume(mediumblock,50)
surface(mediumblock,50)
isRoom(eastriver)
isObject(river)
volume(river,1)
isLocated(river,eastriver,0)
isObject(riversupports)
volume(riversupports,0)
surface(riversupports,50)
surfaceUsed(riversupports,0)
isLocated(riversupports,river,0)
isRoom(waterfallcavern)
isObject(waterfall)
volume(waterfall,1)
below(waterfall,100)
belowUsed(waterfall,0)
isLocated(waterfall,waterfallcavern,0)
isRoom(westriver)
isRoom(ancientquarry)
hasProperty(largeblock,takeable)
hasProperty(largeblock,stable)
hasVariable(largeblock,weight,75)
isObject(largeblock)
volume(largeblock,75)
surface(largeblock,75)
surfaceUsed(largeblock,0)
isLocated(largeblock,ancientquarry,0)
isRoom(deadroom)
surfaceUsed(pressureplate1,25)
capacityUsed(chest,50)
capacityUsed(cupboard,25)
isLocated(player,columns,0)
isLocated(mediumblock,player,0)
capacityUsed(player,-25)
surfaceUsed(mediumblock,0)
isLocated(smallblock,player,0)

======================================================================================
Processing user input: inventory
======================================================================================


DEBUG: PRSA: LOOK, PRSO: PLAYER, PRSI: null

DEBUG: ATTEMPT TO PERFORM ACTION ON PRSI

DEBUG: FAILED TO PERFORM ACTION ON PRSI

DEBUG: ATTEMPT TO PERFORM ACTION ON PRSO

DEBUG: FAILED TO PERFORM ACTION ON PRSO

DEBUG: ATTEMPT TO PERFORM GENERIC ACTION ON PRSA
DEBUG: Corrected Verb: look
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [climbableStack(3,storageroom)]

DEBUG: Querying: climbableStack(3,storageroom)
DEBUG: QueryCond not satisfied since query: climbableStack(3,storageroom) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [isLocated(plank,riversupports,1)]

DEBUG: Querying: isLocated(plank,riversupports,1)
DEBUG: QueryCond not satisfied since query: isLocated(plank,riversupports,1) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate1,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate1,50)
DEBUG: Solution: weightOnObjectAtLeast(pressureplate1,50) - bindings: yes.
DEBUG: QueryCond satisfied
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate2,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate2,50)
DEBUG: QueryCond not satisfied since query: weightOnObjectAtLeast(pressureplate2,50) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate1,50), weightOnObjectAtLeast(pressureplate2,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate1,50)
DEBUG: Solution: weightOnObjectAtLeast(pressureplate1,50) - bindings: yes.

DEBUG: Querying: weightOnObjectAtLeast(pressureplate2,50)
DEBUG: QueryCond not satisfied since query: weightOnObjectAtLeast(pressureplate2,50) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [isLocated(treasure,player,0)]

DEBUG: Querying: isLocated(treasure,player,0)
DEBUG: QueryCond not satisfied since query: isLocated(treasure,player,0) has no solutions

Knowledge Base:
':-'(notMember(_1069,[]),'!')
':-'(notMember(X,[Head|Tail]),('\='(X,Head),notMember(X,Tail)))
isObject(player)
capacity(player,2147483647)
':-'(inScope(A),(isObject(A),isLocated(A,B,_1075),isLocated(player,B,_1076),'!'))
':-'(inScope(A),(isObject(A),isLocated(A,B,0),hasProperty(B,closablecontainer),'!',isClosed(B,false),inScope(B)))
':-'(inScope(A),(isObject(A),isLocated(A,B,_1081),inScope(B)))
':-'(putIn(A,B),(inScope(A),inScope(B),'\='(A,B),isLocated(A,C,_1085),'\='(A,C),hasProperty(B,closablecontainer),'!',isClosed(B,false),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putIn(A,B),(inScope(A),inScope(B),'\='(A,B),isLocated(A,C,_1093),'\='(A,C),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putInIgnoreScope(A,B),('\='(A,B),isLocated(A,C,_1101),'\='(A,C),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putOn(A,B),(inScope(A),inScope(B),'\='(A,B),volume(A,X),surface(B,Y),surfaceUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putOnIgnoreScope(A,B),('\='(A,B),volume(A,X),surface(B,Y),surfaceUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putBelow(A,B),(inScope(A),inScope(B),'\='(A,B),volume(A,X),below(B,Y),belowUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putBelowIgnoreScope(A,B),('\='(A,B),volume(A,X),below(B,Y),belowUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(outOfScope(A),not(inScope(A)))
':-'(noCapacity(A),not(capacity(A,_1132)))
':-'(noSurface(A),not(surface(A,_1134)))
':-'(noBelow(A),not(below(A,_1136)))
':-'(cantFitCapacity(A,B),(volume(A,X),capacity(B,Y),capacityUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(cantFitSurface(A,B),(volume(A,X),surface(B,Y),surfaceUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(cantFitBelow(A,B),(volume(A,X),below(B,Y),belowUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(tooBigCapacity(A,B),(volume(A,X),capacity(B,Y),'>'(X,Y)))
':-'(tooBigSurface(A,B),(volume(A,X),surface(B,Y),'>'(X,Y)))
':-'(tooBigBelow(A,B),(volume(A,X),below(B,Y),'>'(X,Y)))
':-'(sameObject(A,B),'='(A,B))
':-'(notObject(A),not(isObject(A)))
':-'(targetClosed(A),(hasProperty(A,closablecontainer),isClosed(A,true)))
':-'(stableStack([O],1,R),(isRoom(R),isObject(O),isLocated(O,R,0),hasProperty(O,stable)))
':-'(stableStack([H1,H2|T],M,R),(isObject(H1),isLocated(H1,H2,1),hasProperty(H1,stable),stableStack([H2|T],N,R),is(M,'+'(N,1))))
':-'(stack([O],1,R),(isRoom(R),isObject(O),isLocated(O,R,0)))
':-'(stack([H1,H2|T],M,R),(isObject(H1),isLocated(H1,H2,1),stack([H2|T],N,R),is(M,'+'(N,1))))
':-'(climbableStack(N,R),stableStack(_1186,N,R))
':-'(notClimbableStackError(N,R),(stack(_1189,N,R),not(climbableStack(N,R))))
':-'(totalWeight(O,W,X,Y),(selfWeight(O,W2),setof(X,isLocated(X,O,0),IN),setof(Y,isLocated(Y,O,1),ON),'!',weightInObject(X,O,W3),weightOnObject(Y,O,W4),is(W,'+'('+'(W2,W3),W4))))
':-'(totalWeight(O,W,X,[]),(selfWeight(O,W2),setof(X,isLocated(X,O,0),IN),'!',weightInObject(X,O,W3),is(W,'+'(W2,W3))))
':-'(totalWeight(O,W,[],Y),(selfWeight(O,W2),setof(Y,isLocated(Y,O,1),ON),'!',weightOnObject(Y,O,W3),is(W,'+'(W2,W3))))
':-'(totalWeight(O,W,[],[]),selfWeight(O,W))
':-'(selfWeight(O,W),hasVariable(O,weight,W))
':-'(selfWeight(O,0),(isObject(O),not(hasVariable(O,weight,W))))
':-'(weightOnObject(L,O,W),(setof(X,isLocated(X,O,1),L),'!',weightOnObjectAux(L,O,W)))
':-'(weightOnObjectAux([H|T],O,W),(notMember(H,T),isLocated(H,O,1),'!',weightOnObjectAux(T,O,W3),totalWeight(H,W2,_1227,_1228),is(W,'+'(W2,W3))))
weightOnObjectAux(_1229,O,0)
':-'(weightInObject(L,O,W),(setof(X,isLocated(X,O,0),L),'!',weightInObjectAux(L,O,W)))
':-'(weightInObjectAux([H|T],O,W),(notMember(H,T),isLocated(H,O,0),'!',weightInObjectAux(T,O,W3),totalWeight(H,W2,_1241,_1242),is(W,'+'(W2,W3))))
weightInObjectAux(_1243,O,0)
':-'(weightOnObjectEquals(O,W),(weightOnObject(_1247,O,W2),'='(W2,W)))
':-'(weightOnObjectAtLeast(O,W),(weightOnObject(_1251,O,W2),'>='(W2,W)))
':-'(weightOnObjectAtMost(O,W),(weightOnObject(_1255,O,W2),'=<'(W2,W)))
':-'(weightInObjectEquals(O,W),(weightInObject(_1259,O,W2),'='(W2,W)))
':-'(weightInObjectAtLeast(O,W),(weightInObject(_1263,O,W2),'>='(W2,W)))
':-'(weightInObjectAtMost(O,W),(weightInObject(_1267,O,W2),'=<'(W2,W)))
':-'(weightOnObjectNotEquals(O,W),(weightOnObject(_1271,O,W2),'\='(W2,W)))
':-'(weightOnObjectTooLow(O,W),(weightOnObject(_1275,O,W2),'<'(W2,W)))
':-'(weightOnObjectTooHigh(O,W),(weightOnObject(_1279,O,W2),'>'(W2,W)))
':-'(weightInObjectNotEquals(O,W),(weightInObject(_1283,O,W2),'\='(W2,W)))
':-'(weightInObjectTooLow(O,W),(weightInObject(_1287,O,W2),'<'(W2,W)))
':-'(weightInObjectTooHigh(O,W),(weightInObject(_1291,O,W2),'>'(W2,W)))
isRoom(ruinsentrance)
isRoom(civilisation)
isRoom(columns)
hasProperty(smallblock,takeable)
hasProperty(smallblock,stable)
hasVariable(smallblock,weight,25)
isObject(smallblock)
volume(smallblock,25)
surface(smallblock,25)
surfaceUsed(smallblock,0)
isRoom(altarroom)
hasProperty(altar,stable)
isObject(altar)
volume(altar,1)
surface(altar,50)
surfaceUsed(altar,0)
isLocated(altar,altarroom,0)
isObject(pressureplate1)
volume(pressureplate1,1)
surface(pressureplate1,50)
isLocated(pressureplate1,altarroom,0)
isObject(pressureplate2)
volume(pressureplate2,1)
surface(pressureplate2,50)
surfaceUsed(pressureplate2,0)
isLocated(pressureplate2,altarroom,0)
hasProperty(watercontainer1,takeable)
hasVariable(watercontainer1,weight,50)
isObject(watercontainer1)
volume(watercontainer1,25)
capacity(watercontainer1,25)
capacityUsed(watercontainer1,0)
isLocated(watercontainer1,pressureplate1,1)
isRoom(treasureroom)
hasProperty(chest,takeable)
hasProperty(chest,closablecontainer)
hasProperty(chest,locked)
hasVariable(chest,weight,25)
isClosed(chest,true)
isObject(chest)
volume(chest,50)
capacity(chest,50)
isLocated(chest,treasureroom,0)
hasProperty(treasure,takeable)
hasVariable(treasure,weight,25)
isObject(treasure)
volume(treasure,50)
isLocated(treasure,chest,0)
isRoom(storageroom)
hasProperty(cupboard,closablecontainer)
hasProperty(cupboard,stable)
isClosed(cupboard,true)
isObject(cupboard)
volume(cupboard,1)
capacity(cupboard,50)
surface(cupboard,50)
surfaceUsed(cupboard,0)
isLocated(cupboard,storageroom,0)
hasProperty(watercontainer2,takeable)
hasVariable(watercontainer2,weight,10)
isObject(watercontainer2)
volume(watercontainer2,25)
capacity(watercontainer2,25)
capacityUsed(watercontainer2,0)
isLocated(watercontainer2,cupboard,0)
hasProperty(plank,takeable)
hasVariable(plank,weight,25)
isObject(plank)
volume(plank,50)
surface(plank,50)
surfaceUsed(plank,0)
isLocated(plank,storageroom,0)
isRoom(attic)
hasProperty(key,takeable)
hasVariable(key,weight,1)
isObject(key)
volume(key,10)
isLocated(key,attic,0)
isRoom(rockytunnel)
hasProperty(mediumblock,takeable)
hasProperty(mediumblock,stable)
hasVariable(mediumblock,weight,50)
isObject(mediumblock)
volume(mediumblock,50)
surface(mediumblock,50)
isRoom(eastriver)
isObject(river)
volume(river,1)
isLocated(river,eastriver,0)
isObject(riversupports)
volume(riversupports,0)
surface(riversupports,50)
surfaceUsed(riversupports,0)
isLocated(riversupports,river,0)
isRoom(waterfallcavern)
isObject(waterfall)
volume(waterfall,1)
below(waterfall,100)
belowUsed(waterfall,0)
isLocated(waterfall,waterfallcavern,0)
isRoom(westriver)
isRoom(ancientquarry)
hasProperty(largeblock,takeable)
hasProperty(largeblock,stable)
hasVariable(largeblock,weight,75)
isObject(largeblock)
volume(largeblock,75)
surface(largeblock,75)
surfaceUsed(largeblock,0)
isLocated(largeblock,ancientquarry,0)
isRoom(deadroom)
surfaceUsed(pressureplate1,25)
capacityUsed(chest,50)
capacityUsed(cupboard,25)
isLocated(player,columns,0)
isLocated(mediumblock,player,0)
capacityUsed(player,-25)
surfaceUsed(mediumblock,0)
isLocated(smallblock,player,0)

======================================================================================
Processing user input: inspect medium
======================================================================================

DEBUG: Pre-process input lemmas: [inspect, medium]
DEBUG: Pre-process input posTags: [VB, NN]
DEBUG: Removing conflicting synonym: block
DEBUG: Adding [medium] to matched objects
DEBUG: Adding 1 to matched indices
DEBUG: removeStart: [1]
DEBUG: removeEnd: [1]
DEBUG: Pre-processed: inspect item1
DEBUG: Lemmas: [inspect, item]
DEBUG: Verb found: INSPECT
DEBUG: PRSA set to: INSPECT

DEBUG: PRSA: INSPECT, PRSO: MEDIUMBLOCK, PRSI: null

DEBUG: ATTEMPT TO PERFORM ACTION ON PRSI

DEBUG: FAILED TO PERFORM ACTION ON PRSI

DEBUG: ATTEMPT TO PERFORM ACTION ON PRSO

DEBUG: FAILED TO PERFORM ACTION ON PRSO

DEBUG: ATTEMPT TO PERFORM GENERIC ACTION ON PRSA
DEBUG: Corrected Verb: look
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [climbableStack(3,storageroom)]

DEBUG: Querying: climbableStack(3,storageroom)
DEBUG: QueryCond not satisfied since query: climbableStack(3,storageroom) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [isLocated(plank,riversupports,1)]

DEBUG: Querying: isLocated(plank,riversupports,1)
DEBUG: QueryCond not satisfied since query: isLocated(plank,riversupports,1) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate1,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate1,50)
DEBUG: Solution: weightOnObjectAtLeast(pressureplate1,50) - bindings: yes.
DEBUG: QueryCond satisfied
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate2,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate2,50)
DEBUG: QueryCond not satisfied since query: weightOnObjectAtLeast(pressureplate2,50) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate1,50), weightOnObjectAtLeast(pressureplate2,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate1,50)
DEBUG: Solution: weightOnObjectAtLeast(pressureplate1,50) - bindings: yes.

DEBUG: Querying: weightOnObjectAtLeast(pressureplate2,50)
DEBUG: QueryCond not satisfied since query: weightOnObjectAtLeast(pressureplate2,50) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [isLocated(treasure,player,0)]

DEBUG: Querying: isLocated(treasure,player,0)
DEBUG: QueryCond not satisfied since query: isLocated(treasure,player,0) has no solutions

Knowledge Base:
':-'(notMember(_1069,[]),'!')
':-'(notMember(X,[Head|Tail]),('\='(X,Head),notMember(X,Tail)))
isObject(player)
capacity(player,2147483647)
':-'(inScope(A),(isObject(A),isLocated(A,B,_1075),isLocated(player,B,_1076),'!'))
':-'(inScope(A),(isObject(A),isLocated(A,B,0),hasProperty(B,closablecontainer),'!',isClosed(B,false),inScope(B)))
':-'(inScope(A),(isObject(A),isLocated(A,B,_1081),inScope(B)))
':-'(putIn(A,B),(inScope(A),inScope(B),'\='(A,B),isLocated(A,C,_1085),'\='(A,C),hasProperty(B,closablecontainer),'!',isClosed(B,false),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putIn(A,B),(inScope(A),inScope(B),'\='(A,B),isLocated(A,C,_1093),'\='(A,C),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putInIgnoreScope(A,B),('\='(A,B),isLocated(A,C,_1101),'\='(A,C),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putOn(A,B),(inScope(A),inScope(B),'\='(A,B),volume(A,X),surface(B,Y),surfaceUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putOnIgnoreScope(A,B),('\='(A,B),volume(A,X),surface(B,Y),surfaceUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putBelow(A,B),(inScope(A),inScope(B),'\='(A,B),volume(A,X),below(B,Y),belowUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putBelowIgnoreScope(A,B),('\='(A,B),volume(A,X),below(B,Y),belowUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(outOfScope(A),not(inScope(A)))
':-'(noCapacity(A),not(capacity(A,_1132)))
':-'(noSurface(A),not(surface(A,_1134)))
':-'(noBelow(A),not(below(A,_1136)))
':-'(cantFitCapacity(A,B),(volume(A,X),capacity(B,Y),capacityUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(cantFitSurface(A,B),(volume(A,X),surface(B,Y),surfaceUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(cantFitBelow(A,B),(volume(A,X),below(B,Y),belowUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(tooBigCapacity(A,B),(volume(A,X),capacity(B,Y),'>'(X,Y)))
':-'(tooBigSurface(A,B),(volume(A,X),surface(B,Y),'>'(X,Y)))
':-'(tooBigBelow(A,B),(volume(A,X),below(B,Y),'>'(X,Y)))
':-'(sameObject(A,B),'='(A,B))
':-'(notObject(A),not(isObject(A)))
':-'(targetClosed(A),(hasProperty(A,closablecontainer),isClosed(A,true)))
':-'(stableStack([O],1,R),(isRoom(R),isObject(O),isLocated(O,R,0),hasProperty(O,stable)))
':-'(stableStack([H1,H2|T],M,R),(isObject(H1),isLocated(H1,H2,1),hasProperty(H1,stable),stableStack([H2|T],N,R),is(M,'+'(N,1))))
':-'(stack([O],1,R),(isRoom(R),isObject(O),isLocated(O,R,0)))
':-'(stack([H1,H2|T],M,R),(isObject(H1),isLocated(H1,H2,1),stack([H2|T],N,R),is(M,'+'(N,1))))
':-'(climbableStack(N,R),stableStack(_1186,N,R))
':-'(notClimbableStackError(N,R),(stack(_1189,N,R),not(climbableStack(N,R))))
':-'(totalWeight(O,W,X,Y),(selfWeight(O,W2),setof(X,isLocated(X,O,0),IN),setof(Y,isLocated(Y,O,1),ON),'!',weightInObject(X,O,W3),weightOnObject(Y,O,W4),is(W,'+'('+'(W2,W3),W4))))
':-'(totalWeight(O,W,X,[]),(selfWeight(O,W2),setof(X,isLocated(X,O,0),IN),'!',weightInObject(X,O,W3),is(W,'+'(W2,W3))))
':-'(totalWeight(O,W,[],Y),(selfWeight(O,W2),setof(Y,isLocated(Y,O,1),ON),'!',weightOnObject(Y,O,W3),is(W,'+'(W2,W3))))
':-'(totalWeight(O,W,[],[]),selfWeight(O,W))
':-'(selfWeight(O,W),hasVariable(O,weight,W))
':-'(selfWeight(O,0),(isObject(O),not(hasVariable(O,weight,W))))
':-'(weightOnObject(L,O,W),(setof(X,isLocated(X,O,1),L),'!',weightOnObjectAux(L,O,W)))
':-'(weightOnObjectAux([H|T],O,W),(notMember(H,T),isLocated(H,O,1),'!',weightOnObjectAux(T,O,W3),totalWeight(H,W2,_1227,_1228),is(W,'+'(W2,W3))))
weightOnObjectAux(_1229,O,0)
':-'(weightInObject(L,O,W),(setof(X,isLocated(X,O,0),L),'!',weightInObjectAux(L,O,W)))
':-'(weightInObjectAux([H|T],O,W),(notMember(H,T),isLocated(H,O,0),'!',weightInObjectAux(T,O,W3),totalWeight(H,W2,_1241,_1242),is(W,'+'(W2,W3))))
weightInObjectAux(_1243,O,0)
':-'(weightOnObjectEquals(O,W),(weightOnObject(_1247,O,W2),'='(W2,W)))
':-'(weightOnObjectAtLeast(O,W),(weightOnObject(_1251,O,W2),'>='(W2,W)))
':-'(weightOnObjectAtMost(O,W),(weightOnObject(_1255,O,W2),'=<'(W2,W)))
':-'(weightInObjectEquals(O,W),(weightInObject(_1259,O,W2),'='(W2,W)))
':-'(weightInObjectAtLeast(O,W),(weightInObject(_1263,O,W2),'>='(W2,W)))
':-'(weightInObjectAtMost(O,W),(weightInObject(_1267,O,W2),'=<'(W2,W)))
':-'(weightOnObjectNotEquals(O,W),(weightOnObject(_1271,O,W2),'\='(W2,W)))
':-'(weightOnObjectTooLow(O,W),(weightOnObject(_1275,O,W2),'<'(W2,W)))
':-'(weightOnObjectTooHigh(O,W),(weightOnObject(_1279,O,W2),'>'(W2,W)))
':-'(weightInObjectNotEquals(O,W),(weightInObject(_1283,O,W2),'\='(W2,W)))
':-'(weightInObjectTooLow(O,W),(weightInObject(_1287,O,W2),'<'(W2,W)))
':-'(weightInObjectTooHigh(O,W),(weightInObject(_1291,O,W2),'>'(W2,W)))
isRoom(ruinsentrance)
isRoom(civilisation)
isRoom(columns)
hasProperty(smallblock,takeable)
hasProperty(smallblock,stable)
hasVariable(smallblock,weight,25)
isObject(smallblock)
volume(smallblock,25)
surface(smallblock,25)
surfaceUsed(smallblock,0)
isRoom(altarroom)
hasProperty(altar,stable)
isObject(altar)
volume(altar,1)
surface(altar,50)
surfaceUsed(altar,0)
isLocated(altar,altarroom,0)
isObject(pressureplate1)
volume(pressureplate1,1)
surface(pressureplate1,50)
isLocated(pressureplate1,altarroom,0)
isObject(pressureplate2)
volume(pressureplate2,1)
surface(pressureplate2,50)
surfaceUsed(pressureplate2,0)
isLocated(pressureplate2,altarroom,0)
hasProperty(watercontainer1,takeable)
hasVariable(watercontainer1,weight,50)
isObject(watercontainer1)
volume(watercontainer1,25)
capacity(watercontainer1,25)
capacityUsed(watercontainer1,0)
isLocated(watercontainer1,pressureplate1,1)
isRoom(treasureroom)
hasProperty(chest,takeable)
hasProperty(chest,closablecontainer)
hasProperty(chest,locked)
hasVariable(chest,weight,25)
isClosed(chest,true)
isObject(chest)
volume(chest,50)
capacity(chest,50)
isLocated(chest,treasureroom,0)
hasProperty(treasure,takeable)
hasVariable(treasure,weight,25)
isObject(treasure)
volume(treasure,50)
isLocated(treasure,chest,0)
isRoom(storageroom)
hasProperty(cupboard,closablecontainer)
hasProperty(cupboard,stable)
isClosed(cupboard,true)
isObject(cupboard)
volume(cupboard,1)
capacity(cupboard,50)
surface(cupboard,50)
surfaceUsed(cupboard,0)
isLocated(cupboard,storageroom,0)
hasProperty(watercontainer2,takeable)
hasVariable(watercontainer2,weight,10)
isObject(watercontainer2)
volume(watercontainer2,25)
capacity(watercontainer2,25)
capacityUsed(watercontainer2,0)
isLocated(watercontainer2,cupboard,0)
hasProperty(plank,takeable)
hasVariable(plank,weight,25)
isObject(plank)
volume(plank,50)
surface(plank,50)
surfaceUsed(plank,0)
isLocated(plank,storageroom,0)
isRoom(attic)
hasProperty(key,takeable)
hasVariable(key,weight,1)
isObject(key)
volume(key,10)
isLocated(key,attic,0)
isRoom(rockytunnel)
hasProperty(mediumblock,takeable)
hasProperty(mediumblock,stable)
hasVariable(mediumblock,weight,50)
isObject(mediumblock)
volume(mediumblock,50)
surface(mediumblock,50)
isRoom(eastriver)
isObject(river)
volume(river,1)
isLocated(river,eastriver,0)
isObject(riversupports)
volume(riversupports,0)
surface(riversupports,50)
surfaceUsed(riversupports,0)
isLocated(riversupports,river,0)
isRoom(waterfallcavern)
isObject(waterfall)
volume(waterfall,1)
below(waterfall,100)
belowUsed(waterfall,0)
isLocated(waterfall,waterfallcavern,0)
isRoom(westriver)
isRoom(ancientquarry)
hasProperty(largeblock,takeable)
hasProperty(largeblock,stable)
hasVariable(largeblock,weight,75)
isObject(largeblock)
volume(largeblock,75)
surface(largeblock,75)
surfaceUsed(largeblock,0)
isLocated(largeblock,ancientquarry,0)
isRoom(deadroom)
surfaceUsed(pressureplate1,25)
capacityUsed(chest,50)
capacityUsed(cupboard,25)
isLocated(player,columns,0)
isLocated(mediumblock,player,0)
capacityUsed(player,-25)
surfaceUsed(mediumblock,0)
isLocated(smallblock,player,0)

======================================================================================
Processing user input: put small on medium
======================================================================================

DEBUG: Pre-process input lemmas: [put, small, on, medium]
DEBUG: Pre-process input posTags: [VB, NNP, NNP, NNP]
DEBUG: Removing conflicting synonym: block
DEBUG: Adding [medium] to matched objects
DEBUG: Adding 3 to matched indices
DEBUG: Adding [small] to matched objects
DEBUG: Adding 1 to matched indices
DEBUG: removeStart: [3, 1]
DEBUG: removeEnd: [3, 1]
DEBUG: Pre-processed: put item2 on item1
DEBUG: Lemmas: [put, item, on, item]
DEBUG: Verb found: PUT ITEM ON ITEM
DEBUG: Verb found: PUT
DEBUG: PRSA set to: PUT ITEM ON ITEM

DEBUG: PRSA: PUT ITEM ON ITEM, PRSO: SMALLBLOCK, PRSI: MEDIUMBLOCK

DEBUG: ATTEMPT TO PERFORM ACTION ON PRSI

DEBUG: FAILED TO PERFORM ACTION ON PRSI

DEBUG: ATTEMPT TO PERFORM ACTION ON PRSO

DEBUG: FAILED TO PERFORM ACTION ON PRSO

DEBUG: ATTEMPT TO PERFORM GENERIC ACTION ON PRSA
DEBUG: Corrected Verb: place on

DEBUG: FAILED TO PERFORM GENERIC ACTION USING PRSA

DEBUG: ATTEMPT TO PERFORM ENHANCED ACTION ON PRSA
DEBUG: Trying to place on

DEBUG: Querying: putOn(smallblock,mediumblock)
DEBUG: Solution: putOn(smallblock,mediumblock) - bindings: yes.

DEBUG: Querying: isObject(player)
DEBUG: Solution: isObject(player) - bindings: yes.

DEBUG: Querying: capacityUsed(player,X)
DEBUG: Solution: capacityUsed(player,-25) - bindings: yes.
X / -25

DEBUG: Removed clause capacityUsed(player,-25)

DEBUG: Adding clause capacityUsed(player,-50)

DEBUG: Querying: isObject(mediumblock)
DEBUG: Solution: isObject(mediumblock) - bindings: yes.

DEBUG: Querying: surfaceUsed(mediumblock,X)
DEBUG: Solution: surfaceUsed(mediumblock,0) - bindings: yes.
X / 0

DEBUG: Removed clause surfaceUsed(mediumblock,0)

DEBUG: Adding clause surfaceUsed(mediumblock,25)

DEBUG: Removed clause isLocated(smallblock,player,0)

DEBUG: Adding clause isLocated(smallblock,mediumblock,1)
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [climbableStack(3,storageroom)]

DEBUG: Querying: climbableStack(3,storageroom)
DEBUG: QueryCond not satisfied since query: climbableStack(3,storageroom) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [isLocated(plank,riversupports,1)]

DEBUG: Querying: isLocated(plank,riversupports,1)
DEBUG: QueryCond not satisfied since query: isLocated(plank,riversupports,1) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate1,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate1,50)
DEBUG: Solution: weightOnObjectAtLeast(pressureplate1,50) - bindings: yes.
DEBUG: QueryCond satisfied
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate2,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate2,50)
DEBUG: QueryCond not satisfied since query: weightOnObjectAtLeast(pressureplate2,50) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate1,50), weightOnObjectAtLeast(pressureplate2,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate1,50)
DEBUG: Solution: weightOnObjectAtLeast(pressureplate1,50) - bindings: yes.

DEBUG: Querying: weightOnObjectAtLeast(pressureplate2,50)
DEBUG: QueryCond not satisfied since query: weightOnObjectAtLeast(pressureplate2,50) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [isLocated(treasure,player,0)]

DEBUG: Querying: isLocated(treasure,player,0)
DEBUG: QueryCond not satisfied since query: isLocated(treasure,player,0) has no solutions

Knowledge Base:
':-'(notMember(_1069,[]),'!')
':-'(notMember(X,[Head|Tail]),('\='(X,Head),notMember(X,Tail)))
isObject(player)
capacity(player,2147483647)
':-'(inScope(A),(isObject(A),isLocated(A,B,_1075),isLocated(player,B,_1076),'!'))
':-'(inScope(A),(isObject(A),isLocated(A,B,0),hasProperty(B,closablecontainer),'!',isClosed(B,false),inScope(B)))
':-'(inScope(A),(isObject(A),isLocated(A,B,_1081),inScope(B)))
':-'(putIn(A,B),(inScope(A),inScope(B),'\='(A,B),isLocated(A,C,_1085),'\='(A,C),hasProperty(B,closablecontainer),'!',isClosed(B,false),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putIn(A,B),(inScope(A),inScope(B),'\='(A,B),isLocated(A,C,_1093),'\='(A,C),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putInIgnoreScope(A,B),('\='(A,B),isLocated(A,C,_1101),'\='(A,C),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putOn(A,B),(inScope(A),inScope(B),'\='(A,B),volume(A,X),surface(B,Y),surfaceUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putOnIgnoreScope(A,B),('\='(A,B),volume(A,X),surface(B,Y),surfaceUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putBelow(A,B),(inScope(A),inScope(B),'\='(A,B),volume(A,X),below(B,Y),belowUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putBelowIgnoreScope(A,B),('\='(A,B),volume(A,X),below(B,Y),belowUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(outOfScope(A),not(inScope(A)))
':-'(noCapacity(A),not(capacity(A,_1132)))
':-'(noSurface(A),not(surface(A,_1134)))
':-'(noBelow(A),not(below(A,_1136)))
':-'(cantFitCapacity(A,B),(volume(A,X),capacity(B,Y),capacityUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(cantFitSurface(A,B),(volume(A,X),surface(B,Y),surfaceUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(cantFitBelow(A,B),(volume(A,X),below(B,Y),belowUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(tooBigCapacity(A,B),(volume(A,X),capacity(B,Y),'>'(X,Y)))
':-'(tooBigSurface(A,B),(volume(A,X),surface(B,Y),'>'(X,Y)))
':-'(tooBigBelow(A,B),(volume(A,X),below(B,Y),'>'(X,Y)))
':-'(sameObject(A,B),'='(A,B))
':-'(notObject(A),not(isObject(A)))
':-'(targetClosed(A),(hasProperty(A,closablecontainer),isClosed(A,true)))
':-'(stableStack([O],1,R),(isRoom(R),isObject(O),isLocated(O,R,0),hasProperty(O,stable)))
':-'(stableStack([H1,H2|T],M,R),(isObject(H1),isLocated(H1,H2,1),hasProperty(H1,stable),stableStack([H2|T],N,R),is(M,'+'(N,1))))
':-'(stack([O],1,R),(isRoom(R),isObject(O),isLocated(O,R,0)))
':-'(stack([H1,H2|T],M,R),(isObject(H1),isLocated(H1,H2,1),stack([H2|T],N,R),is(M,'+'(N,1))))
':-'(climbableStack(N,R),stableStack(_1186,N,R))
':-'(notClimbableStackError(N,R),(stack(_1189,N,R),not(climbableStack(N,R))))
':-'(totalWeight(O,W,X,Y),(selfWeight(O,W2),setof(X,isLocated(X,O,0),IN),setof(Y,isLocated(Y,O,1),ON),'!',weightInObject(X,O,W3),weightOnObject(Y,O,W4),is(W,'+'('+'(W2,W3),W4))))
':-'(totalWeight(O,W,X,[]),(selfWeight(O,W2),setof(X,isLocated(X,O,0),IN),'!',weightInObject(X,O,W3),is(W,'+'(W2,W3))))
':-'(totalWeight(O,W,[],Y),(selfWeight(O,W2),setof(Y,isLocated(Y,O,1),ON),'!',weightOnObject(Y,O,W3),is(W,'+'(W2,W3))))
':-'(totalWeight(O,W,[],[]),selfWeight(O,W))
':-'(selfWeight(O,W),hasVariable(O,weight,W))
':-'(selfWeight(O,0),(isObject(O),not(hasVariable(O,weight,W))))
':-'(weightOnObject(L,O,W),(setof(X,isLocated(X,O,1),L),'!',weightOnObjectAux(L,O,W)))
':-'(weightOnObjectAux([H|T],O,W),(notMember(H,T),isLocated(H,O,1),'!',weightOnObjectAux(T,O,W3),totalWeight(H,W2,_1227,_1228),is(W,'+'(W2,W3))))
weightOnObjectAux(_1229,O,0)
':-'(weightInObject(L,O,W),(setof(X,isLocated(X,O,0),L),'!',weightInObjectAux(L,O,W)))
':-'(weightInObjectAux([H|T],O,W),(notMember(H,T),isLocated(H,O,0),'!',weightInObjectAux(T,O,W3),totalWeight(H,W2,_1241,_1242),is(W,'+'(W2,W3))))
weightInObjectAux(_1243,O,0)
':-'(weightOnObjectEquals(O,W),(weightOnObject(_1247,O,W2),'='(W2,W)))
':-'(weightOnObjectAtLeast(O,W),(weightOnObject(_1251,O,W2),'>='(W2,W)))
':-'(weightOnObjectAtMost(O,W),(weightOnObject(_1255,O,W2),'=<'(W2,W)))
':-'(weightInObjectEquals(O,W),(weightInObject(_1259,O,W2),'='(W2,W)))
':-'(weightInObjectAtLeast(O,W),(weightInObject(_1263,O,W2),'>='(W2,W)))
':-'(weightInObjectAtMost(O,W),(weightInObject(_1267,O,W2),'=<'(W2,W)))
':-'(weightOnObjectNotEquals(O,W),(weightOnObject(_1271,O,W2),'\='(W2,W)))
':-'(weightOnObjectTooLow(O,W),(weightOnObject(_1275,O,W2),'<'(W2,W)))
':-'(weightOnObjectTooHigh(O,W),(weightOnObject(_1279,O,W2),'>'(W2,W)))
':-'(weightInObjectNotEquals(O,W),(weightInObject(_1283,O,W2),'\='(W2,W)))
':-'(weightInObjectTooLow(O,W),(weightInObject(_1287,O,W2),'<'(W2,W)))
':-'(weightInObjectTooHigh(O,W),(weightInObject(_1291,O,W2),'>'(W2,W)))
isRoom(ruinsentrance)
isRoom(civilisation)
isRoom(columns)
hasProperty(smallblock,takeable)
hasProperty(smallblock,stable)
hasVariable(smallblock,weight,25)
isObject(smallblock)
volume(smallblock,25)
surface(smallblock,25)
surfaceUsed(smallblock,0)
isRoom(altarroom)
hasProperty(altar,stable)
isObject(altar)
volume(altar,1)
surface(altar,50)
surfaceUsed(altar,0)
isLocated(altar,altarroom,0)
isObject(pressureplate1)
volume(pressureplate1,1)
surface(pressureplate1,50)
isLocated(pressureplate1,altarroom,0)
isObject(pressureplate2)
volume(pressureplate2,1)
surface(pressureplate2,50)
surfaceUsed(pressureplate2,0)
isLocated(pressureplate2,altarroom,0)
hasProperty(watercontainer1,takeable)
hasVariable(watercontainer1,weight,50)
isObject(watercontainer1)
volume(watercontainer1,25)
capacity(watercontainer1,25)
capacityUsed(watercontainer1,0)
isLocated(watercontainer1,pressureplate1,1)
isRoom(treasureroom)
hasProperty(chest,takeable)
hasProperty(chest,closablecontainer)
hasProperty(chest,locked)
hasVariable(chest,weight,25)
isClosed(chest,true)
isObject(chest)
volume(chest,50)
capacity(chest,50)
isLocated(chest,treasureroom,0)
hasProperty(treasure,takeable)
hasVariable(treasure,weight,25)
isObject(treasure)
volume(treasure,50)
isLocated(treasure,chest,0)
isRoom(storageroom)
hasProperty(cupboard,closablecontainer)
hasProperty(cupboard,stable)
isClosed(cupboard,true)
isObject(cupboard)
volume(cupboard,1)
capacity(cupboard,50)
surface(cupboard,50)
surfaceUsed(cupboard,0)
isLocated(cupboard,storageroom,0)
hasProperty(watercontainer2,takeable)
hasVariable(watercontainer2,weight,10)
isObject(watercontainer2)
volume(watercontainer2,25)
capacity(watercontainer2,25)
capacityUsed(watercontainer2,0)
isLocated(watercontainer2,cupboard,0)
hasProperty(plank,takeable)
hasVariable(plank,weight,25)
isObject(plank)
volume(plank,50)
surface(plank,50)
surfaceUsed(plank,0)
isLocated(plank,storageroom,0)
isRoom(attic)
hasProperty(key,takeable)
hasVariable(key,weight,1)
isObject(key)
volume(key,10)
isLocated(key,attic,0)
isRoom(rockytunnel)
hasProperty(mediumblock,takeable)
hasProperty(mediumblock,stable)
hasVariable(mediumblock,weight,50)
isObject(mediumblock)
volume(mediumblock,50)
surface(mediumblock,50)
isRoom(eastriver)
isObject(river)
volume(river,1)
isLocated(river,eastriver,0)
isObject(riversupports)
volume(riversupports,0)
surface(riversupports,50)
surfaceUsed(riversupports,0)
isLocated(riversupports,river,0)
isRoom(waterfallcavern)
isObject(waterfall)
volume(waterfall,1)
below(waterfall,100)
belowUsed(waterfall,0)
isLocated(waterfall,waterfallcavern,0)
isRoom(westriver)
isRoom(ancientquarry)
hasProperty(largeblock,takeable)
hasProperty(largeblock,stable)
hasVariable(largeblock,weight,75)
isObject(largeblock)
volume(largeblock,75)
surface(largeblock,75)
surfaceUsed(largeblock,0)
isLocated(largeblock,ancientquarry,0)
isRoom(deadroom)
surfaceUsed(pressureplate1,25)
capacityUsed(chest,50)
capacityUsed(cupboard,25)
isLocated(player,columns,0)
isLocated(mediumblock,player,0)
capacityUsed(player,-50)
surfaceUsed(mediumblock,25)
isLocated(smallblock,mediumblock,1)

======================================================================================
Processing user input: inspect medium
======================================================================================

DEBUG: Pre-process input lemmas: [inspect, medium]
DEBUG: Pre-process input posTags: [VB, NN]
DEBUG: Removing conflicting synonym: block
DEBUG: Adding [medium] to matched objects
DEBUG: Adding 1 to matched indices
DEBUG: removeStart: [1]
DEBUG: removeEnd: [1]
DEBUG: Pre-processed: inspect item1
DEBUG: Lemmas: [inspect, item]
DEBUG: Verb found: INSPECT
DEBUG: PRSA set to: INSPECT

DEBUG: PRSA: INSPECT, PRSO: MEDIUMBLOCK, PRSI: null

DEBUG: ATTEMPT TO PERFORM ACTION ON PRSI

DEBUG: FAILED TO PERFORM ACTION ON PRSI

DEBUG: ATTEMPT TO PERFORM ACTION ON PRSO

DEBUG: FAILED TO PERFORM ACTION ON PRSO

DEBUG: ATTEMPT TO PERFORM GENERIC ACTION ON PRSA
DEBUG: Corrected Verb: look
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [climbableStack(3,storageroom)]

DEBUG: Querying: climbableStack(3,storageroom)
DEBUG: QueryCond not satisfied since query: climbableStack(3,storageroom) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [isLocated(plank,riversupports,1)]

DEBUG: Querying: isLocated(plank,riversupports,1)
DEBUG: QueryCond not satisfied since query: isLocated(plank,riversupports,1) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate1,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate1,50)
DEBUG: Solution: weightOnObjectAtLeast(pressureplate1,50) - bindings: yes.
DEBUG: QueryCond satisfied
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate2,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate2,50)
DEBUG: QueryCond not satisfied since query: weightOnObjectAtLeast(pressureplate2,50) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate1,50), weightOnObjectAtLeast(pressureplate2,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate1,50)
DEBUG: Solution: weightOnObjectAtLeast(pressureplate1,50) - bindings: yes.

DEBUG: Querying: weightOnObjectAtLeast(pressureplate2,50)
DEBUG: QueryCond not satisfied since query: weightOnObjectAtLeast(pressureplate2,50) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [isLocated(treasure,player,0)]

DEBUG: Querying: isLocated(treasure,player,0)
DEBUG: QueryCond not satisfied since query: isLocated(treasure,player,0) has no solutions

Knowledge Base:
':-'(notMember(_1069,[]),'!')
':-'(notMember(X,[Head|Tail]),('\='(X,Head),notMember(X,Tail)))
isObject(player)
capacity(player,2147483647)
':-'(inScope(A),(isObject(A),isLocated(A,B,_1075),isLocated(player,B,_1076),'!'))
':-'(inScope(A),(isObject(A),isLocated(A,B,0),hasProperty(B,closablecontainer),'!',isClosed(B,false),inScope(B)))
':-'(inScope(A),(isObject(A),isLocated(A,B,_1081),inScope(B)))
':-'(putIn(A,B),(inScope(A),inScope(B),'\='(A,B),isLocated(A,C,_1085),'\='(A,C),hasProperty(B,closablecontainer),'!',isClosed(B,false),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putIn(A,B),(inScope(A),inScope(B),'\='(A,B),isLocated(A,C,_1093),'\='(A,C),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putInIgnoreScope(A,B),('\='(A,B),isLocated(A,C,_1101),'\='(A,C),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putOn(A,B),(inScope(A),inScope(B),'\='(A,B),volume(A,X),surface(B,Y),surfaceUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putOnIgnoreScope(A,B),('\='(A,B),volume(A,X),surface(B,Y),surfaceUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putBelow(A,B),(inScope(A),inScope(B),'\='(A,B),volume(A,X),below(B,Y),belowUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putBelowIgnoreScope(A,B),('\='(A,B),volume(A,X),below(B,Y),belowUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(outOfScope(A),not(inScope(A)))
':-'(noCapacity(A),not(capacity(A,_1132)))
':-'(noSurface(A),not(surface(A,_1134)))
':-'(noBelow(A),not(below(A,_1136)))
':-'(cantFitCapacity(A,B),(volume(A,X),capacity(B,Y),capacityUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(cantFitSurface(A,B),(volume(A,X),surface(B,Y),surfaceUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(cantFitBelow(A,B),(volume(A,X),below(B,Y),belowUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(tooBigCapacity(A,B),(volume(A,X),capacity(B,Y),'>'(X,Y)))
':-'(tooBigSurface(A,B),(volume(A,X),surface(B,Y),'>'(X,Y)))
':-'(tooBigBelow(A,B),(volume(A,X),below(B,Y),'>'(X,Y)))
':-'(sameObject(A,B),'='(A,B))
':-'(notObject(A),not(isObject(A)))
':-'(targetClosed(A),(hasProperty(A,closablecontainer),isClosed(A,true)))
':-'(stableStack([O],1,R),(isRoom(R),isObject(O),isLocated(O,R,0),hasProperty(O,stable)))
':-'(stableStack([H1,H2|T],M,R),(isObject(H1),isLocated(H1,H2,1),hasProperty(H1,stable),stableStack([H2|T],N,R),is(M,'+'(N,1))))
':-'(stack([O],1,R),(isRoom(R),isObject(O),isLocated(O,R,0)))
':-'(stack([H1,H2|T],M,R),(isObject(H1),isLocated(H1,H2,1),stack([H2|T],N,R),is(M,'+'(N,1))))
':-'(climbableStack(N,R),stableStack(_1186,N,R))
':-'(notClimbableStackError(N,R),(stack(_1189,N,R),not(climbableStack(N,R))))
':-'(totalWeight(O,W,X,Y),(selfWeight(O,W2),setof(X,isLocated(X,O,0),IN),setof(Y,isLocated(Y,O,1),ON),'!',weightInObject(X,O,W3),weightOnObject(Y,O,W4),is(W,'+'('+'(W2,W3),W4))))
':-'(totalWeight(O,W,X,[]),(selfWeight(O,W2),setof(X,isLocated(X,O,0),IN),'!',weightInObject(X,O,W3),is(W,'+'(W2,W3))))
':-'(totalWeight(O,W,[],Y),(selfWeight(O,W2),setof(Y,isLocated(Y,O,1),ON),'!',weightOnObject(Y,O,W3),is(W,'+'(W2,W3))))
':-'(totalWeight(O,W,[],[]),selfWeight(O,W))
':-'(selfWeight(O,W),hasVariable(O,weight,W))
':-'(selfWeight(O,0),(isObject(O),not(hasVariable(O,weight,W))))
':-'(weightOnObject(L,O,W),(setof(X,isLocated(X,O,1),L),'!',weightOnObjectAux(L,O,W)))
':-'(weightOnObjectAux([H|T],O,W),(notMember(H,T),isLocated(H,O,1),'!',weightOnObjectAux(T,O,W3),totalWeight(H,W2,_1227,_1228),is(W,'+'(W2,W3))))
weightOnObjectAux(_1229,O,0)
':-'(weightInObject(L,O,W),(setof(X,isLocated(X,O,0),L),'!',weightInObjectAux(L,O,W)))
':-'(weightInObjectAux([H|T],O,W),(notMember(H,T),isLocated(H,O,0),'!',weightInObjectAux(T,O,W3),totalWeight(H,W2,_1241,_1242),is(W,'+'(W2,W3))))
weightInObjectAux(_1243,O,0)
':-'(weightOnObjectEquals(O,W),(weightOnObject(_1247,O,W2),'='(W2,W)))
':-'(weightOnObjectAtLeast(O,W),(weightOnObject(_1251,O,W2),'>='(W2,W)))
':-'(weightOnObjectAtMost(O,W),(weightOnObject(_1255,O,W2),'=<'(W2,W)))
':-'(weightInObjectEquals(O,W),(weightInObject(_1259,O,W2),'='(W2,W)))
':-'(weightInObjectAtLeast(O,W),(weightInObject(_1263,O,W2),'>='(W2,W)))
':-'(weightInObjectAtMost(O,W),(weightInObject(_1267,O,W2),'=<'(W2,W)))
':-'(weightOnObjectNotEquals(O,W),(weightOnObject(_1271,O,W2),'\='(W2,W)))
':-'(weightOnObjectTooLow(O,W),(weightOnObject(_1275,O,W2),'<'(W2,W)))
':-'(weightOnObjectTooHigh(O,W),(weightOnObject(_1279,O,W2),'>'(W2,W)))
':-'(weightInObjectNotEquals(O,W),(weightInObject(_1283,O,W2),'\='(W2,W)))
':-'(weightInObjectTooLow(O,W),(weightInObject(_1287,O,W2),'<'(W2,W)))
':-'(weightInObjectTooHigh(O,W),(weightInObject(_1291,O,W2),'>'(W2,W)))
isRoom(ruinsentrance)
isRoom(civilisation)
isRoom(columns)
hasProperty(smallblock,takeable)
hasProperty(smallblock,stable)
hasVariable(smallblock,weight,25)
isObject(smallblock)
volume(smallblock,25)
surface(smallblock,25)
surfaceUsed(smallblock,0)
isRoom(altarroom)
hasProperty(altar,stable)
isObject(altar)
volume(altar,1)
surface(altar,50)
surfaceUsed(altar,0)
isLocated(altar,altarroom,0)
isObject(pressureplate1)
volume(pressureplate1,1)
surface(pressureplate1,50)
isLocated(pressureplate1,altarroom,0)
isObject(pressureplate2)
volume(pressureplate2,1)
surface(pressureplate2,50)
surfaceUsed(pressureplate2,0)
isLocated(pressureplate2,altarroom,0)
hasProperty(watercontainer1,takeable)
hasVariable(watercontainer1,weight,50)
isObject(watercontainer1)
volume(watercontainer1,25)
capacity(watercontainer1,25)
capacityUsed(watercontainer1,0)
isLocated(watercontainer1,pressureplate1,1)
isRoom(treasureroom)
hasProperty(chest,takeable)
hasProperty(chest,closablecontainer)
hasProperty(chest,locked)
hasVariable(chest,weight,25)
isClosed(chest,true)
isObject(chest)
volume(chest,50)
capacity(chest,50)
isLocated(chest,treasureroom,0)
hasProperty(treasure,takeable)
hasVariable(treasure,weight,25)
isObject(treasure)
volume(treasure,50)
isLocated(treasure,chest,0)
isRoom(storageroom)
hasProperty(cupboard,closablecontainer)
hasProperty(cupboard,stable)
isClosed(cupboard,true)
isObject(cupboard)
volume(cupboard,1)
capacity(cupboard,50)
surface(cupboard,50)
surfaceUsed(cupboard,0)
isLocated(cupboard,storageroom,0)
hasProperty(watercontainer2,takeable)
hasVariable(watercontainer2,weight,10)
isObject(watercontainer2)
volume(watercontainer2,25)
capacity(watercontainer2,25)
capacityUsed(watercontainer2,0)
isLocated(watercontainer2,cupboard,0)
hasProperty(plank,takeable)
hasVariable(plank,weight,25)
isObject(plank)
volume(plank,50)
surface(plank,50)
surfaceUsed(plank,0)
isLocated(plank,storageroom,0)
isRoom(attic)
hasProperty(key,takeable)
hasVariable(key,weight,1)
isObject(key)
volume(key,10)
isLocated(key,attic,0)
isRoom(rockytunnel)
hasProperty(mediumblock,takeable)
hasProperty(mediumblock,stable)
hasVariable(mediumblock,weight,50)
isObject(mediumblock)
volume(mediumblock,50)
surface(mediumblock,50)
isRoom(eastriver)
isObject(river)
volume(river,1)
isLocated(river,eastriver,0)
isObject(riversupports)
volume(riversupports,0)
surface(riversupports,50)
surfaceUsed(riversupports,0)
isLocated(riversupports,river,0)
isRoom(waterfallcavern)
isObject(waterfall)
volume(waterfall,1)
below(waterfall,100)
belowUsed(waterfall,0)
isLocated(waterfall,waterfallcavern,0)
isRoom(westriver)
isRoom(ancientquarry)
hasProperty(largeblock,takeable)
hasProperty(largeblock,stable)
hasVariable(largeblock,weight,75)
isObject(largeblock)
volume(largeblock,75)
surface(largeblock,75)
surfaceUsed(largeblock,0)
isLocated(largeblock,ancientquarry,0)
isRoom(deadroom)
surfaceUsed(pressureplate1,25)
capacityUsed(chest,50)
capacityUsed(cupboard,25)
isLocated(player,columns,0)
isLocated(mediumblock,player,0)
capacityUsed(player,-50)
surfaceUsed(mediumblock,25)
isLocated(smallblock,mediumblock,1)

======================================================================================
Processing user input: items
======================================================================================


DEBUG: PRSA: LOOK, PRSO: PLAYER, PRSI: null

DEBUG: ATTEMPT TO PERFORM ACTION ON PRSI

DEBUG: FAILED TO PERFORM ACTION ON PRSI

DEBUG: ATTEMPT TO PERFORM ACTION ON PRSO

DEBUG: FAILED TO PERFORM ACTION ON PRSO

DEBUG: ATTEMPT TO PERFORM GENERIC ACTION ON PRSA
DEBUG: Corrected Verb: look
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [climbableStack(3,storageroom)]

DEBUG: Querying: climbableStack(3,storageroom)
DEBUG: QueryCond not satisfied since query: climbableStack(3,storageroom) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [isLocated(plank,riversupports,1)]

DEBUG: Querying: isLocated(plank,riversupports,1)
DEBUG: QueryCond not satisfied since query: isLocated(plank,riversupports,1) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate1,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate1,50)
DEBUG: Solution: weightOnObjectAtLeast(pressureplate1,50) - bindings: yes.
DEBUG: QueryCond satisfied
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate2,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate2,50)
DEBUG: QueryCond not satisfied since query: weightOnObjectAtLeast(pressureplate2,50) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate1,50), weightOnObjectAtLeast(pressureplate2,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate1,50)
DEBUG: Solution: weightOnObjectAtLeast(pressureplate1,50) - bindings: yes.

DEBUG: Querying: weightOnObjectAtLeast(pressureplate2,50)
DEBUG: QueryCond not satisfied since query: weightOnObjectAtLeast(pressureplate2,50) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [isLocated(treasure,player,0)]

DEBUG: Querying: isLocated(treasure,player,0)
DEBUG: QueryCond not satisfied since query: isLocated(treasure,player,0) has no solutions

Knowledge Base:
':-'(notMember(_1069,[]),'!')
':-'(notMember(X,[Head|Tail]),('\='(X,Head),notMember(X,Tail)))
isObject(player)
capacity(player,2147483647)
':-'(inScope(A),(isObject(A),isLocated(A,B,_1075),isLocated(player,B,_1076),'!'))
':-'(inScope(A),(isObject(A),isLocated(A,B,0),hasProperty(B,closablecontainer),'!',isClosed(B,false),inScope(B)))
':-'(inScope(A),(isObject(A),isLocated(A,B,_1081),inScope(B)))
':-'(putIn(A,B),(inScope(A),inScope(B),'\='(A,B),isLocated(A,C,_1085),'\='(A,C),hasProperty(B,closablecontainer),'!',isClosed(B,false),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putIn(A,B),(inScope(A),inScope(B),'\='(A,B),isLocated(A,C,_1093),'\='(A,C),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putInIgnoreScope(A,B),('\='(A,B),isLocated(A,C,_1101),'\='(A,C),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putOn(A,B),(inScope(A),inScope(B),'\='(A,B),volume(A,X),surface(B,Y),surfaceUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putOnIgnoreScope(A,B),('\='(A,B),volume(A,X),surface(B,Y),surfaceUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putBelow(A,B),(inScope(A),inScope(B),'\='(A,B),volume(A,X),below(B,Y),belowUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putBelowIgnoreScope(A,B),('\='(A,B),volume(A,X),below(B,Y),belowUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(outOfScope(A),not(inScope(A)))
':-'(noCapacity(A),not(capacity(A,_1132)))
':-'(noSurface(A),not(surface(A,_1134)))
':-'(noBelow(A),not(below(A,_1136)))
':-'(cantFitCapacity(A,B),(volume(A,X),capacity(B,Y),capacityUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(cantFitSurface(A,B),(volume(A,X),surface(B,Y),surfaceUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(cantFitBelow(A,B),(volume(A,X),below(B,Y),belowUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(tooBigCapacity(A,B),(volume(A,X),capacity(B,Y),'>'(X,Y)))
':-'(tooBigSurface(A,B),(volume(A,X),surface(B,Y),'>'(X,Y)))
':-'(tooBigBelow(A,B),(volume(A,X),below(B,Y),'>'(X,Y)))
':-'(sameObject(A,B),'='(A,B))
':-'(notObject(A),not(isObject(A)))
':-'(targetClosed(A),(hasProperty(A,closablecontainer),isClosed(A,true)))
':-'(stableStack([O],1,R),(isRoom(R),isObject(O),isLocated(O,R,0),hasProperty(O,stable)))
':-'(stableStack([H1,H2|T],M,R),(isObject(H1),isLocated(H1,H2,1),hasProperty(H1,stable),stableStack([H2|T],N,R),is(M,'+'(N,1))))
':-'(stack([O],1,R),(isRoom(R),isObject(O),isLocated(O,R,0)))
':-'(stack([H1,H2|T],M,R),(isObject(H1),isLocated(H1,H2,1),stack([H2|T],N,R),is(M,'+'(N,1))))
':-'(climbableStack(N,R),stableStack(_1186,N,R))
':-'(notClimbableStackError(N,R),(stack(_1189,N,R),not(climbableStack(N,R))))
':-'(totalWeight(O,W,X,Y),(selfWeight(O,W2),setof(X,isLocated(X,O,0),IN),setof(Y,isLocated(Y,O,1),ON),'!',weightInObject(X,O,W3),weightOnObject(Y,O,W4),is(W,'+'('+'(W2,W3),W4))))
':-'(totalWeight(O,W,X,[]),(selfWeight(O,W2),setof(X,isLocated(X,O,0),IN),'!',weightInObject(X,O,W3),is(W,'+'(W2,W3))))
':-'(totalWeight(O,W,[],Y),(selfWeight(O,W2),setof(Y,isLocated(Y,O,1),ON),'!',weightOnObject(Y,O,W3),is(W,'+'(W2,W3))))
':-'(totalWeight(O,W,[],[]),selfWeight(O,W))
':-'(selfWeight(O,W),hasVariable(O,weight,W))
':-'(selfWeight(O,0),(isObject(O),not(hasVariable(O,weight,W))))
':-'(weightOnObject(L,O,W),(setof(X,isLocated(X,O,1),L),'!',weightOnObjectAux(L,O,W)))
':-'(weightOnObjectAux([H|T],O,W),(notMember(H,T),isLocated(H,O,1),'!',weightOnObjectAux(T,O,W3),totalWeight(H,W2,_1227,_1228),is(W,'+'(W2,W3))))
weightOnObjectAux(_1229,O,0)
':-'(weightInObject(L,O,W),(setof(X,isLocated(X,O,0),L),'!',weightInObjectAux(L,O,W)))
':-'(weightInObjectAux([H|T],O,W),(notMember(H,T),isLocated(H,O,0),'!',weightInObjectAux(T,O,W3),totalWeight(H,W2,_1241,_1242),is(W,'+'(W2,W3))))
weightInObjectAux(_1243,O,0)
':-'(weightOnObjectEquals(O,W),(weightOnObject(_1247,O,W2),'='(W2,W)))
':-'(weightOnObjectAtLeast(O,W),(weightOnObject(_1251,O,W2),'>='(W2,W)))
':-'(weightOnObjectAtMost(O,W),(weightOnObject(_1255,O,W2),'=<'(W2,W)))
':-'(weightInObjectEquals(O,W),(weightInObject(_1259,O,W2),'='(W2,W)))
':-'(weightInObjectAtLeast(O,W),(weightInObject(_1263,O,W2),'>='(W2,W)))
':-'(weightInObjectAtMost(O,W),(weightInObject(_1267,O,W2),'=<'(W2,W)))
':-'(weightOnObjectNotEquals(O,W),(weightOnObject(_1271,O,W2),'\='(W2,W)))
':-'(weightOnObjectTooLow(O,W),(weightOnObject(_1275,O,W2),'<'(W2,W)))
':-'(weightOnObjectTooHigh(O,W),(weightOnObject(_1279,O,W2),'>'(W2,W)))
':-'(weightInObjectNotEquals(O,W),(weightInObject(_1283,O,W2),'\='(W2,W)))
':-'(weightInObjectTooLow(O,W),(weightInObject(_1287,O,W2),'<'(W2,W)))
':-'(weightInObjectTooHigh(O,W),(weightInObject(_1291,O,W2),'>'(W2,W)))
isRoom(ruinsentrance)
isRoom(civilisation)
isRoom(columns)
hasProperty(smallblock,takeable)
hasProperty(smallblock,stable)
hasVariable(smallblock,weight,25)
isObject(smallblock)
volume(smallblock,25)
surface(smallblock,25)
surfaceUsed(smallblock,0)
isRoom(altarroom)
hasProperty(altar,stable)
isObject(altar)
volume(altar,1)
surface(altar,50)
surfaceUsed(altar,0)
isLocated(altar,altarroom,0)
isObject(pressureplate1)
volume(pressureplate1,1)
surface(pressureplate1,50)
isLocated(pressureplate1,altarroom,0)
isObject(pressureplate2)
volume(pressureplate2,1)
surface(pressureplate2,50)
surfaceUsed(pressureplate2,0)
isLocated(pressureplate2,altarroom,0)
hasProperty(watercontainer1,takeable)
hasVariable(watercontainer1,weight,50)
isObject(watercontainer1)
volume(watercontainer1,25)
capacity(watercontainer1,25)
capacityUsed(watercontainer1,0)
isLocated(watercontainer1,pressureplate1,1)
isRoom(treasureroom)
hasProperty(chest,takeable)
hasProperty(chest,closablecontainer)
hasProperty(chest,locked)
hasVariable(chest,weight,25)
isClosed(chest,true)
isObject(chest)
volume(chest,50)
capacity(chest,50)
isLocated(chest,treasureroom,0)
hasProperty(treasure,takeable)
hasVariable(treasure,weight,25)
isObject(treasure)
volume(treasure,50)
isLocated(treasure,chest,0)
isRoom(storageroom)
hasProperty(cupboard,closablecontainer)
hasProperty(cupboard,stable)
isClosed(cupboard,true)
isObject(cupboard)
volume(cupboard,1)
capacity(cupboard,50)
surface(cupboard,50)
surfaceUsed(cupboard,0)
isLocated(cupboard,storageroom,0)
hasProperty(watercontainer2,takeable)
hasVariable(watercontainer2,weight,10)
isObject(watercontainer2)
volume(watercontainer2,25)
capacity(watercontainer2,25)
capacityUsed(watercontainer2,0)
isLocated(watercontainer2,cupboard,0)
hasProperty(plank,takeable)
hasVariable(plank,weight,25)
isObject(plank)
volume(plank,50)
surface(plank,50)
surfaceUsed(plank,0)
isLocated(plank,storageroom,0)
isRoom(attic)
hasProperty(key,takeable)
hasVariable(key,weight,1)
isObject(key)
volume(key,10)
isLocated(key,attic,0)
isRoom(rockytunnel)
hasProperty(mediumblock,takeable)
hasProperty(mediumblock,stable)
hasVariable(mediumblock,weight,50)
isObject(mediumblock)
volume(mediumblock,50)
surface(mediumblock,50)
isRoom(eastriver)
isObject(river)
volume(river,1)
isLocated(river,eastriver,0)
isObject(riversupports)
volume(riversupports,0)
surface(riversupports,50)
surfaceUsed(riversupports,0)
isLocated(riversupports,river,0)
isRoom(waterfallcavern)
isObject(waterfall)
volume(waterfall,1)
below(waterfall,100)
belowUsed(waterfall,0)
isLocated(waterfall,waterfallcavern,0)
isRoom(westriver)
isRoom(ancientquarry)
hasProperty(largeblock,takeable)
hasProperty(largeblock,stable)
hasVariable(largeblock,weight,75)
isObject(largeblock)
volume(largeblock,75)
surface(largeblock,75)
surfaceUsed(largeblock,0)
isLocated(largeblock,ancientquarry,0)
isRoom(deadroom)
surfaceUsed(pressureplate1,25)
capacityUsed(chest,50)
capacityUsed(cupboard,25)
isLocated(player,columns,0)
isLocated(mediumblock,player,0)
capacityUsed(player,-50)
surfaceUsed(mediumblock,25)
isLocated(smallblock,mediumblock,1)
