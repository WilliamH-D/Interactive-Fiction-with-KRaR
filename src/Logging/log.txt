Compiled package: StackableObjects
Compiled package: WeightedObjects

Compiling QueryCond:
Queries: [isLocated(treasure,player,0)]

Compile Room:
ID: RUINSENTRANCE
N: COLUMNS
NCONDS: []
NQUERY: null
NHIDDEN: false
NBLOCKMESSAGE: null
S: CIVILISATION
SCONDS: []
SQUERY: Query: [isLocated(treasure,player,0)]
SHIDDEN: false
SBLOCKMESSAGE: You don't want to return to civilisation without claiming the ancient treasure!
E: null
ECONDS: null
EQUERY: null
EHIDDEN: false
EBLOCKMESSAGE: null
W: ROCKYTUNNEL
WCONDS: []
WQUERY: null
WHIDDEN: false
WBLOCKMESSAGE: null
U: null
UCONDS: null
UQUERY: null
UHIDDEN: false
UBLOCKMESSAGE: null
D: null
DCONDS: null
DQUERY: null
DHIDDEN: false
DBLOCKMESSAGE: null
NAME: Ruin's Entrance
DESC: A newly excavated entrance way to long-lost underground ruins. %nBlinding sunlight streams into the network of caverns, illuminating the crumbling stone and marble structures inside.
SYNS: []
DET: the
INFO: New Room: SimpleEngine.GameRoom@77825085

Compile Room:
ID: CIVILISATION
N: RUINSENTRANCE
NCONDS: []
NQUERY: null
NHIDDEN: false
NBLOCKMESSAGE: null
S: null
SCONDS: null
SQUERY: null
SHIDDEN: false
SBLOCKMESSAGE: null
E: null
ECONDS: null
EQUERY: null
EHIDDEN: false
EBLOCKMESSAGE: null
W: null
WCONDS: null
WQUERY: null
WHIDDEN: false
WBLOCKMESSAGE: null
U: null
UCONDS: null
UQUERY: null
UHIDDEN: false
UBLOCKMESSAGE: null
D: null
DCONDS: null
DQUERY: null
DHIDDEN: false
DBLOCKMESSAGE: null
NAME: Civilisation
DESC: The outside world as you know it.
SYNS: []
DET: 
INFO: New Room: SimpleEngine.GameRoom@18a136ac

Compile Room:
ID: COLUMNS
N: ALTERROOM
NCONDS: []
NQUERY: null
NHIDDEN: false
NBLOCKMESSAGE: null
S: RUINSENTRANCE
SCONDS: []
SQUERY: null
SHIDDEN: false
SBLOCKMESSAGE: null
E: STORAGEROOM
ECONDS: []
EQUERY: null
EHIDDEN: false
EBLOCKMESSAGE: null
W: EASTRIVER
WCONDS: []
WQUERY: null
WHIDDEN: false
WBLOCKMESSAGE: null
U: null
UCONDS: null
UQUERY: null
UHIDDEN: false
UBLOCKMESSAGE: null
D: null
DCONDS: null
DQUERY: null
DHIDDEN: false
DBLOCKMESSAGE: null
NAME: Marble Column-way
DESC: The ornate pathway up to the alter ahead of you is lined with tall marble columns.%nMany of these columns have cracked and crumbled over time.
SYNS: []
DET: the
INFO: New Room: SimpleEngine.GameRoom@77d67cf3

Compile Object:
ID: SMALLBLOCK
LOCATION: COLUMNS
LOCATION TYPE: 0
NAME: small block
DESC: It's a small marble block. It looks as if it fallen from one of the ruined columns.
SYNS: ["little block", "block", "small", "broken column", "little marble block", "smallest block", "small marble block"]
FLAGS: [_TAKEABLE, _STABLE]
VALUES: 
	volume:25
	surface:25
	weight:25
DET: null
USE ARE: false
INFO: New Object: SimpleEngine.GameObject@e8df99a

Compiling QueryCond:
Queries: [weightOnObjectAtLeast(pressureplate1,50), weightOnObjectAtLeast(pressureplate2,50)]

Compiling QueryCond:
Queries: [weightOnObjectAtLeast(pressureplate1,50), weightOnObjectAtLeast(pressureplate2,50)]

Compile Room:
ID: ALTERROOM
N: null
NCONDS: null
NQUERY: null
NHIDDEN: false
NBLOCKMESSAGE: null
S: COLUMNS
SCONDS: []
SQUERY: null
SHIDDEN: false
SBLOCKMESSAGE: null
E: null
ECONDS: null
EQUERY: null
EHIDDEN: false
EBLOCKMESSAGE: null
W: null
WCONDS: null
WQUERY: null
WHIDDEN: false
WBLOCKMESSAGE: null
U: null
UCONDS: null
UQUERY: null
UHIDDEN: false
UBLOCKMESSAGE: null
D: TREASUREROOM
DCONDS: []
DQUERY: Query: [weightOnObjectAtLeast(pressureplate1,50), weightOnObjectAtLeast(pressureplate2,50)]
DHIDDEN: true
DBLOCKMESSAGE: You cannot move down.
NAME: Grand Alter
DESC: At the very end of the temple's long column-way stands a grand alter.
ALTDESC: The alter that once stood here has sunken into the floor, exposing a stairway emanating a soft golden glow...
ALTDESCCONDS: null
ALTDESCQUERY: Query: [weightOnObjectAtLeast(pressureplate1,50), weightOnObjectAtLeast(pressureplate2,50)]
SYNS: []
DET: null
INFO: New Room: SimpleEngine.GameRoom@79d94571

Compiling QueryCond:
Queries: [weightOnObjectAtLeast(pressureplate1,50), weightOnObjectAtLeast(pressureplate2,50)]

Compile Object:
ID: ALTER
LOCATION: ALTERROOM
LOCATION TYPE: 0
NAME: alter
DESC: A grand marble alter rising from the centre of the room. Many ceremonies will have been performed here in ages past.
ALTDESC: The alter is no longer visible as it has retreated into the ground and in its place is a stairway.
ALTDESCCONDS: null
ALTDESCQUERY: Query: [weightOnObjectAtLeast(pressureplate1,50), weightOnObjectAtLeast(pressureplate2,50)]
SYNS: []
FLAGS: [_STABLE]
VALUES: 
	surface:50
DET: null
USE ARE: false
INFO: New Object: SimpleEngine.GameObject@4dd02341

Compile Object:
ID: PRESSUREPLATE2
LOCATION: ALTERROOM
LOCATION TYPE: 0
NAME: right pressure plate
DESC: It's the pressure plate to your right. It needs something heavy placed on top of it to activate.
SYNS: ["right plate", "second plate", "pressure plate", "plate", "plate 2", "other plate", "second pressure plate"]
FLAGS: []
VALUES: 
	surface:50
DET: null
USE ARE: false
INFO: New Object: SimpleEngine.GameObject@3212a8d7

Compile Object:
ID: PRESSUREPLATE1
LOCATION: ALTERROOM
LOCATION TYPE: 0
NAME: left pressure plate
DESC: It's the pressure plate to your left. It needs something heavy placed on top of it to activate.
SYNS: ["first plate", "first pressure plate", "pressure plate", "left plate", "plate", "plate 1"]
FLAGS: []
VALUES: 
	surface:50
DET: null
USE ARE: false
INFO: New Object: SimpleEngine.GameObject@7a1a3478

Compile Object:
ID: WATERCONTAINER1
LOCATION: PRESSUREPLATE1
LOCATION TYPE: 1
NAME: clay pot
DESC: It's an old clay pot that was found holding down a pressure plate.%nIt looks like it would be heavy when filled with water.
ALTDESC: It's an old clay pot that was found holding down a pressure plate.%nIt's filled to the brim with water!
ALTDESCCONDS: [_CONTAINER1FILLED=1]
ALTDESCQUERY: null
SYNS: ["container", "clay container", "pot"]
FLAGS: [_TAKEABLE]
VALUES: 
	volume:25
	weight:5
	capacity:25
DET: null
USE ARE: false
INFO: New Object: SimpleEngine.GameObject@495b0487

Compiling PRSACond:
VERBS: [POUR, SPILL, EMPTY, DROP]

Compiling AndFlagsCond:
FLAGS: [_CONTAINER1FILLED]

Compiling Conditions:
TEST: AndFlags: [_CONTAINER1FILLED]
TES IS NOT: false
CONTINUATION: null
IsAND: true
IsOR: false
INFO: New Conditions: SimpleEngine.Actions.Condition@1852a3ff

Compiling Conditions:
TEST: PRSA: [POUR, SPILL, EMPTY, DROP]
TES IS NOT: false
CONTINUATION: SimpleEngine.Actions.Condition@1852a3ff
IsAND: true
IsOR: false
INFO: New Conditions: SimpleEngine.Actions.Condition@7203c7ff

Compiling RemFlagEff:
FLAG: _CONTAINER1FILLED

Compiling TellEff:
TEXT: The clay pot was emptied of all of its water.

Compiling Conditional:
CONDITION: SimpleEngine.Actions.Condition@7203c7ff
ACTIONS: [SimpleEngine.Actions.Effects.RemFlagEff@71454b9d, SimpleEngine.Actions.Effects.TellEff@eda25e5]
INFO: New Conditional: <PRSA: [POUR, SPILL, EMPTY, DROP] && AndFlags: [_CONTAINER1FILLED]>

Compiling PRSACond:
VERBS: [FILL, PUT]

Compiling AndFlagsCond:
FLAGS: [_CONTAINER1FILLED]

Compiling Conditions:
TEST: AndFlags: [_CONTAINER1FILLED]
TES IS NOT: true
CONTINUATION: null
IsAND: true
IsOR: false
INFO: New Conditions: SimpleEngine.Actions.Condition@623e088f

Compiling Conditions:
TEST: PRSA: [FILL, PUT]
TES IS NOT: false
CONTINUATION: SimpleEngine.Actions.Condition@623e088f
IsAND: true
IsOR: false
INFO: New Conditions: SimpleEngine.Actions.Condition@39fcbef6

Compiling PRSICond:
OBJS: [WATERFALL]

Compiling PRSACond:
VERBS: [UNDER]

Compiling Conditions:
TEST: PRSA: [UNDER]
TES IS NOT: false
CONTINUATION: null
IsAND: true
IsOR: false
INFO: New Conditions: SimpleEngine.Actions.Condition@2fc6f97f

Compiling Conditions:
TEST: PRSI: [WATERFALL]
TES IS NOT: false
CONTINUATION: SimpleEngine.Actions.Condition@2fc6f97f
IsAND: true
IsOR: false
INFO: New Conditions: SimpleEngine.Actions.Condition@3d2ee678

Compiling PlaceEff:
ITEM: WATERCONTAINER1
LOCATION: WATERFALL
LOCATION TYPE: 2

Compiling TellEff:
TEXT: You placed the clay pot under the waterfall. It fills up with water and becomes heavy!

Compiling SetFlagEff:
FLAG: _CONTAINER1FILLED
VALUE: 1

Compiling Conditional:
CONDITION: SimpleEngine.Actions.Condition@3d2ee678
ACTIONS: [SimpleEngine.Actions.Effects.PlaceEff@2d6764b2, SimpleEngine.Actions.Effects.TellEff@67304a40, SimpleEngine.Actions.Effects.SetFlagEff@49c6c24f]
INFO: New Conditional: <PRSI: [WATERFALL] && PRSA: [UNDER]>

Compiling PRSICond:
OBJS: [RIVER, WATERFALL]

Compiling Conditions:
TEST: PRSI: [RIVER, WATERFALL]
TES IS NOT: false
CONTINUATION: null
IsAND: true
IsOR: false
INFO: New Conditions: SimpleEngine.Actions.Condition@6fe1b4fb

Compiling TellEff:
TEXT: You filled the clay pot up with water and it became heavy!

Compiling SetFlagEff:
FLAG: _CONTAINER1FILLED
VALUE: 1

Compiling Conditional:
CONDITION: SimpleEngine.Actions.Condition@6fe1b4fb
ACTIONS: [SimpleEngine.Actions.Effects.TellEff@79351f41, SimpleEngine.Actions.Effects.SetFlagEff@1c32386d]
INFO: New Conditional: <PRSI: [RIVER, WATERFALL]>

Compiling InScopeCond:
OBJ: WATERCONTAINER1
LOCATIONS: [HERE]

Compiling InScopeCond:
OBJ: WATERFALL
LOCATIONS: [HERE]

Compiling Conditions:
TEST: InScope: WATERFALL, [HERE]
TES IS NOT: false
CONTINUATION: null
IsAND: true
IsOR: false
INFO: New Conditions: SimpleEngine.Actions.Condition@5023bb8b

Compiling Conditions:
TEST: InScope: WATERCONTAINER1, [HERE]
TES IS NOT: false
CONTINUATION: SimpleEngine.Actions.Condition@5023bb8b
IsAND: true
IsOR: false
INFO: New Conditions: SimpleEngine.Actions.Condition@5d5f10b2

Compiling TellEff:
TEXT: You filled the clay pot up with water and it became heavy!

Compiling SetFlagEff:
FLAG: _CONTAINER1FILLED
VALUE: 1

Compiling Conditional:
CONDITION: SimpleEngine.Actions.Condition@5d5f10b2
ACTIONS: [SimpleEngine.Actions.Effects.TellEff@74c79fa2, SimpleEngine.Actions.Effects.SetFlagEff@1e0f9063]
INFO: New Conditional: <InScope: WATERCONTAINER1, [HERE] && InScope: WATERFALL, [HERE]>

Compiling InScopeCond:
OBJ: WATERCONTAINER1
LOCATIONS: [HERE]

Compiling InScopeCond:
OBJ: RIVER
LOCATIONS: [HERE]

Compiling Conditions:
TEST: InScope: RIVER, [HERE]
TES IS NOT: false
CONTINUATION: null
IsAND: true
IsOR: false
INFO: New Conditions: SimpleEngine.Actions.Condition@53bd8fca

Compiling Conditions:
TEST: InScope: WATERCONTAINER1, [HERE]
TES IS NOT: false
CONTINUATION: SimpleEngine.Actions.Condition@53bd8fca
IsAND: true
IsOR: false
INFO: New Conditions: SimpleEngine.Actions.Condition@7642df8f

Compiling TellEff:
TEXT: You filled the clay pot up with water and it became heavy!

Compiling SetFlagEff:
FLAG: _CONTAINER1FILLED
VALUE: 1

Compiling Conditional:
CONDITION: SimpleEngine.Actions.Condition@7642df8f
ACTIONS: [SimpleEngine.Actions.Effects.TellEff@3e30646a, SimpleEngine.Actions.Effects.SetFlagEff@5cde6747]
INFO: New Conditional: <InScope: WATERCONTAINER1, [HERE] && InScope: RIVER, [HERE]>

Compiling Conditional:
CONDITION: SimpleEngine.Actions.Condition@39fcbef6
ACTIONS: [<PRSI: [WATERFALL] && PRSA: [UNDER]>, <PRSI: [RIVER, WATERFALL]>, <InScope: WATERCONTAINER1, [HERE] && InScope: WATERFALL, [HERE]>, <InScope: WATERCONTAINER1, [HERE] && InScope: RIVER, [HERE]>]
INFO: New Conditional: <PRSA: [FILL, PUT] && !AndFlags: [_CONTAINER1FILLED]>

Compile Action:
ID: WATERCONTAINER1
ACTIONS: [<PRSA: [POUR, SPILL, EMPTY, DROP] && AndFlags: [_CONTAINER1FILLED]>, <PRSA: [FILL, PUT] && !AndFlags: [_CONTAINER1FILLED]>]

Compile Flag:
FLAG: _CONTAINER1FILLED
VALUE: 1

Compile Room:
ID: TREASUREROOM
N: null
NCONDS: null
NQUERY: null
NHIDDEN: false
NBLOCKMESSAGE: null
S: null
SCONDS: null
SQUERY: null
SHIDDEN: false
SBLOCKMESSAGE: null
E: null
ECONDS: null
EQUERY: null
EHIDDEN: false
EBLOCKMESSAGE: null
W: null
WCONDS: null
WQUERY: null
WHIDDEN: false
WBLOCKMESSAGE: null
U: ALTERROOM
UCONDS: []
UQUERY: null
UHIDDEN: false
UBLOCKMESSAGE: null
D: null
DCONDS: null
DQUERY: null
DHIDDEN: false
DBLOCKMESSAGE: null
NAME: Treasure Room
DESC: Dazzling golden walls surround the room, the faces of ancient deities etched into each one!
SYNS: []
DET: the
INFO: New Room: SimpleEngine.GameRoom@3ed242a4

Compile Object:
ID: CHEST
LOCATION: TREASUREROOM
LOCATION TYPE: 0
NAME: treasure chest
DESC: A golden treasure chest studded with rubies and emeralds.
SYNS: ["box", "chest"]
FLAGS: [_TAKEABLE, _CLOSABLECONTAINER, _LOCKED]
VALUES: 
	volume:50
	weight:25
	capacity:50
DET: null
USE ARE: false
INFO: New Object: SimpleEngine.GameObject@1199fe66

Compiling PRSACond:
VERBS: [UNLOCK]

Compiling AndPropertiesCond:
OBJECT: CHEST
PROPERTIES: [_LOCKED]

Compiling HaveItemCond:
OBJS: [KEY]

Compiling Conditions:
TEST: HaveItem: [KEY]
TES IS NOT: false
CONTINUATION: null
IsAND: true
IsOR: false
INFO: New Conditions: SimpleEngine.Actions.Condition@2d96543c

Compiling Conditions:
TEST: AndProperties: CHEST, [_LOCKED]
TES IS NOT: false
CONTINUATION: SimpleEngine.Actions.Condition@2d96543c
IsAND: true
IsOR: false
INFO: New Conditions: SimpleEngine.Actions.Condition@73a2e526

Compiling Conditions:
TEST: PRSA: [UNLOCK]
TES IS NOT: false
CONTINUATION: SimpleEngine.Actions.Condition@73a2e526
IsAND: true
IsOR: false
INFO: New Conditions: SimpleEngine.Actions.Condition@7d64e326

Compiling RemovePropertyEff:
ITEM: CHEST
PROPERTY: _LOCKED

Compiling TellEff:
TEXT: 'CLICK' - The golden chest was unlocked!

Compiling Conditional:
CONDITION: SimpleEngine.Actions.Condition@7d64e326
ACTIONS: [SimpleEngine.Actions.Effects.RemovePropertyEff@cd1d761, SimpleEngine.Actions.Effects.TellEff@68be8808]
INFO: New Conditional: <PRSA: [UNLOCK] && AndProperties: CHEST, [_LOCKED] && HaveItem: [KEY]>

Compiling PRSACond:
VERBS: [LOCK]

Compiling AndPropertiesCond:
OBJECT: CHEST
PROPERTIES: [_LOCKED]

Compiling HaveItemCond:
OBJS: [KEY]

Compiling Conditions:
TEST: HaveItem: [KEY]
TES IS NOT: false
CONTINUATION: null
IsAND: true
IsOR: false
INFO: New Conditions: SimpleEngine.Actions.Condition@32193bea

Compiling Conditions:
TEST: AndProperties: CHEST, [_LOCKED]
TES IS NOT: true
CONTINUATION: SimpleEngine.Actions.Condition@32193bea
IsAND: true
IsOR: false
INFO: New Conditions: SimpleEngine.Actions.Condition@6b8d96d9

Compiling Conditions:
TEST: PRSA: [LOCK]
TES IS NOT: false
CONTINUATION: SimpleEngine.Actions.Condition@6b8d96d9
IsAND: true
IsOR: false
INFO: New Conditions: SimpleEngine.Actions.Condition@69653e16

Compiling EqualsCond:
LEFT OBJ: CHEST
RIGHT OBJ: CHEST
LHS: isClosed
RHS: isClosed
BOTH VARS: false

Compiling Conditions:
TEST: Equals: CHEST, isClosed, CHEST, TRUE
TES IS NOT: false
CONTINUATION: null
IsAND: true
IsOR: false
INFO: New Conditions: SimpleEngine.Actions.Condition@33b1c5c5

Compiling AddPropertyEff:
ITEM: CHEST
PROPERTY: _LOCKED

Compiling TellEff:
TEXT: You locked the golden chest.

Compiling Conditional:
CONDITION: SimpleEngine.Actions.Condition@33b1c5c5
ACTIONS: [SimpleEngine.Actions.Effects.AddPropertyEff@10b9db7b, SimpleEngine.Actions.Effects.TellEff@9ef8eb7]
INFO: New Conditional: <Equals: CHEST, isClosed, CHEST, TRUE>

Compiling EqualsCond:
LEFT OBJ: CHEST
RIGHT OBJ: CHEST
LHS: isClosed
RHS: isClosed
BOTH VARS: false

Compiling Conditions:
TEST: Equals: CHEST, isClosed, CHEST, FALSE
TES IS NOT: false
CONTINUATION: null
IsAND: true
IsOR: false
INFO: New Conditions: SimpleEngine.Actions.Condition@34cdeda2

Compiling TellEff:
TEXT: You can't lock the chest when it's open.

Compiling Conditional:
CONDITION: SimpleEngine.Actions.Condition@34cdeda2
ACTIONS: [SimpleEngine.Actions.Effects.TellEff@6ee660fb]
INFO: New Conditional: <Equals: CHEST, isClosed, CHEST, FALSE>

Compiling Conditional:
CONDITION: SimpleEngine.Actions.Condition@69653e16
ACTIONS: [<Equals: CHEST, isClosed, CHEST, TRUE>, <Equals: CHEST, isClosed, CHEST, FALSE>]
INFO: New Conditional: <PRSA: [LOCK] && !AndProperties: CHEST, [_LOCKED] && HaveItem: [KEY]>

Compile Action:
ID: CHEST
ACTIONS: [<PRSA: [UNLOCK] && AndProperties: CHEST, [_LOCKED] && HaveItem: [KEY]>, <PRSA: [LOCK] && !AndProperties: CHEST, [_LOCKED] && HaveItem: [KEY]>]

Compile Object:
ID: TREASURE
LOCATION: CHEST
LOCATION TYPE: 0
NAME: treasure
DESC: All the riches you could ever dream of! Sparkling jewels, shining gold, glowing rubies, and more!
SYNS: []
FLAGS: [_TAKEABLE]
VALUES: 
	volume:50
	weight:25
DET: null
USE ARE: false
INFO: New Object: SimpleEngine.GameObject@305a0c5f

Compiling QueryCond:
Queries: [climbableStack(3,storageroom)]

Compile Room:
ID: STORAGEROOM
N: null
NCONDS: null
NQUERY: null
NHIDDEN: false
NBLOCKMESSAGE: null
S: null
SCONDS: null
SQUERY: null
SHIDDEN: false
SBLOCKMESSAGE: null
E: null
ECONDS: null
EQUERY: null
EHIDDEN: false
EBLOCKMESSAGE: null
W: COLUMNS
WCONDS: []
WQUERY: null
WHIDDEN: false
WBLOCKMESSAGE: null
U: ATTIC
UCONDS: []
UQUERY: Query: [climbableStack(3,storageroom)]
UHIDDEN: false
UBLOCKMESSAGE: There's nothing tall and stable enough for you to climb on to reach the attic.
D: null
DCONDS: null
DQUERY: null
DHIDDEN: false
DBLOCKMESSAGE: null
NAME: Storage Room
DESC: This room looks like it was used to store things. There is all sorts of wood and degraded items lying about.
SYNS: []
DET: null
INFO: New Room: SimpleEngine.GameRoom@4535b6d5

Compile Object:
ID: CUPBOARD
LOCATION: STORAGEROOM
LOCATION TYPE: 0
NAME: cupboard
DESC: An old marble cupboard. It's amazing that the thin stone door still slides open and shut!
SYNS: ["compartment", "counter", "surface"]
FLAGS: [_CLOSABLECONTAINER, _STABLE]
VALUES: 
	surface:50
	capacity:50
DET: null
USE ARE: false
INFO: New Object: SimpleEngine.GameObject@1ecee32c

Compile Object:
ID: WATERCONTAINER2
LOCATION: CUPBOARD
LOCATION TYPE: 0
NAME: copper jug
DESC: It's an old copper jug. It's colouration has slowly turned mint green over time.%nIt looks like it would be heavy when filled with water.
ALTDESC: It's an old copper jug. It's colouration has slowly turned mint green over time.%nIt's filled to the brim with water!
ALTDESCCONDS: [_CONTAINER2FILLED=1]
ALTDESCQUERY: null
SYNS: ["copper container", "jug", "container"]
FLAGS: [_TAKEABLE]
VALUES: 
	volume:25
	weight:5
	capacity:25
DET: null
USE ARE: false
INFO: New Object: SimpleEngine.GameObject@4372b9b6

Compiling PRSACond:
VERBS: [POUR, SPILL, EMPTY, DROP]

Compiling AndFlagsCond:
FLAGS: [_CONTAINER2FILLED]

Compiling Conditions:
TEST: AndFlags: [_CONTAINER2FILLED]
TES IS NOT: false
CONTINUATION: null
IsAND: true
IsOR: false
INFO: New Conditions: SimpleEngine.Actions.Condition@232a7d73

Compiling Conditions:
TEST: PRSA: [POUR, SPILL, EMPTY, DROP]
TES IS NOT: false
CONTINUATION: SimpleEngine.Actions.Condition@232a7d73
IsAND: true
IsOR: false
INFO: New Conditions: SimpleEngine.Actions.Condition@4b41e4dd

Compiling RemFlagEff:
FLAG: _CONTAINER2FILLED

Compiling TellEff:
TEXT: The copper jug was emptied of all of its water.

Compiling Conditional:
CONDITION: SimpleEngine.Actions.Condition@4b41e4dd
ACTIONS: [SimpleEngine.Actions.Effects.RemFlagEff@22ffa91a, SimpleEngine.Actions.Effects.TellEff@74960bfa]
INFO: New Conditional: <PRSA: [POUR, SPILL, EMPTY, DROP] && AndFlags: [_CONTAINER2FILLED]>

Compiling PRSACond:
VERBS: [FILL, PUT]

Compiling AndFlagsCond:
FLAGS: [_CONTAINER2FILLED]

Compiling Conditions:
TEST: AndFlags: [_CONTAINER2FILLED]
TES IS NOT: true
CONTINUATION: null
IsAND: true
IsOR: false
INFO: New Conditions: SimpleEngine.Actions.Condition@42721fe

Compiling Conditions:
TEST: PRSA: [FILL, PUT]
TES IS NOT: false
CONTINUATION: SimpleEngine.Actions.Condition@42721fe
IsAND: true
IsOR: false
INFO: New Conditions: SimpleEngine.Actions.Condition@40844aab

Compiling PRSICond:
OBJS: [WATERFALL]

Compiling PRSACond:
VERBS: [UNDER]

Compiling Conditions:
TEST: PRSA: [UNDER]
TES IS NOT: false
CONTINUATION: null
IsAND: true
IsOR: false
INFO: New Conditions: SimpleEngine.Actions.Condition@1f6c9cd8

Compiling Conditions:
TEST: PRSI: [WATERFALL]
TES IS NOT: false
CONTINUATION: SimpleEngine.Actions.Condition@1f6c9cd8
IsAND: true
IsOR: false
INFO: New Conditions: SimpleEngine.Actions.Condition@5b619d14

Compiling PlaceEff:
ITEM: WATERCONTAINER2
LOCATION: WATERFALL
LOCATION TYPE: 2

Compiling TellEff:
TEXT: You placed the copper jug under the waterfall. It fills up with water and becomes heavy!

Compiling SetFlagEff:
FLAG: _CONTAINER2FILLED
VALUE: 1

Compiling Conditional:
CONDITION: SimpleEngine.Actions.Condition@5b619d14
ACTIONS: [SimpleEngine.Actions.Effects.PlaceEff@66746f57, SimpleEngine.Actions.Effects.TellEff@447a020, SimpleEngine.Actions.Effects.SetFlagEff@7f36662c]
INFO: New Conditional: <PRSI: [WATERFALL] && PRSA: [UNDER]>

Compiling PRSICond:
OBJS: [RIVER, WATERFALL]

Compiling Conditions:
TEST: PRSI: [RIVER, WATERFALL]
TES IS NOT: false
CONTINUATION: null
IsAND: true
IsOR: false
INFO: New Conditions: SimpleEngine.Actions.Condition@28e8dde3

Compiling TellEff:
TEXT: You filled the copper jug up with water and it became heavy!

Compiling SetFlagEff:
FLAG: _CONTAINER2FILLED
VALUE: 1

Compiling Conditional:
CONDITION: SimpleEngine.Actions.Condition@28e8dde3
ACTIONS: [SimpleEngine.Actions.Effects.TellEff@6d23017e, SimpleEngine.Actions.Effects.SetFlagEff@54dcfa5a]
INFO: New Conditional: <PRSI: [RIVER, WATERFALL]>

Compiling InScopeCond:
OBJ: WATERCONTAINER2
LOCATIONS: [HERE]

Compiling InScopeCond:
OBJ: WATERFALL
LOCATIONS: [HERE]

Compiling Conditions:
TEST: InScope: WATERFALL, [HERE]
TES IS NOT: false
CONTINUATION: null
IsAND: true
IsOR: false
INFO: New Conditions: SimpleEngine.Actions.Condition@1817f1eb

Compiling Conditions:
TEST: InScope: WATERCONTAINER2, [HERE]
TES IS NOT: false
CONTINUATION: SimpleEngine.Actions.Condition@1817f1eb
IsAND: true
IsOR: false
INFO: New Conditions: SimpleEngine.Actions.Condition@767e20cf

Compiling TellEff:
TEXT: You filled the copper jug up with water and it became heavy!

Compiling SetFlagEff:
FLAG: _CONTAINER2FILLED
VALUE: 1

Compiling Conditional:
CONDITION: SimpleEngine.Actions.Condition@767e20cf
ACTIONS: [SimpleEngine.Actions.Effects.TellEff@3a3e78f, SimpleEngine.Actions.Effects.SetFlagEff@301ec38b]
INFO: New Conditional: <InScope: WATERCONTAINER2, [HERE] && InScope: WATERFALL, [HERE]>

Compiling InScopeCond:
OBJ: WATERCONTAINER2
LOCATIONS: [HERE]

Compiling InScopeCond:
OBJ: RIVER
LOCATIONS: [HERE]

Compiling Conditions:
TEST: InScope: RIVER, [HERE]
TES IS NOT: false
CONTINUATION: null
IsAND: true
IsOR: false
INFO: New Conditions: SimpleEngine.Actions.Condition@17a1e4ca

Compiling Conditions:
TEST: InScope: WATERCONTAINER2, [HERE]
TES IS NOT: false
CONTINUATION: SimpleEngine.Actions.Condition@17a1e4ca
IsAND: true
IsOR: false
INFO: New Conditions: SimpleEngine.Actions.Condition@10ded6a9

Compiling TellEff:
TEXT: You filled the copper jug up with water and it became heavy!

Compiling SetFlagEff:
FLAG: _CONTAINER2FILLED
VALUE: 1

Compiling Conditional:
CONDITION: SimpleEngine.Actions.Condition@10ded6a9
ACTIONS: [SimpleEngine.Actions.Effects.TellEff@c5dc4a2, SimpleEngine.Actions.Effects.SetFlagEff@4a194c39]
INFO: New Conditional: <InScope: WATERCONTAINER2, [HERE] && InScope: RIVER, [HERE]>

Compiling Conditional:
CONDITION: SimpleEngine.Actions.Condition@40844aab
ACTIONS: [<PRSI: [WATERFALL] && PRSA: [UNDER]>, <PRSI: [RIVER, WATERFALL]>, <InScope: WATERCONTAINER2, [HERE] && InScope: WATERFALL, [HERE]>, <InScope: WATERCONTAINER2, [HERE] && InScope: RIVER, [HERE]>]
INFO: New Conditional: <PRSA: [FILL, PUT] && !AndFlags: [_CONTAINER2FILLED]>

Compile Action:
ID: WATERCONTAINER2
ACTIONS: [<PRSA: [POUR, SPILL, EMPTY, DROP] && AndFlags: [_CONTAINER2FILLED]>, <PRSA: [FILL, PUT] && !AndFlags: [_CONTAINER2FILLED]>]

Compile Flag:
FLAG: _CONTAINER2FILLED
VALUE: 0

Compile Object:
ID: PLANK
LOCATION: STORAGEROOM
LOCATION TYPE: 0
NAME: wooden plank
DESC: A long wooden plank that has somehow managed to avoid rotting away.%nIt looks sturdy enough to be used as a bridge.
SYNS: ["plank", "log", "wood", "bridge"]
FLAGS: [_TAKEABLE]
VALUES: 
	volume:50
	surface:50
	weight:25
DET: null
USE ARE: false
INFO: New Object: SimpleEngine.GameObject@52066604

Compiling PRSACond:
VERBS: [PLACE, PUT]

Compiling PRSOCond:
OBJS: [PLANK]

Compiling PRSICond:
OBJS: [RIVER]

Compiling Conditions:
TEST: PRSI: [RIVER]
TES IS NOT: false
CONTINUATION: null
IsAND: true
IsOR: false
INFO: New Conditions: SimpleEngine.Actions.Condition@56113384

Compiling Conditions:
TEST: PRSO: [PLANK]
TES IS NOT: false
CONTINUATION: SimpleEngine.Actions.Condition@56113384
IsAND: true
IsOR: false
INFO: New Conditions: SimpleEngine.Actions.Condition@5669c5fb

Compiling Conditions:
TEST: PRSA: [PLACE, PUT]
TES IS NOT: false
CONTINUATION: SimpleEngine.Actions.Condition@5669c5fb
IsAND: true
IsOR: false
INFO: New Conditions: SimpleEngine.Actions.Condition@373ebf74

Compiling PlaceEff:
ITEM: PLANK
LOCATION: RIVERSTILTS
LOCATION TYPE: 1

Compiling Conditional:
CONDITION: SimpleEngine.Actions.Condition@373ebf74
ACTIONS: [SimpleEngine.Actions.Effects.PlaceEff@5f9678e1]
INFO: New Conditional: <PRSA: [PLACE, PUT] && PRSO: [PLANK] && PRSI: [RIVER]>

Compiling PRSACond:
VERBS: [FORM, MAKE]

Compiling PRSOCond:
OBJS: [PLANK]

Compiling HereCond:
LOCATIONS: [EASTRIVER]

Compiling Conditions:
TEST: Here: [EASTRIVER]
TES IS NOT: false
CONTINUATION: null
IsAND: true
IsOR: false
INFO: New Conditions: SimpleEngine.Actions.Condition@189aa67a

Compiling Conditions:
TEST: PRSO: [PLANK]
TES IS NOT: false
CONTINUATION: SimpleEngine.Actions.Condition@189aa67a
IsAND: true
IsOR: false
INFO: New Conditions: SimpleEngine.Actions.Condition@5a9d6f02

Compiling Conditions:
TEST: PRSA: [FORM, MAKE]
TES IS NOT: false
CONTINUATION: SimpleEngine.Actions.Condition@5a9d6f02
IsAND: true
IsOR: false
INFO: New Conditions: SimpleEngine.Actions.Condition@362045c0

Compiling PlaceEff:
ITEM: PLANK
LOCATION: RIVERSTILTS
LOCATION TYPE: 1

Compiling Conditional:
CONDITION: SimpleEngine.Actions.Condition@362045c0
ACTIONS: [SimpleEngine.Actions.Effects.PlaceEff@112f364d]
INFO: New Conditional: <PRSA: [FORM, MAKE] && PRSO: [PLANK] && Here: [EASTRIVER]>

Compile Action:
ID: PLANK
ACTIONS: [<PRSA: [PLACE, PUT] && PRSO: [PLANK] && PRSI: [RIVER]>, <PRSA: [FORM, MAKE] && PRSO: [PLANK] && Here: [EASTRIVER]>]

Compile Room:
ID: ATTIC
N: null
NCONDS: null
NQUERY: null
NHIDDEN: false
NBLOCKMESSAGE: null
S: null
SCONDS: null
SQUERY: null
SHIDDEN: false
SBLOCKMESSAGE: null
E: null
ECONDS: null
EQUERY: null
EHIDDEN: false
EBLOCKMESSAGE: null
W: null
WCONDS: null
WQUERY: null
WHIDDEN: false
WBLOCKMESSAGE: null
U: null
UCONDS: null
UQUERY: null
UHIDDEN: false
UBLOCKMESSAGE: null
D: STORAGEROOM
DCONDS: []
DQUERY: null
DHIDDEN: false
DBLOCKMESSAGE: null
NAME: Attic
DESC: A musty room above the storage room. A few small things are scattered around amongst all of the rubble, dust, and cobwebs.
SYNS: []
DET: null
INFO: New Room: SimpleEngine.GameRoom@5ccbeb64

Compile Object:
ID: KEY
LOCATION: ATTIC
LOCATION TYPE: 0
NAME: golden key
DESC: An old ornate golden key. It looks important.
SYNS: ["key"]
FLAGS: [_TAKEABLE]
VALUES: 
	volume:10
	weight:1
DET: null
USE ARE: false
INFO: New Object: SimpleEngine.GameObject@6d9f7a80

Compile Room:
ID: ROCKYTUNNEL
N: EASTRIVER
NCONDS: []
NQUERY: null
NHIDDEN: false
NBLOCKMESSAGE: null
S: null
SCONDS: null
SQUERY: null
SHIDDEN: false
SBLOCKMESSAGE: null
E: RUINSENTRANCE
ECONDS: []
EQUERY: null
EHIDDEN: false
EBLOCKMESSAGE: null
W: null
WCONDS: null
WQUERY: null
WHIDDEN: false
WBLOCKMESSAGE: null
U: null
UCONDS: null
UQUERY: null
UHIDDEN: false
UBLOCKMESSAGE: null
D: null
DCONDS: null
DQUERY: null
DHIDDEN: false
DBLOCKMESSAGE: null
NAME: Rocky Tunnel
DESC: This claustrophobic tunnel is littered with rocks and boulders.
SYNS: []
DET: null
INFO: New Room: SimpleEngine.GameRoom@59252cb6

Compile Object:
ID: MEDIUMBLOCK
LOCATION: ROCKYTUNNEL
LOCATION TYPE: 0
NAME: medium block
DESC: It's a medium sized block of rock. This boulder looks as if it collapsed from the walls of the rocky tunnel, perhaps it could be used as a building block to climb on.
SYNS: ["medium", "medium boulder", "boulder", "block", "medium block", "rock block"]
FLAGS: [_TAKEABLE, _STABLE]
VALUES: 
	volume:50
	surface:50
	weight:50
DET: null
USE ARE: false
INFO: New Object: SimpleEngine.GameObject@31d0e481

Compiling QueryCond:
Queries: [isLocated(plank,riverstilts,1)]

Compile Room:
ID: EASTRIVER
N: WATERFALLCAVERN
NCONDS: []
NQUERY: null
NHIDDEN: false
NBLOCKMESSAGE: null
S: ROCKYTUNNEL
SCONDS: []
SQUERY: null
SHIDDEN: false
SBLOCKMESSAGE: null
E: COLUMNS
ECONDS: []
EQUERY: null
EHIDDEN: false
EBLOCKMESSAGE: null
W: WESTRIVER
WCONDS: []
WQUERY: Query: [isLocated(plank,riverstilts,1)]
WHIDDEN: false
WBLOCKMESSAGE: The river is flowing too rapidly to safely cross without some sort of bridge!
U: null
UCONDS: null
UQUERY: null
UHIDDEN: false
UBLOCKMESSAGE: null
D: null
DCONDS: null
DQUERY: null
DHIDDEN: false
DBLOCKMESSAGE: null
NAME: East River Cavern
DESC: The east side of the river. Rotten wooden stilts extend across the river as if there used to be a bridge here in the distant past
SYNS: []
DET: the
INFO: New Room: SimpleEngine.GameRoom@3243b914

Compile Object:
ID: RIVER
LOCATION: EASTRIVER
LOCATION TYPE: 0
NAME: river
DESC: A fast flowing river snaking it's way through the expansive caverns.%nMost of this cave system would have been forged by this gushing torrent over time.
SYNS: ["torrent", "rapids", "water"]
FLAGS: []
VALUES: 
	capacity:0
DET: null
USE ARE: false
INFO: New Object: SimpleEngine.GameObject@241e8ea6

Compile Object:
ID: RIVERSTILTS
LOCATION: RIVER
LOCATION TYPE: 0
NAME: stilts
DESC: Rotting wooden stilts that extend across the river. This suggests a bridge existed here once.
SYNS: []
FLAGS: []
VALUES: 
	volume:0
	surface:50
DET: some
USE ARE: true
INFO: New Object: SimpleEngine.GameObject@542e560f

Compile Room:
ID: WATERFALLCAVERN
N: null
NCONDS: null
NQUERY: null
NHIDDEN: false
NBLOCKMESSAGE: null
S: EASTRIVER
SCONDS: []
SQUERY: null
SHIDDEN: false
SBLOCKMESSAGE: null
E: ALTERROOM
ECONDS: []
EQUERY: null
EHIDDEN: false
EBLOCKMESSAGE: null
W: null
WCONDS: null
WQUERY: null
WHIDDEN: false
WBLOCKMESSAGE: null
U: null
UCONDS: null
UQUERY: null
UHIDDEN: false
UBLOCKMESSAGE: null
D: null
DCONDS: null
DQUERY: null
DHIDDEN: false
DBLOCKMESSAGE: null
NAME: Waterfall Cavern
DESC: A roaring waterfall is cascading down into this spacious cavern. A river stretches south from its base.
SYNS: []
DET: null
INFO: New Room: SimpleEngine.GameRoom@626c44e7

Compile Object:
ID: WATERFALL
LOCATION: WATERFALLCAVERN
LOCATION TYPE: 0
NAME: waterfall
DESC: The sound of the roaring waterfall echoes throughout the cavern. It feeds into the river flowing southward.
SYNS: ["fall"]
FLAGS: []
VALUES: 
	below:100
DET: null
USE ARE: false
INFO: New Object: SimpleEngine.GameObject@4dc8caa7

Compiling QueryCond:
Queries: [isLocated(plank,riverstilts,1)]

Compile Room:
ID: WESTRIVER
N: ANCIENTQUARRY
NCONDS: []
NQUERY: null
NHIDDEN: false
NBLOCKMESSAGE: null
S: null
SCONDS: null
SQUERY: null
SHIDDEN: false
SBLOCKMESSAGE: null
E: EASTRIVER
ECONDS: []
EQUERY: Query: [isLocated(plank,riverstilts,1)]
EHIDDEN: false
EBLOCKMESSAGE: The river is flowing too rapidly to safely cross without some sort of bridge!
W: null
WCONDS: null
WQUERY: null
WHIDDEN: false
WBLOCKMESSAGE: null
U: null
UCONDS: null
UQUERY: null
UHIDDEN: false
UBLOCKMESSAGE: null
D: null
DCONDS: null
DQUERY: null
DHIDDEN: false
DBLOCKMESSAGE: null
NAME: West River Cavern
DESC: This large cavern is split in two by the fast-flowing river. Massive Stalactites extend down from the roof of the cavern. Hopefully they don't fall...
SYNS: []
DET: the
INFO: New Room: SimpleEngine.GameRoom@1d730606

Compile Room:
ID: ANCIENTQUARRY
N: null
NCONDS: null
NQUERY: null
NHIDDEN: false
NBLOCKMESSAGE: null
S: WESTRIVER
SCONDS: []
SQUERY: null
SHIDDEN: false
SBLOCKMESSAGE: null
E: null
ECONDS: null
EQUERY: null
EHIDDEN: false
EBLOCKMESSAGE: null
W: null
WCONDS: null
WQUERY: null
WHIDDEN: false
WBLOCKMESSAGE: null
U: null
UCONDS: null
UQUERY: null
UHIDDEN: false
UBLOCKMESSAGE: null
D: null
DCONDS: null
DQUERY: null
DHIDDEN: false
DBLOCKMESSAGE: null
NAME: Ancient Quarry
DESC: This seems to be where all of the marble and stone for the underground temple was excavated from. There is still a lot of stone lying about.
SYNS: []
DET: null
INFO: New Room: SimpleEngine.GameRoom@3bcbb589

Compile Object:
ID: LARGEBLOCK
LOCATION: ANCIENTQUARRY
LOCATION TYPE: 0
NAME: large block
DESC: A massive marble block that never ended up leaving the quarry. It's a miracle you're able to even lift this thing!
SYNS: ["large block", "large marble block", "large", "block", "biggest block", "big block", "big", "big marble block"]
FLAGS: [_TAKEABLE, _STABLE]
VALUES: 
	volume:75
	surface:75
	weight:75
DET: null
USE ARE: false
INFO: New Object: SimpleEngine.GameObject@3b00856b

Compiling QueryCond:
Queries: [climbableStack(3,storageroom)]

Compiling TellEff:
TEXT: With all three blocks stacked on top of one another, you should be able to climb up to the attic above you!

Compiling TellEff:
TEXT: You're now unable to climb up to reach the attic.

DEBUG: Compiling EndCheck:
DEBUG: Queries: [Query: [climbableStack(3,storageroom)]]
DEBUG: ifEffects: [SimpleEngine.Actions.Effects.TellEff@53d102a2]
DEBUG: elseEffects: [SimpleEngine.Actions.Effects.TellEff@6c45ee6e]

Compiling QueryCond:
Queries: [isLocated(plank,riverstilts,1)]

Compiling TellEff:
TEXT: Using the plank as a makeshift bridge, you can now safely cross!

Compiling TellEff:
TEXT: Without the plank, you can no longer cross the river safely.

DEBUG: Compiling EndCheck:
DEBUG: Queries: [Query: [isLocated(plank,riverstilts,1)]]
DEBUG: ifEffects: [SimpleEngine.Actions.Effects.TellEff@6b3e12b5]
DEBUG: elseEffects: [SimpleEngine.Actions.Effects.TellEff@5aac4250]

Compiling QueryCond:
Queries: [weightOnObjectAtLeast(pressureplate1,50)]

Compiling TellEff:
TEXT: You hear a rumble as the pressure plate clicks into place.

Compiling TellEff:
TEXT: The Pressure plate clicks as it lift back up.

DEBUG: Compiling EndCheck:
DEBUG: Queries: [Query: [weightOnObjectAtLeast(pressureplate1,50)]]
DEBUG: ifEffects: [SimpleEngine.Actions.Effects.TellEff@1338fb5]
DEBUG: elseEffects: [SimpleEngine.Actions.Effects.TellEff@42463763]

Compiling QueryCond:
Queries: [weightOnObjectAtLeast(pressureplate2,50)]

Compiling TellEff:
TEXT: You hear a rumble as the pressure plate clicks into place.

Compiling TellEff:
TEXT: The Pressure plate clicks as it lift back up.

DEBUG: Compiling EndCheck:
DEBUG: Queries: [Query: [weightOnObjectAtLeast(pressureplate2,50)]]
DEBUG: ifEffects: [SimpleEngine.Actions.Effects.TellEff@59f63e24]
DEBUG: elseEffects: [SimpleEngine.Actions.Effects.TellEff@61f05988]

Compiling QueryCond:
Queries: [weightOnObjectAtLeast(pressureplate1,50), weightOnObjectAtLeast(pressureplate2,50)]

Compiling TellEff:
TEXT: You hear a loud rumbling as the alter before you lowers into the ground and reveals a hidden stairway...

Compiling TellEff:
TEXT: The alter rises back up from the floor and hides the secret stairway.

DEBUG: Compiling EndCheck:
DEBUG: Queries: [Query: [weightOnObjectAtLeast(pressureplate1,50), weightOnObjectAtLeast(pressureplate2,50)]]
DEBUG: ifEffects: [SimpleEngine.Actions.Effects.TellEff@7ca33c24]
DEBUG: elseEffects: [SimpleEngine.Actions.Effects.TellEff@fade1fc]

Compiling QueryCond:
Queries: [isLocated(treasure,player,1)]

Compiling TellEff:
TEXT: Congratulations! You obtained the ancient treasure!

DEBUG: Compiling EndCheck:
DEBUG: Queries: [Query: [isLocated(treasure,player,1)]]
DEBUG: ifEffects: [SimpleEngine.Actions.Effects.TellEff@67c2e933]
DEBUG: elseEffects: null
ERROR: Error initialising parent variables for RIVERSTILTS

Knowledge Base:
':-'(notMember(_1069,[]),'!')
':-'(notMember(X,[Head|Tail]),('\='(X,Head),notMember(X,Tail)))
isObject(player)
capacity(player,2147483647)
capacityUsed(player,0)
':-'(inScope(A),(isObject(A),isLocated(A,B,_1075),isLocated(player,B,_1076),'!'))
':-'(inScope(A),(isObject(A),isLocated(A,B,0),hasProperty(B,closablecontainer),'!',isClosed(B,false),inScope(B)))
':-'(inScope(A),(isObject(A),isLocated(A,B,_1081),inScope(B)))
':-'(putIn(A,B),(inScope(A),inScope(B),'\='(A,B),isLocated(A,C,_1085),'\='(A,C),hasProperty(B,closablecontainer),'!',isClosed(B,false),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putIn(A,B),(inScope(A),inScope(B),'\='(A,B),isLocated(A,C,_1093),'\='(A,C),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putInIgnoreScope(A,B),('\='(A,B),isLocated(A,C,_1101),'\='(A,C),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putOn(A,B),(inScope(A),inScope(B),'\='(A,B),volume(A,X),surface(B,Y),surfaceUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putOnIgnoreScope(A,B),('\='(A,B),volume(A,X),surface(B,Y),surfaceUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putBelow(A,B),(inScope(A),inScope(B),'\='(A,B),volume(A,X),below(B,Y),belowUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putBelowIgnoreScope(A,B),('\='(A,B),volume(A,X),below(B,Y),belowUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(outOfScope(A),not(inScope(A)))
':-'(noCapacity(A),not(capacity(A,_1132)))
':-'(noSurface(A),not(surface(A,_1134)))
':-'(noBelow(A),not(below(A,_1136)))
':-'(cantFitCapacity(A,B),(volume(A,X),capacity(B,Y),capacityUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(cantFitSurface(A,B),(volume(A,X),surface(B,Y),surfaceUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(cantFitBelow(A,B),(volume(A,X),below(B,Y),belowUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(tooBigCapacity(A,B),(volume(A,X),capacity(B,Y),'>'(X,Y)))
':-'(tooBigSurface(A,B),(volume(A,X),surface(B,Y),'>'(X,Y)))
':-'(tooBigBelow(A,B),(volume(A,X),below(B,Y),'>'(X,Y)))
':-'(sameObject(A,B),'='(A,B))
':-'(notObject(A),not(isObject(A)))
':-'(targetClosed(A),(hasProperty(A,closablecontainer),isClosed(A,true)))
':-'(stableStack([O],1,R),(isRoom(R),isObject(O),isLocated(O,R,0),hasProperty(O,stable)))
':-'(stableStack([H1,H2|T],M,R),(isObject(H1),isLocated(H1,H2,1),hasProperty(H1,stable),stableStack([H2|T],N,R),is(M,'+'(N,1))))
':-'(stack([O],1,R),(isRoom(R),isObject(O),isLocated(O,R,0)))
':-'(stack([H1,H2|T],M,R),(isObject(H1),isLocated(H1,H2,1),stableStack([H2|T],N,R),is(M,'+'(N,1))))
':-'(climbableStack(N,R),stableStack(_1186,N,R))
':-'(notClimbableStackError(N,R),(stack(_1189,N,R),not(climbableStack(N,R))))
':-'(totalWeight(O,W,X,Y),(selfWeight(O,W2),setof(X,isLocated(X,O,0),IN),setof(Y,isLocated(Y,O,1),ON),'!',weightInObject(X,O,W3),weightOnObject(Y,O,W4),is(W,'+'('+'(W2,W3),W4))))
':-'(totalWeight(O,W,X,[]),(selfWeight(O,W2),setof(X,isLocated(X,O,0),IN),'!',weightInObject(X,O,W3),is(W,'+'(W2,W3))))
':-'(totalWeight(O,W,[],Y),(selfWeight(O,W2),setof(Y,isLocated(Y,O,1),ON),'!',weightOnObject(Y,O,W3),is(W,'+'(W2,W3))))
':-'(totalWeight(O,W,[],[]),selfWeight(O,W))
':-'(selfWeight(O,W),hasVariable(O,weight,W))
':-'(selfWeight(O,0),(isObject(O),not(hasVariable(O,weight,W))))
':-'(weightOnObject(L,O,W),(setof(X,isLocated(X,O,1),L),'!',weightOnObjectAux(L,O,W)))
':-'(weightOnObjectAux([H|T],O,W),(notMember(H,T),isLocated(H,O,1),'!',weightOnObjectAux(T,O,W3),totalWeight(H,W2,_1227,_1228),is(W,'+'(W2,W3))))
weightOnObjectAux(_1229,O,0)
':-'(weightInObject(L,O,W),(setof(X,isLocated(X,O,0),L),'!',weightInObjectAux(L,O,W)))
':-'(weightInObjectAux([H|T],O,W),(notMember(H,T),isLocated(H,O,0),'!',weightInObjectAux(T,O,W3),totalWeight(H,W2,_1241,_1242),is(W,'+'(W2,W3))))
weightInObjectAux(_1243,O,0)
':-'(weightOnObjectEquals(O,W),(weightOnObject(_1247,O,W2),'='(W2,W)))
':-'(weightOnObjectAtLeast(O,W),(weightOnObject(_1251,O,W2),'>='(W2,W)))
':-'(weightOnObjectAtMost(O,W),(weightOnObject(_1255,O,W2),'=<'(W2,W)))
isRoom(ruinsentrance)
isLocated(player,ruinsentrance,0)
isRoom(civilisation)
isRoom(columns)
hasProperty(smallblock,takeable)
hasProperty(smallblock,stable)
hasVariable(smallblock,weight,25)
isObject(smallblock)
volume(smallblock,25)
surface(smallblock,25)
surfaceUsed(smallblock,0)
isLocated(smallblock,columns,0)
isRoom(alterroom)
hasProperty(alter,stable)
isObject(alter)
volume(alter,1)
surface(alter,50)
surfaceUsed(alter,0)
isLocated(alter,alterroom,0)
isObject(pressureplate2)
volume(pressureplate2,1)
surface(pressureplate2,50)
surfaceUsed(pressureplate2,0)
isLocated(pressureplate2,alterroom,0)
isObject(pressureplate1)
volume(pressureplate1,1)
surface(pressureplate1,50)
isLocated(pressureplate1,alterroom,0)
hasProperty(watercontainer1,takeable)
hasVariable(watercontainer1,weight,5)
isObject(watercontainer1)
volume(watercontainer1,25)
capacity(watercontainer1,25)
capacityUsed(watercontainer1,0)
isLocated(watercontainer1,pressureplate1,1)
flag(container1filled,1)
isRoom(treasureroom)
hasProperty(chest,takeable)
hasProperty(chest,closablecontainer)
hasProperty(chest,locked)
hasVariable(chest,weight,25)
isClosed(chest,true)
isObject(chest)
volume(chest,50)
capacity(chest,50)
isLocated(chest,treasureroom,0)
hasProperty(treasure,takeable)
hasVariable(treasure,weight,25)
isObject(treasure)
volume(treasure,50)
isLocated(treasure,chest,0)
isRoom(storageroom)
hasProperty(cupboard,closablecontainer)
hasProperty(cupboard,stable)
isClosed(cupboard,true)
isObject(cupboard)
volume(cupboard,1)
capacity(cupboard,50)
surface(cupboard,50)
surfaceUsed(cupboard,0)
isLocated(cupboard,storageroom,0)
hasProperty(watercontainer2,takeable)
hasVariable(watercontainer2,weight,5)
isObject(watercontainer2)
volume(watercontainer2,25)
capacity(watercontainer2,25)
capacityUsed(watercontainer2,0)
isLocated(watercontainer2,cupboard,0)
flag(container2filled,0)
hasProperty(plank,takeable)
hasVariable(plank,weight,25)
isObject(plank)
volume(plank,50)
surface(plank,50)
surfaceUsed(plank,0)
isLocated(plank,storageroom,0)
isRoom(attic)
hasProperty(key,takeable)
hasVariable(key,weight,1)
isObject(key)
volume(key,10)
isLocated(key,attic,0)
isRoom(rockytunnel)
hasProperty(mediumblock,takeable)
hasProperty(mediumblock,stable)
hasVariable(mediumblock,weight,50)
isObject(mediumblock)
volume(mediumblock,50)
surface(mediumblock,50)
surfaceUsed(mediumblock,0)
isLocated(mediumblock,rockytunnel,0)
isRoom(eastriver)
isObject(river)
volume(river,1)
isLocated(river,eastriver,0)
isObject(riverstilts)
volume(riverstilts,0)
surface(riverstilts,50)
surfaceUsed(riverstilts,0)
isLocated(riverstilts,river,0)
isRoom(waterfallcavern)
isObject(waterfall)
volume(waterfall,1)
below(waterfall,100)
belowUsed(waterfall,0)
isLocated(waterfall,waterfallcavern,0)
isRoom(westriver)
isRoom(ancientquarry)
hasProperty(largeblock,takeable)
hasProperty(largeblock,stable)
hasVariable(largeblock,weight,75)
isObject(largeblock)
volume(largeblock,75)
surface(largeblock,75)
surfaceUsed(largeblock,0)
isLocated(largeblock,ancientquarry,0)
surfaceUsed(pressureplate1,25)
capacityUsed(chest,50)
capacityUsed(cupboard,25)

======================================================================================
Processing user input: w
======================================================================================


DEBUG: PRSA: MOVE, PRSO: WEST, PRSI: null

DEBUG: ATTEMPT TO PERFORM ACTION ON PRSI

DEBUG: FAILED TO PERFORM ACTION ON PRSI

DEBUG: ATTEMPT TO PERFORM ACTION ON PRSO

DEBUG: FAILED TO PERFORM ACTION ON PRSO

DEBUG: ATTEMPT TO PERFORM GENERIC ACTION ON PRSA
DEBUG: Corrected Verb: move

DEBUG: Removed clause isLocated(player,ruinsentrance,0)

DEBUG: Adding clause isLocated(player,rockytunnel,0)
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [climbableStack(3,storageroom)]

DEBUG: Querying: climbableStack(3,storageroom)
DEBUG: QueryCond not satisfied since query: climbableStack(3,storageroom) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [isLocated(plank,riverstilts,1)]

DEBUG: Querying: isLocated(plank,riverstilts,1)
DEBUG: QueryCond not satisfied since query: isLocated(plank,riverstilts,1) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate1,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate1,50)
DEBUG: QueryCond not satisfied since query: weightOnObjectAtLeast(pressureplate1,50) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate2,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate2,50)
DEBUG: QueryCond not satisfied since query: weightOnObjectAtLeast(pressureplate2,50) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate1,50), weightOnObjectAtLeast(pressureplate2,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate1,50)
DEBUG: QueryCond not satisfied since query: weightOnObjectAtLeast(pressureplate1,50) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [isLocated(treasure,player,1)]

DEBUG: Querying: isLocated(treasure,player,1)
DEBUG: QueryCond not satisfied since query: isLocated(treasure,player,1) has no solutions

Knowledge Base:
':-'(notMember(_1069,[]),'!')
':-'(notMember(X,[Head|Tail]),('\='(X,Head),notMember(X,Tail)))
isObject(player)
capacity(player,2147483647)
capacityUsed(player,0)
':-'(inScope(A),(isObject(A),isLocated(A,B,_1075),isLocated(player,B,_1076),'!'))
':-'(inScope(A),(isObject(A),isLocated(A,B,0),hasProperty(B,closablecontainer),'!',isClosed(B,false),inScope(B)))
':-'(inScope(A),(isObject(A),isLocated(A,B,_1081),inScope(B)))
':-'(putIn(A,B),(inScope(A),inScope(B),'\='(A,B),isLocated(A,C,_1085),'\='(A,C),hasProperty(B,closablecontainer),'!',isClosed(B,false),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putIn(A,B),(inScope(A),inScope(B),'\='(A,B),isLocated(A,C,_1093),'\='(A,C),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putInIgnoreScope(A,B),('\='(A,B),isLocated(A,C,_1101),'\='(A,C),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putOn(A,B),(inScope(A),inScope(B),'\='(A,B),volume(A,X),surface(B,Y),surfaceUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putOnIgnoreScope(A,B),('\='(A,B),volume(A,X),surface(B,Y),surfaceUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putBelow(A,B),(inScope(A),inScope(B),'\='(A,B),volume(A,X),below(B,Y),belowUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putBelowIgnoreScope(A,B),('\='(A,B),volume(A,X),below(B,Y),belowUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(outOfScope(A),not(inScope(A)))
':-'(noCapacity(A),not(capacity(A,_1132)))
':-'(noSurface(A),not(surface(A,_1134)))
':-'(noBelow(A),not(below(A,_1136)))
':-'(cantFitCapacity(A,B),(volume(A,X),capacity(B,Y),capacityUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(cantFitSurface(A,B),(volume(A,X),surface(B,Y),surfaceUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(cantFitBelow(A,B),(volume(A,X),below(B,Y),belowUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(tooBigCapacity(A,B),(volume(A,X),capacity(B,Y),'>'(X,Y)))
':-'(tooBigSurface(A,B),(volume(A,X),surface(B,Y),'>'(X,Y)))
':-'(tooBigBelow(A,B),(volume(A,X),below(B,Y),'>'(X,Y)))
':-'(sameObject(A,B),'='(A,B))
':-'(notObject(A),not(isObject(A)))
':-'(targetClosed(A),(hasProperty(A,closablecontainer),isClosed(A,true)))
':-'(stableStack([O],1,R),(isRoom(R),isObject(O),isLocated(O,R,0),hasProperty(O,stable)))
':-'(stableStack([H1,H2|T],M,R),(isObject(H1),isLocated(H1,H2,1),hasProperty(H1,stable),stableStack([H2|T],N,R),is(M,'+'(N,1))))
':-'(stack([O],1,R),(isRoom(R),isObject(O),isLocated(O,R,0)))
':-'(stack([H1,H2|T],M,R),(isObject(H1),isLocated(H1,H2,1),stableStack([H2|T],N,R),is(M,'+'(N,1))))
':-'(climbableStack(N,R),stableStack(_1186,N,R))
':-'(notClimbableStackError(N,R),(stack(_1189,N,R),not(climbableStack(N,R))))
':-'(totalWeight(O,W,X,Y),(selfWeight(O,W2),setof(X,isLocated(X,O,0),IN),setof(Y,isLocated(Y,O,1),ON),'!',weightInObject(X,O,W3),weightOnObject(Y,O,W4),is(W,'+'('+'(W2,W3),W4))))
':-'(totalWeight(O,W,X,[]),(selfWeight(O,W2),setof(X,isLocated(X,O,0),IN),'!',weightInObject(X,O,W3),is(W,'+'(W2,W3))))
':-'(totalWeight(O,W,[],Y),(selfWeight(O,W2),setof(Y,isLocated(Y,O,1),ON),'!',weightOnObject(Y,O,W3),is(W,'+'(W2,W3))))
':-'(totalWeight(O,W,[],[]),selfWeight(O,W))
':-'(selfWeight(O,W),hasVariable(O,weight,W))
':-'(selfWeight(O,0),(isObject(O),not(hasVariable(O,weight,W))))
':-'(weightOnObject(L,O,W),(setof(X,isLocated(X,O,1),L),'!',weightOnObjectAux(L,O,W)))
':-'(weightOnObjectAux([H|T],O,W),(notMember(H,T),isLocated(H,O,1),'!',weightOnObjectAux(T,O,W3),totalWeight(H,W2,_1227,_1228),is(W,'+'(W2,W3))))
weightOnObjectAux(_1229,O,0)
':-'(weightInObject(L,O,W),(setof(X,isLocated(X,O,0),L),'!',weightInObjectAux(L,O,W)))
':-'(weightInObjectAux([H|T],O,W),(notMember(H,T),isLocated(H,O,0),'!',weightInObjectAux(T,O,W3),totalWeight(H,W2,_1241,_1242),is(W,'+'(W2,W3))))
weightInObjectAux(_1243,O,0)
':-'(weightOnObjectEquals(O,W),(weightOnObject(_1247,O,W2),'='(W2,W)))
':-'(weightOnObjectAtLeast(O,W),(weightOnObject(_1251,O,W2),'>='(W2,W)))
':-'(weightOnObjectAtMost(O,W),(weightOnObject(_1255,O,W2),'=<'(W2,W)))
isRoom(ruinsentrance)
isRoom(civilisation)
isRoom(columns)
hasProperty(smallblock,takeable)
hasProperty(smallblock,stable)
hasVariable(smallblock,weight,25)
isObject(smallblock)
volume(smallblock,25)
surface(smallblock,25)
surfaceUsed(smallblock,0)
isLocated(smallblock,columns,0)
isRoom(alterroom)
hasProperty(alter,stable)
isObject(alter)
volume(alter,1)
surface(alter,50)
surfaceUsed(alter,0)
isLocated(alter,alterroom,0)
isObject(pressureplate2)
volume(pressureplate2,1)
surface(pressureplate2,50)
surfaceUsed(pressureplate2,0)
isLocated(pressureplate2,alterroom,0)
isObject(pressureplate1)
volume(pressureplate1,1)
surface(pressureplate1,50)
isLocated(pressureplate1,alterroom,0)
hasProperty(watercontainer1,takeable)
hasVariable(watercontainer1,weight,5)
isObject(watercontainer1)
volume(watercontainer1,25)
capacity(watercontainer1,25)
capacityUsed(watercontainer1,0)
isLocated(watercontainer1,pressureplate1,1)
flag(container1filled,1)
isRoom(treasureroom)
hasProperty(chest,takeable)
hasProperty(chest,closablecontainer)
hasProperty(chest,locked)
hasVariable(chest,weight,25)
isClosed(chest,true)
isObject(chest)
volume(chest,50)
capacity(chest,50)
isLocated(chest,treasureroom,0)
hasProperty(treasure,takeable)
hasVariable(treasure,weight,25)
isObject(treasure)
volume(treasure,50)
isLocated(treasure,chest,0)
isRoom(storageroom)
hasProperty(cupboard,closablecontainer)
hasProperty(cupboard,stable)
isClosed(cupboard,true)
isObject(cupboard)
volume(cupboard,1)
capacity(cupboard,50)
surface(cupboard,50)
surfaceUsed(cupboard,0)
isLocated(cupboard,storageroom,0)
hasProperty(watercontainer2,takeable)
hasVariable(watercontainer2,weight,5)
isObject(watercontainer2)
volume(watercontainer2,25)
capacity(watercontainer2,25)
capacityUsed(watercontainer2,0)
isLocated(watercontainer2,cupboard,0)
flag(container2filled,0)
hasProperty(plank,takeable)
hasVariable(plank,weight,25)
isObject(plank)
volume(plank,50)
surface(plank,50)
surfaceUsed(plank,0)
isLocated(plank,storageroom,0)
isRoom(attic)
hasProperty(key,takeable)
hasVariable(key,weight,1)
isObject(key)
volume(key,10)
isLocated(key,attic,0)
isRoom(rockytunnel)
hasProperty(mediumblock,takeable)
hasProperty(mediumblock,stable)
hasVariable(mediumblock,weight,50)
isObject(mediumblock)
volume(mediumblock,50)
surface(mediumblock,50)
surfaceUsed(mediumblock,0)
isLocated(mediumblock,rockytunnel,0)
isRoom(eastriver)
isObject(river)
volume(river,1)
isLocated(river,eastriver,0)
isObject(riverstilts)
volume(riverstilts,0)
surface(riverstilts,50)
surfaceUsed(riverstilts,0)
isLocated(riverstilts,river,0)
isRoom(waterfallcavern)
isObject(waterfall)
volume(waterfall,1)
below(waterfall,100)
belowUsed(waterfall,0)
isLocated(waterfall,waterfallcavern,0)
isRoom(westriver)
isRoom(ancientquarry)
hasProperty(largeblock,takeable)
hasProperty(largeblock,stable)
hasVariable(largeblock,weight,75)
isObject(largeblock)
volume(largeblock,75)
surface(largeblock,75)
surfaceUsed(largeblock,0)
isLocated(largeblock,ancientquarry,0)
surfaceUsed(pressureplate1,25)
capacityUsed(chest,50)
capacityUsed(cupboard,25)
isLocated(player,rockytunnel,0)

DEBUG: Querying: totalWeight(mediumblock,W,X,Y)
DEBUG: Solution: totalWeight(mediumblock,50,[],[]) - bindings: yes.
W / 50
X / []
Y / []

DEBUG: Querying: totalWeight(pressureplate2,W,X,Y)
DEBUG: Solution: totalWeight(pressureplate2,0,[],[]) - bindings: yes.
W / 0
X / []
Y / []

DEBUG: Querying: weightOnObject(X,pressureplate2,W)

======================================================================================
Processing user input: take block
======================================================================================

DEBUG: Pre-process input lemmas: [take, block]
DEBUG: Pre-process input posTags: [VB, NNP]
DEBUG: Adding [block] to matched objects
DEBUG: Adding 1 to matched indices
DEBUG: removeStart: [1]
DEBUG: removeEnd: [1]
DEBUG: Pre-processed: take item1
DEBUG: Lemmas: [take, item]
DEBUG: Verb found: TAKE
DEBUG: PRSA set to: TAKE

DEBUG: PRSA: TAKE, PRSO: MEDIUMBLOCK, PRSI: null

DEBUG: ATTEMPT TO PERFORM ACTION ON PRSI

DEBUG: FAILED TO PERFORM ACTION ON PRSI

DEBUG: ATTEMPT TO PERFORM ACTION ON PRSO

DEBUG: FAILED TO PERFORM ACTION ON PRSO

DEBUG: ATTEMPT TO PERFORM GENERIC ACTION ON PRSA
DEBUG: Corrected Verb: take

DEBUG: Querying: isObject(rockytunnel)

DEBUG: Removed clause isLocated(mediumblock,rockytunnel,0)

DEBUG: Adding clause isLocated(mediumblock,player,0)
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [climbableStack(3,storageroom)]

DEBUG: Querying: climbableStack(3,storageroom)
DEBUG: QueryCond not satisfied since query: climbableStack(3,storageroom) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [isLocated(plank,riverstilts,1)]

DEBUG: Querying: isLocated(plank,riverstilts,1)
DEBUG: QueryCond not satisfied since query: isLocated(plank,riverstilts,1) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate1,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate1,50)
DEBUG: QueryCond not satisfied since query: weightOnObjectAtLeast(pressureplate1,50) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate2,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate2,50)
DEBUG: QueryCond not satisfied since query: weightOnObjectAtLeast(pressureplate2,50) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate1,50), weightOnObjectAtLeast(pressureplate2,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate1,50)
DEBUG: QueryCond not satisfied since query: weightOnObjectAtLeast(pressureplate1,50) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [isLocated(treasure,player,1)]

DEBUG: Querying: isLocated(treasure,player,1)
DEBUG: QueryCond not satisfied since query: isLocated(treasure,player,1) has no solutions

Knowledge Base:
':-'(notMember(_1069,[]),'!')
':-'(notMember(X,[Head|Tail]),('\='(X,Head),notMember(X,Tail)))
isObject(player)
capacity(player,2147483647)
capacityUsed(player,0)
':-'(inScope(A),(isObject(A),isLocated(A,B,_1075),isLocated(player,B,_1076),'!'))
':-'(inScope(A),(isObject(A),isLocated(A,B,0),hasProperty(B,closablecontainer),'!',isClosed(B,false),inScope(B)))
':-'(inScope(A),(isObject(A),isLocated(A,B,_1081),inScope(B)))
':-'(putIn(A,B),(inScope(A),inScope(B),'\='(A,B),isLocated(A,C,_1085),'\='(A,C),hasProperty(B,closablecontainer),'!',isClosed(B,false),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putIn(A,B),(inScope(A),inScope(B),'\='(A,B),isLocated(A,C,_1093),'\='(A,C),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putInIgnoreScope(A,B),('\='(A,B),isLocated(A,C,_1101),'\='(A,C),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putOn(A,B),(inScope(A),inScope(B),'\='(A,B),volume(A,X),surface(B,Y),surfaceUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putOnIgnoreScope(A,B),('\='(A,B),volume(A,X),surface(B,Y),surfaceUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putBelow(A,B),(inScope(A),inScope(B),'\='(A,B),volume(A,X),below(B,Y),belowUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putBelowIgnoreScope(A,B),('\='(A,B),volume(A,X),below(B,Y),belowUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(outOfScope(A),not(inScope(A)))
':-'(noCapacity(A),not(capacity(A,_1132)))
':-'(noSurface(A),not(surface(A,_1134)))
':-'(noBelow(A),not(below(A,_1136)))
':-'(cantFitCapacity(A,B),(volume(A,X),capacity(B,Y),capacityUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(cantFitSurface(A,B),(volume(A,X),surface(B,Y),surfaceUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(cantFitBelow(A,B),(volume(A,X),below(B,Y),belowUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(tooBigCapacity(A,B),(volume(A,X),capacity(B,Y),'>'(X,Y)))
':-'(tooBigSurface(A,B),(volume(A,X),surface(B,Y),'>'(X,Y)))
':-'(tooBigBelow(A,B),(volume(A,X),below(B,Y),'>'(X,Y)))
':-'(sameObject(A,B),'='(A,B))
':-'(notObject(A),not(isObject(A)))
':-'(targetClosed(A),(hasProperty(A,closablecontainer),isClosed(A,true)))
':-'(stableStack([O],1,R),(isRoom(R),isObject(O),isLocated(O,R,0),hasProperty(O,stable)))
':-'(stableStack([H1,H2|T],M,R),(isObject(H1),isLocated(H1,H2,1),hasProperty(H1,stable),stableStack([H2|T],N,R),is(M,'+'(N,1))))
':-'(stack([O],1,R),(isRoom(R),isObject(O),isLocated(O,R,0)))
':-'(stack([H1,H2|T],M,R),(isObject(H1),isLocated(H1,H2,1),stableStack([H2|T],N,R),is(M,'+'(N,1))))
':-'(climbableStack(N,R),stableStack(_1186,N,R))
':-'(notClimbableStackError(N,R),(stack(_1189,N,R),not(climbableStack(N,R))))
':-'(totalWeight(O,W,X,Y),(selfWeight(O,W2),setof(X,isLocated(X,O,0),IN),setof(Y,isLocated(Y,O,1),ON),'!',weightInObject(X,O,W3),weightOnObject(Y,O,W4),is(W,'+'('+'(W2,W3),W4))))
':-'(totalWeight(O,W,X,[]),(selfWeight(O,W2),setof(X,isLocated(X,O,0),IN),'!',weightInObject(X,O,W3),is(W,'+'(W2,W3))))
':-'(totalWeight(O,W,[],Y),(selfWeight(O,W2),setof(Y,isLocated(Y,O,1),ON),'!',weightOnObject(Y,O,W3),is(W,'+'(W2,W3))))
':-'(totalWeight(O,W,[],[]),selfWeight(O,W))
':-'(selfWeight(O,W),hasVariable(O,weight,W))
':-'(selfWeight(O,0),(isObject(O),not(hasVariable(O,weight,W))))
':-'(weightOnObject(L,O,W),(setof(X,isLocated(X,O,1),L),'!',weightOnObjectAux(L,O,W)))
':-'(weightOnObjectAux([H|T],O,W),(notMember(H,T),isLocated(H,O,1),'!',weightOnObjectAux(T,O,W3),totalWeight(H,W2,_1227,_1228),is(W,'+'(W2,W3))))
weightOnObjectAux(_1229,O,0)
':-'(weightInObject(L,O,W),(setof(X,isLocated(X,O,0),L),'!',weightInObjectAux(L,O,W)))
':-'(weightInObjectAux([H|T],O,W),(notMember(H,T),isLocated(H,O,0),'!',weightInObjectAux(T,O,W3),totalWeight(H,W2,_1241,_1242),is(W,'+'(W2,W3))))
weightInObjectAux(_1243,O,0)
':-'(weightOnObjectEquals(O,W),(weightOnObject(_1247,O,W2),'='(W2,W)))
':-'(weightOnObjectAtLeast(O,W),(weightOnObject(_1251,O,W2),'>='(W2,W)))
':-'(weightOnObjectAtMost(O,W),(weightOnObject(_1255,O,W2),'=<'(W2,W)))
isRoom(ruinsentrance)
isRoom(civilisation)
isRoom(columns)
hasProperty(smallblock,takeable)
hasProperty(smallblock,stable)
hasVariable(smallblock,weight,25)
isObject(smallblock)
volume(smallblock,25)
surface(smallblock,25)
surfaceUsed(smallblock,0)
isLocated(smallblock,columns,0)
isRoom(alterroom)
hasProperty(alter,stable)
isObject(alter)
volume(alter,1)
surface(alter,50)
surfaceUsed(alter,0)
isLocated(alter,alterroom,0)
isObject(pressureplate2)
volume(pressureplate2,1)
surface(pressureplate2,50)
surfaceUsed(pressureplate2,0)
isLocated(pressureplate2,alterroom,0)
isObject(pressureplate1)
volume(pressureplate1,1)
surface(pressureplate1,50)
isLocated(pressureplate1,alterroom,0)
hasProperty(watercontainer1,takeable)
hasVariable(watercontainer1,weight,5)
isObject(watercontainer1)
volume(watercontainer1,25)
capacity(watercontainer1,25)
capacityUsed(watercontainer1,0)
isLocated(watercontainer1,pressureplate1,1)
flag(container1filled,1)
isRoom(treasureroom)
hasProperty(chest,takeable)
hasProperty(chest,closablecontainer)
hasProperty(chest,locked)
hasVariable(chest,weight,25)
isClosed(chest,true)
isObject(chest)
volume(chest,50)
capacity(chest,50)
isLocated(chest,treasureroom,0)
hasProperty(treasure,takeable)
hasVariable(treasure,weight,25)
isObject(treasure)
volume(treasure,50)
isLocated(treasure,chest,0)
isRoom(storageroom)
hasProperty(cupboard,closablecontainer)
hasProperty(cupboard,stable)
isClosed(cupboard,true)
isObject(cupboard)
volume(cupboard,1)
capacity(cupboard,50)
surface(cupboard,50)
surfaceUsed(cupboard,0)
isLocated(cupboard,storageroom,0)
hasProperty(watercontainer2,takeable)
hasVariable(watercontainer2,weight,5)
isObject(watercontainer2)
volume(watercontainer2,25)
capacity(watercontainer2,25)
capacityUsed(watercontainer2,0)
isLocated(watercontainer2,cupboard,0)
flag(container2filled,0)
hasProperty(plank,takeable)
hasVariable(plank,weight,25)
isObject(plank)
volume(plank,50)
surface(plank,50)
surfaceUsed(plank,0)
isLocated(plank,storageroom,0)
isRoom(attic)
hasProperty(key,takeable)
hasVariable(key,weight,1)
isObject(key)
volume(key,10)
isLocated(key,attic,0)
isRoom(rockytunnel)
hasProperty(mediumblock,takeable)
hasProperty(mediumblock,stable)
hasVariable(mediumblock,weight,50)
isObject(mediumblock)
volume(mediumblock,50)
surface(mediumblock,50)
surfaceUsed(mediumblock,0)
isRoom(eastriver)
isObject(river)
volume(river,1)
isLocated(river,eastriver,0)
isObject(riverstilts)
volume(riverstilts,0)
surface(riverstilts,50)
surfaceUsed(riverstilts,0)
isLocated(riverstilts,river,0)
isRoom(waterfallcavern)
isObject(waterfall)
volume(waterfall,1)
below(waterfall,100)
belowUsed(waterfall,0)
isLocated(waterfall,waterfallcavern,0)
isRoom(westriver)
isRoom(ancientquarry)
hasProperty(largeblock,takeable)
hasProperty(largeblock,stable)
hasVariable(largeblock,weight,75)
isObject(largeblock)
volume(largeblock,75)
surface(largeblock,75)
surfaceUsed(largeblock,0)
isLocated(largeblock,ancientquarry,0)
surfaceUsed(pressureplate1,25)
capacityUsed(chest,50)
capacityUsed(cupboard,25)
isLocated(player,rockytunnel,0)
isLocated(mediumblock,player,0)

DEBUG: Querying: totalWeight(mediumblock,W,X,Y)
DEBUG: Solution: totalWeight(mediumblock,50,[],[]) - bindings: yes.
W / 50
X / []
Y / []

DEBUG: Querying: totalWeight(pressureplate2,W,X,Y)
DEBUG: Solution: totalWeight(pressureplate2,0,[],[]) - bindings: yes.
W / 0
X / []
Y / []

DEBUG: Querying: weightOnObject(X,pressureplate2,W)

======================================================================================
Processing user input: e
======================================================================================


DEBUG: PRSA: MOVE, PRSO: EAST, PRSI: null

DEBUG: ATTEMPT TO PERFORM ACTION ON PRSI

DEBUG: FAILED TO PERFORM ACTION ON PRSI

DEBUG: ATTEMPT TO PERFORM ACTION ON PRSO

DEBUG: FAILED TO PERFORM ACTION ON PRSO

DEBUG: ATTEMPT TO PERFORM GENERIC ACTION ON PRSA
DEBUG: Corrected Verb: move

DEBUG: Removed clause isLocated(player,rockytunnel,0)

DEBUG: Adding clause isLocated(player,ruinsentrance,0)
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [climbableStack(3,storageroom)]

DEBUG: Querying: climbableStack(3,storageroom)
DEBUG: QueryCond not satisfied since query: climbableStack(3,storageroom) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [isLocated(plank,riverstilts,1)]

DEBUG: Querying: isLocated(plank,riverstilts,1)
DEBUG: QueryCond not satisfied since query: isLocated(plank,riverstilts,1) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate1,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate1,50)
DEBUG: QueryCond not satisfied since query: weightOnObjectAtLeast(pressureplate1,50) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate2,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate2,50)
DEBUG: QueryCond not satisfied since query: weightOnObjectAtLeast(pressureplate2,50) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate1,50), weightOnObjectAtLeast(pressureplate2,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate1,50)
DEBUG: QueryCond not satisfied since query: weightOnObjectAtLeast(pressureplate1,50) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [isLocated(treasure,player,1)]

DEBUG: Querying: isLocated(treasure,player,1)
DEBUG: QueryCond not satisfied since query: isLocated(treasure,player,1) has no solutions

Knowledge Base:
':-'(notMember(_1069,[]),'!')
':-'(notMember(X,[Head|Tail]),('\='(X,Head),notMember(X,Tail)))
isObject(player)
capacity(player,2147483647)
capacityUsed(player,0)
':-'(inScope(A),(isObject(A),isLocated(A,B,_1075),isLocated(player,B,_1076),'!'))
':-'(inScope(A),(isObject(A),isLocated(A,B,0),hasProperty(B,closablecontainer),'!',isClosed(B,false),inScope(B)))
':-'(inScope(A),(isObject(A),isLocated(A,B,_1081),inScope(B)))
':-'(putIn(A,B),(inScope(A),inScope(B),'\='(A,B),isLocated(A,C,_1085),'\='(A,C),hasProperty(B,closablecontainer),'!',isClosed(B,false),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putIn(A,B),(inScope(A),inScope(B),'\='(A,B),isLocated(A,C,_1093),'\='(A,C),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putInIgnoreScope(A,B),('\='(A,B),isLocated(A,C,_1101),'\='(A,C),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putOn(A,B),(inScope(A),inScope(B),'\='(A,B),volume(A,X),surface(B,Y),surfaceUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putOnIgnoreScope(A,B),('\='(A,B),volume(A,X),surface(B,Y),surfaceUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putBelow(A,B),(inScope(A),inScope(B),'\='(A,B),volume(A,X),below(B,Y),belowUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putBelowIgnoreScope(A,B),('\='(A,B),volume(A,X),below(B,Y),belowUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(outOfScope(A),not(inScope(A)))
':-'(noCapacity(A),not(capacity(A,_1132)))
':-'(noSurface(A),not(surface(A,_1134)))
':-'(noBelow(A),not(below(A,_1136)))
':-'(cantFitCapacity(A,B),(volume(A,X),capacity(B,Y),capacityUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(cantFitSurface(A,B),(volume(A,X),surface(B,Y),surfaceUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(cantFitBelow(A,B),(volume(A,X),below(B,Y),belowUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(tooBigCapacity(A,B),(volume(A,X),capacity(B,Y),'>'(X,Y)))
':-'(tooBigSurface(A,B),(volume(A,X),surface(B,Y),'>'(X,Y)))
':-'(tooBigBelow(A,B),(volume(A,X),below(B,Y),'>'(X,Y)))
':-'(sameObject(A,B),'='(A,B))
':-'(notObject(A),not(isObject(A)))
':-'(targetClosed(A),(hasProperty(A,closablecontainer),isClosed(A,true)))
':-'(stableStack([O],1,R),(isRoom(R),isObject(O),isLocated(O,R,0),hasProperty(O,stable)))
':-'(stableStack([H1,H2|T],M,R),(isObject(H1),isLocated(H1,H2,1),hasProperty(H1,stable),stableStack([H2|T],N,R),is(M,'+'(N,1))))
':-'(stack([O],1,R),(isRoom(R),isObject(O),isLocated(O,R,0)))
':-'(stack([H1,H2|T],M,R),(isObject(H1),isLocated(H1,H2,1),stableStack([H2|T],N,R),is(M,'+'(N,1))))
':-'(climbableStack(N,R),stableStack(_1186,N,R))
':-'(notClimbableStackError(N,R),(stack(_1189,N,R),not(climbableStack(N,R))))
':-'(totalWeight(O,W,X,Y),(selfWeight(O,W2),setof(X,isLocated(X,O,0),IN),setof(Y,isLocated(Y,O,1),ON),'!',weightInObject(X,O,W3),weightOnObject(Y,O,W4),is(W,'+'('+'(W2,W3),W4))))
':-'(totalWeight(O,W,X,[]),(selfWeight(O,W2),setof(X,isLocated(X,O,0),IN),'!',weightInObject(X,O,W3),is(W,'+'(W2,W3))))
':-'(totalWeight(O,W,[],Y),(selfWeight(O,W2),setof(Y,isLocated(Y,O,1),ON),'!',weightOnObject(Y,O,W3),is(W,'+'(W2,W3))))
':-'(totalWeight(O,W,[],[]),selfWeight(O,W))
':-'(selfWeight(O,W),hasVariable(O,weight,W))
':-'(selfWeight(O,0),(isObject(O),not(hasVariable(O,weight,W))))
':-'(weightOnObject(L,O,W),(setof(X,isLocated(X,O,1),L),'!',weightOnObjectAux(L,O,W)))
':-'(weightOnObjectAux([H|T],O,W),(notMember(H,T),isLocated(H,O,1),'!',weightOnObjectAux(T,O,W3),totalWeight(H,W2,_1227,_1228),is(W,'+'(W2,W3))))
weightOnObjectAux(_1229,O,0)
':-'(weightInObject(L,O,W),(setof(X,isLocated(X,O,0),L),'!',weightInObjectAux(L,O,W)))
':-'(weightInObjectAux([H|T],O,W),(notMember(H,T),isLocated(H,O,0),'!',weightInObjectAux(T,O,W3),totalWeight(H,W2,_1241,_1242),is(W,'+'(W2,W3))))
weightInObjectAux(_1243,O,0)
':-'(weightOnObjectEquals(O,W),(weightOnObject(_1247,O,W2),'='(W2,W)))
':-'(weightOnObjectAtLeast(O,W),(weightOnObject(_1251,O,W2),'>='(W2,W)))
':-'(weightOnObjectAtMost(O,W),(weightOnObject(_1255,O,W2),'=<'(W2,W)))
isRoom(ruinsentrance)
isRoom(civilisation)
isRoom(columns)
hasProperty(smallblock,takeable)
hasProperty(smallblock,stable)
hasVariable(smallblock,weight,25)
isObject(smallblock)
volume(smallblock,25)
surface(smallblock,25)
surfaceUsed(smallblock,0)
isLocated(smallblock,columns,0)
isRoom(alterroom)
hasProperty(alter,stable)
isObject(alter)
volume(alter,1)
surface(alter,50)
surfaceUsed(alter,0)
isLocated(alter,alterroom,0)
isObject(pressureplate2)
volume(pressureplate2,1)
surface(pressureplate2,50)
surfaceUsed(pressureplate2,0)
isLocated(pressureplate2,alterroom,0)
isObject(pressureplate1)
volume(pressureplate1,1)
surface(pressureplate1,50)
isLocated(pressureplate1,alterroom,0)
hasProperty(watercontainer1,takeable)
hasVariable(watercontainer1,weight,5)
isObject(watercontainer1)
volume(watercontainer1,25)
capacity(watercontainer1,25)
capacityUsed(watercontainer1,0)
isLocated(watercontainer1,pressureplate1,1)
flag(container1filled,1)
isRoom(treasureroom)
hasProperty(chest,takeable)
hasProperty(chest,closablecontainer)
hasProperty(chest,locked)
hasVariable(chest,weight,25)
isClosed(chest,true)
isObject(chest)
volume(chest,50)
capacity(chest,50)
isLocated(chest,treasureroom,0)
hasProperty(treasure,takeable)
hasVariable(treasure,weight,25)
isObject(treasure)
volume(treasure,50)
isLocated(treasure,chest,0)
isRoom(storageroom)
hasProperty(cupboard,closablecontainer)
hasProperty(cupboard,stable)
isClosed(cupboard,true)
isObject(cupboard)
volume(cupboard,1)
capacity(cupboard,50)
surface(cupboard,50)
surfaceUsed(cupboard,0)
isLocated(cupboard,storageroom,0)
hasProperty(watercontainer2,takeable)
hasVariable(watercontainer2,weight,5)
isObject(watercontainer2)
volume(watercontainer2,25)
capacity(watercontainer2,25)
capacityUsed(watercontainer2,0)
isLocated(watercontainer2,cupboard,0)
flag(container2filled,0)
hasProperty(plank,takeable)
hasVariable(plank,weight,25)
isObject(plank)
volume(plank,50)
surface(plank,50)
surfaceUsed(plank,0)
isLocated(plank,storageroom,0)
isRoom(attic)
hasProperty(key,takeable)
hasVariable(key,weight,1)
isObject(key)
volume(key,10)
isLocated(key,attic,0)
isRoom(rockytunnel)
hasProperty(mediumblock,takeable)
hasProperty(mediumblock,stable)
hasVariable(mediumblock,weight,50)
isObject(mediumblock)
volume(mediumblock,50)
surface(mediumblock,50)
surfaceUsed(mediumblock,0)
isRoom(eastriver)
isObject(river)
volume(river,1)
isLocated(river,eastriver,0)
isObject(riverstilts)
volume(riverstilts,0)
surface(riverstilts,50)
surfaceUsed(riverstilts,0)
isLocated(riverstilts,river,0)
isRoom(waterfallcavern)
isObject(waterfall)
volume(waterfall,1)
below(waterfall,100)
belowUsed(waterfall,0)
isLocated(waterfall,waterfallcavern,0)
isRoom(westriver)
isRoom(ancientquarry)
hasProperty(largeblock,takeable)
hasProperty(largeblock,stable)
hasVariable(largeblock,weight,75)
isObject(largeblock)
volume(largeblock,75)
surface(largeblock,75)
surfaceUsed(largeblock,0)
isLocated(largeblock,ancientquarry,0)
surfaceUsed(pressureplate1,25)
capacityUsed(chest,50)
capacityUsed(cupboard,25)
isLocated(mediumblock,player,0)
isLocated(player,ruinsentrance,0)

DEBUG: Querying: totalWeight(mediumblock,W,X,Y)
DEBUG: Solution: totalWeight(mediumblock,50,[],[]) - bindings: yes.
W / 50
X / []
Y / []

DEBUG: Querying: totalWeight(pressureplate2,W,X,Y)
DEBUG: Solution: totalWeight(pressureplate2,0,[],[]) - bindings: yes.
W / 0
X / []
Y / []

DEBUG: Querying: weightOnObject(X,pressureplate2,W)

======================================================================================
Processing user input: n
======================================================================================


DEBUG: PRSA: MOVE, PRSO: NORTH, PRSI: null

DEBUG: ATTEMPT TO PERFORM ACTION ON PRSI

DEBUG: FAILED TO PERFORM ACTION ON PRSI

DEBUG: ATTEMPT TO PERFORM ACTION ON PRSO

DEBUG: FAILED TO PERFORM ACTION ON PRSO

DEBUG: ATTEMPT TO PERFORM GENERIC ACTION ON PRSA
DEBUG: Corrected Verb: move

DEBUG: Removed clause isLocated(player,ruinsentrance,0)

DEBUG: Adding clause isLocated(player,columns,0)
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [climbableStack(3,storageroom)]

DEBUG: Querying: climbableStack(3,storageroom)
DEBUG: QueryCond not satisfied since query: climbableStack(3,storageroom) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [isLocated(plank,riverstilts,1)]

DEBUG: Querying: isLocated(plank,riverstilts,1)
DEBUG: QueryCond not satisfied since query: isLocated(plank,riverstilts,1) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate1,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate1,50)
DEBUG: QueryCond not satisfied since query: weightOnObjectAtLeast(pressureplate1,50) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate2,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate2,50)
DEBUG: QueryCond not satisfied since query: weightOnObjectAtLeast(pressureplate2,50) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate1,50), weightOnObjectAtLeast(pressureplate2,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate1,50)
DEBUG: QueryCond not satisfied since query: weightOnObjectAtLeast(pressureplate1,50) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [isLocated(treasure,player,1)]

DEBUG: Querying: isLocated(treasure,player,1)
DEBUG: QueryCond not satisfied since query: isLocated(treasure,player,1) has no solutions

Knowledge Base:
':-'(notMember(_1069,[]),'!')
':-'(notMember(X,[Head|Tail]),('\='(X,Head),notMember(X,Tail)))
isObject(player)
capacity(player,2147483647)
capacityUsed(player,0)
':-'(inScope(A),(isObject(A),isLocated(A,B,_1075),isLocated(player,B,_1076),'!'))
':-'(inScope(A),(isObject(A),isLocated(A,B,0),hasProperty(B,closablecontainer),'!',isClosed(B,false),inScope(B)))
':-'(inScope(A),(isObject(A),isLocated(A,B,_1081),inScope(B)))
':-'(putIn(A,B),(inScope(A),inScope(B),'\='(A,B),isLocated(A,C,_1085),'\='(A,C),hasProperty(B,closablecontainer),'!',isClosed(B,false),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putIn(A,B),(inScope(A),inScope(B),'\='(A,B),isLocated(A,C,_1093),'\='(A,C),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putInIgnoreScope(A,B),('\='(A,B),isLocated(A,C,_1101),'\='(A,C),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putOn(A,B),(inScope(A),inScope(B),'\='(A,B),volume(A,X),surface(B,Y),surfaceUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putOnIgnoreScope(A,B),('\='(A,B),volume(A,X),surface(B,Y),surfaceUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putBelow(A,B),(inScope(A),inScope(B),'\='(A,B),volume(A,X),below(B,Y),belowUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putBelowIgnoreScope(A,B),('\='(A,B),volume(A,X),below(B,Y),belowUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(outOfScope(A),not(inScope(A)))
':-'(noCapacity(A),not(capacity(A,_1132)))
':-'(noSurface(A),not(surface(A,_1134)))
':-'(noBelow(A),not(below(A,_1136)))
':-'(cantFitCapacity(A,B),(volume(A,X),capacity(B,Y),capacityUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(cantFitSurface(A,B),(volume(A,X),surface(B,Y),surfaceUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(cantFitBelow(A,B),(volume(A,X),below(B,Y),belowUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(tooBigCapacity(A,B),(volume(A,X),capacity(B,Y),'>'(X,Y)))
':-'(tooBigSurface(A,B),(volume(A,X),surface(B,Y),'>'(X,Y)))
':-'(tooBigBelow(A,B),(volume(A,X),below(B,Y),'>'(X,Y)))
':-'(sameObject(A,B),'='(A,B))
':-'(notObject(A),not(isObject(A)))
':-'(targetClosed(A),(hasProperty(A,closablecontainer),isClosed(A,true)))
':-'(stableStack([O],1,R),(isRoom(R),isObject(O),isLocated(O,R,0),hasProperty(O,stable)))
':-'(stableStack([H1,H2|T],M,R),(isObject(H1),isLocated(H1,H2,1),hasProperty(H1,stable),stableStack([H2|T],N,R),is(M,'+'(N,1))))
':-'(stack([O],1,R),(isRoom(R),isObject(O),isLocated(O,R,0)))
':-'(stack([H1,H2|T],M,R),(isObject(H1),isLocated(H1,H2,1),stableStack([H2|T],N,R),is(M,'+'(N,1))))
':-'(climbableStack(N,R),stableStack(_1186,N,R))
':-'(notClimbableStackError(N,R),(stack(_1189,N,R),not(climbableStack(N,R))))
':-'(totalWeight(O,W,X,Y),(selfWeight(O,W2),setof(X,isLocated(X,O,0),IN),setof(Y,isLocated(Y,O,1),ON),'!',weightInObject(X,O,W3),weightOnObject(Y,O,W4),is(W,'+'('+'(W2,W3),W4))))
':-'(totalWeight(O,W,X,[]),(selfWeight(O,W2),setof(X,isLocated(X,O,0),IN),'!',weightInObject(X,O,W3),is(W,'+'(W2,W3))))
':-'(totalWeight(O,W,[],Y),(selfWeight(O,W2),setof(Y,isLocated(Y,O,1),ON),'!',weightOnObject(Y,O,W3),is(W,'+'(W2,W3))))
':-'(totalWeight(O,W,[],[]),selfWeight(O,W))
':-'(selfWeight(O,W),hasVariable(O,weight,W))
':-'(selfWeight(O,0),(isObject(O),not(hasVariable(O,weight,W))))
':-'(weightOnObject(L,O,W),(setof(X,isLocated(X,O,1),L),'!',weightOnObjectAux(L,O,W)))
':-'(weightOnObjectAux([H|T],O,W),(notMember(H,T),isLocated(H,O,1),'!',weightOnObjectAux(T,O,W3),totalWeight(H,W2,_1227,_1228),is(W,'+'(W2,W3))))
weightOnObjectAux(_1229,O,0)
':-'(weightInObject(L,O,W),(setof(X,isLocated(X,O,0),L),'!',weightInObjectAux(L,O,W)))
':-'(weightInObjectAux([H|T],O,W),(notMember(H,T),isLocated(H,O,0),'!',weightInObjectAux(T,O,W3),totalWeight(H,W2,_1241,_1242),is(W,'+'(W2,W3))))
weightInObjectAux(_1243,O,0)
':-'(weightOnObjectEquals(O,W),(weightOnObject(_1247,O,W2),'='(W2,W)))
':-'(weightOnObjectAtLeast(O,W),(weightOnObject(_1251,O,W2),'>='(W2,W)))
':-'(weightOnObjectAtMost(O,W),(weightOnObject(_1255,O,W2),'=<'(W2,W)))
isRoom(ruinsentrance)
isRoom(civilisation)
isRoom(columns)
hasProperty(smallblock,takeable)
hasProperty(smallblock,stable)
hasVariable(smallblock,weight,25)
isObject(smallblock)
volume(smallblock,25)
surface(smallblock,25)
surfaceUsed(smallblock,0)
isLocated(smallblock,columns,0)
isRoom(alterroom)
hasProperty(alter,stable)
isObject(alter)
volume(alter,1)
surface(alter,50)
surfaceUsed(alter,0)
isLocated(alter,alterroom,0)
isObject(pressureplate2)
volume(pressureplate2,1)
surface(pressureplate2,50)
surfaceUsed(pressureplate2,0)
isLocated(pressureplate2,alterroom,0)
isObject(pressureplate1)
volume(pressureplate1,1)
surface(pressureplate1,50)
isLocated(pressureplate1,alterroom,0)
hasProperty(watercontainer1,takeable)
hasVariable(watercontainer1,weight,5)
isObject(watercontainer1)
volume(watercontainer1,25)
capacity(watercontainer1,25)
capacityUsed(watercontainer1,0)
isLocated(watercontainer1,pressureplate1,1)
flag(container1filled,1)
isRoom(treasureroom)
hasProperty(chest,takeable)
hasProperty(chest,closablecontainer)
hasProperty(chest,locked)
hasVariable(chest,weight,25)
isClosed(chest,true)
isObject(chest)
volume(chest,50)
capacity(chest,50)
isLocated(chest,treasureroom,0)
hasProperty(treasure,takeable)
hasVariable(treasure,weight,25)
isObject(treasure)
volume(treasure,50)
isLocated(treasure,chest,0)
isRoom(storageroom)
hasProperty(cupboard,closablecontainer)
hasProperty(cupboard,stable)
isClosed(cupboard,true)
isObject(cupboard)
volume(cupboard,1)
capacity(cupboard,50)
surface(cupboard,50)
surfaceUsed(cupboard,0)
isLocated(cupboard,storageroom,0)
hasProperty(watercontainer2,takeable)
hasVariable(watercontainer2,weight,5)
isObject(watercontainer2)
volume(watercontainer2,25)
capacity(watercontainer2,25)
capacityUsed(watercontainer2,0)
isLocated(watercontainer2,cupboard,0)
flag(container2filled,0)
hasProperty(plank,takeable)
hasVariable(plank,weight,25)
isObject(plank)
volume(plank,50)
surface(plank,50)
surfaceUsed(plank,0)
isLocated(plank,storageroom,0)
isRoom(attic)
hasProperty(key,takeable)
hasVariable(key,weight,1)
isObject(key)
volume(key,10)
isLocated(key,attic,0)
isRoom(rockytunnel)
hasProperty(mediumblock,takeable)
hasProperty(mediumblock,stable)
hasVariable(mediumblock,weight,50)
isObject(mediumblock)
volume(mediumblock,50)
surface(mediumblock,50)
surfaceUsed(mediumblock,0)
isRoom(eastriver)
isObject(river)
volume(river,1)
isLocated(river,eastriver,0)
isObject(riverstilts)
volume(riverstilts,0)
surface(riverstilts,50)
surfaceUsed(riverstilts,0)
isLocated(riverstilts,river,0)
isRoom(waterfallcavern)
isObject(waterfall)
volume(waterfall,1)
below(waterfall,100)
belowUsed(waterfall,0)
isLocated(waterfall,waterfallcavern,0)
isRoom(westriver)
isRoom(ancientquarry)
hasProperty(largeblock,takeable)
hasProperty(largeblock,stable)
hasVariable(largeblock,weight,75)
isObject(largeblock)
volume(largeblock,75)
surface(largeblock,75)
surfaceUsed(largeblock,0)
isLocated(largeblock,ancientquarry,0)
surfaceUsed(pressureplate1,25)
capacityUsed(chest,50)
capacityUsed(cupboard,25)
isLocated(mediumblock,player,0)
isLocated(player,columns,0)

DEBUG: Querying: totalWeight(mediumblock,W,X,Y)
DEBUG: Solution: totalWeight(mediumblock,50,[],[]) - bindings: yes.
W / 50
X / []
Y / []

DEBUG: Querying: totalWeight(pressureplate2,W,X,Y)
DEBUG: Solution: totalWeight(pressureplate2,0,[],[]) - bindings: yes.
W / 0
X / []
Y / []

DEBUG: Querying: weightOnObject(X,pressureplate2,W)

======================================================================================
Processing user input: n
======================================================================================


DEBUG: PRSA: MOVE, PRSO: NORTH, PRSI: null

DEBUG: ATTEMPT TO PERFORM ACTION ON PRSI

DEBUG: FAILED TO PERFORM ACTION ON PRSI

DEBUG: ATTEMPT TO PERFORM ACTION ON PRSO

DEBUG: FAILED TO PERFORM ACTION ON PRSO

DEBUG: ATTEMPT TO PERFORM GENERIC ACTION ON PRSA
DEBUG: Corrected Verb: move

DEBUG: Removed clause isLocated(player,columns,0)

DEBUG: Adding clause isLocated(player,alterroom,0)
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate1,50), weightOnObjectAtLeast(pressureplate2,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate1,50)
DEBUG: QueryCond not satisfied since query: weightOnObjectAtLeast(pressureplate1,50) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate1,50), weightOnObjectAtLeast(pressureplate2,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate1,50)
DEBUG: QueryCond not satisfied since query: weightOnObjectAtLeast(pressureplate1,50) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [climbableStack(3,storageroom)]

DEBUG: Querying: climbableStack(3,storageroom)
DEBUG: QueryCond not satisfied since query: climbableStack(3,storageroom) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [isLocated(plank,riverstilts,1)]

DEBUG: Querying: isLocated(plank,riverstilts,1)
DEBUG: QueryCond not satisfied since query: isLocated(plank,riverstilts,1) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate1,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate1,50)
DEBUG: QueryCond not satisfied since query: weightOnObjectAtLeast(pressureplate1,50) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate2,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate2,50)
DEBUG: QueryCond not satisfied since query: weightOnObjectAtLeast(pressureplate2,50) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate1,50), weightOnObjectAtLeast(pressureplate2,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate1,50)
DEBUG: QueryCond not satisfied since query: weightOnObjectAtLeast(pressureplate1,50) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [isLocated(treasure,player,1)]

DEBUG: Querying: isLocated(treasure,player,1)
DEBUG: QueryCond not satisfied since query: isLocated(treasure,player,1) has no solutions

Knowledge Base:
':-'(notMember(_1069,[]),'!')
':-'(notMember(X,[Head|Tail]),('\='(X,Head),notMember(X,Tail)))
isObject(player)
capacity(player,2147483647)
capacityUsed(player,0)
':-'(inScope(A),(isObject(A),isLocated(A,B,_1075),isLocated(player,B,_1076),'!'))
':-'(inScope(A),(isObject(A),isLocated(A,B,0),hasProperty(B,closablecontainer),'!',isClosed(B,false),inScope(B)))
':-'(inScope(A),(isObject(A),isLocated(A,B,_1081),inScope(B)))
':-'(putIn(A,B),(inScope(A),inScope(B),'\='(A,B),isLocated(A,C,_1085),'\='(A,C),hasProperty(B,closablecontainer),'!',isClosed(B,false),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putIn(A,B),(inScope(A),inScope(B),'\='(A,B),isLocated(A,C,_1093),'\='(A,C),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putInIgnoreScope(A,B),('\='(A,B),isLocated(A,C,_1101),'\='(A,C),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putOn(A,B),(inScope(A),inScope(B),'\='(A,B),volume(A,X),surface(B,Y),surfaceUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putOnIgnoreScope(A,B),('\='(A,B),volume(A,X),surface(B,Y),surfaceUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putBelow(A,B),(inScope(A),inScope(B),'\='(A,B),volume(A,X),below(B,Y),belowUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putBelowIgnoreScope(A,B),('\='(A,B),volume(A,X),below(B,Y),belowUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(outOfScope(A),not(inScope(A)))
':-'(noCapacity(A),not(capacity(A,_1132)))
':-'(noSurface(A),not(surface(A,_1134)))
':-'(noBelow(A),not(below(A,_1136)))
':-'(cantFitCapacity(A,B),(volume(A,X),capacity(B,Y),capacityUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(cantFitSurface(A,B),(volume(A,X),surface(B,Y),surfaceUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(cantFitBelow(A,B),(volume(A,X),below(B,Y),belowUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(tooBigCapacity(A,B),(volume(A,X),capacity(B,Y),'>'(X,Y)))
':-'(tooBigSurface(A,B),(volume(A,X),surface(B,Y),'>'(X,Y)))
':-'(tooBigBelow(A,B),(volume(A,X),below(B,Y),'>'(X,Y)))
':-'(sameObject(A,B),'='(A,B))
':-'(notObject(A),not(isObject(A)))
':-'(targetClosed(A),(hasProperty(A,closablecontainer),isClosed(A,true)))
':-'(stableStack([O],1,R),(isRoom(R),isObject(O),isLocated(O,R,0),hasProperty(O,stable)))
':-'(stableStack([H1,H2|T],M,R),(isObject(H1),isLocated(H1,H2,1),hasProperty(H1,stable),stableStack([H2|T],N,R),is(M,'+'(N,1))))
':-'(stack([O],1,R),(isRoom(R),isObject(O),isLocated(O,R,0)))
':-'(stack([H1,H2|T],M,R),(isObject(H1),isLocated(H1,H2,1),stableStack([H2|T],N,R),is(M,'+'(N,1))))
':-'(climbableStack(N,R),stableStack(_1186,N,R))
':-'(notClimbableStackError(N,R),(stack(_1189,N,R),not(climbableStack(N,R))))
':-'(totalWeight(O,W,X,Y),(selfWeight(O,W2),setof(X,isLocated(X,O,0),IN),setof(Y,isLocated(Y,O,1),ON),'!',weightInObject(X,O,W3),weightOnObject(Y,O,W4),is(W,'+'('+'(W2,W3),W4))))
':-'(totalWeight(O,W,X,[]),(selfWeight(O,W2),setof(X,isLocated(X,O,0),IN),'!',weightInObject(X,O,W3),is(W,'+'(W2,W3))))
':-'(totalWeight(O,W,[],Y),(selfWeight(O,W2),setof(Y,isLocated(Y,O,1),ON),'!',weightOnObject(Y,O,W3),is(W,'+'(W2,W3))))
':-'(totalWeight(O,W,[],[]),selfWeight(O,W))
':-'(selfWeight(O,W),hasVariable(O,weight,W))
':-'(selfWeight(O,0),(isObject(O),not(hasVariable(O,weight,W))))
':-'(weightOnObject(L,O,W),(setof(X,isLocated(X,O,1),L),'!',weightOnObjectAux(L,O,W)))
':-'(weightOnObjectAux([H|T],O,W),(notMember(H,T),isLocated(H,O,1),'!',weightOnObjectAux(T,O,W3),totalWeight(H,W2,_1227,_1228),is(W,'+'(W2,W3))))
weightOnObjectAux(_1229,O,0)
':-'(weightInObject(L,O,W),(setof(X,isLocated(X,O,0),L),'!',weightInObjectAux(L,O,W)))
':-'(weightInObjectAux([H|T],O,W),(notMember(H,T),isLocated(H,O,0),'!',weightInObjectAux(T,O,W3),totalWeight(H,W2,_1241,_1242),is(W,'+'(W2,W3))))
weightInObjectAux(_1243,O,0)
':-'(weightOnObjectEquals(O,W),(weightOnObject(_1247,O,W2),'='(W2,W)))
':-'(weightOnObjectAtLeast(O,W),(weightOnObject(_1251,O,W2),'>='(W2,W)))
':-'(weightOnObjectAtMost(O,W),(weightOnObject(_1255,O,W2),'=<'(W2,W)))
isRoom(ruinsentrance)
isRoom(civilisation)
isRoom(columns)
hasProperty(smallblock,takeable)
hasProperty(smallblock,stable)
hasVariable(smallblock,weight,25)
isObject(smallblock)
volume(smallblock,25)
surface(smallblock,25)
surfaceUsed(smallblock,0)
isLocated(smallblock,columns,0)
isRoom(alterroom)
hasProperty(alter,stable)
isObject(alter)
volume(alter,1)
surface(alter,50)
surfaceUsed(alter,0)
isLocated(alter,alterroom,0)
isObject(pressureplate2)
volume(pressureplate2,1)
surface(pressureplate2,50)
surfaceUsed(pressureplate2,0)
isLocated(pressureplate2,alterroom,0)
isObject(pressureplate1)
volume(pressureplate1,1)
surface(pressureplate1,50)
isLocated(pressureplate1,alterroom,0)
hasProperty(watercontainer1,takeable)
hasVariable(watercontainer1,weight,5)
isObject(watercontainer1)
volume(watercontainer1,25)
capacity(watercontainer1,25)
capacityUsed(watercontainer1,0)
isLocated(watercontainer1,pressureplate1,1)
flag(container1filled,1)
isRoom(treasureroom)
hasProperty(chest,takeable)
hasProperty(chest,closablecontainer)
hasProperty(chest,locked)
hasVariable(chest,weight,25)
isClosed(chest,true)
isObject(chest)
volume(chest,50)
capacity(chest,50)
isLocated(chest,treasureroom,0)
hasProperty(treasure,takeable)
hasVariable(treasure,weight,25)
isObject(treasure)
volume(treasure,50)
isLocated(treasure,chest,0)
isRoom(storageroom)
hasProperty(cupboard,closablecontainer)
hasProperty(cupboard,stable)
isClosed(cupboard,true)
isObject(cupboard)
volume(cupboard,1)
capacity(cupboard,50)
surface(cupboard,50)
surfaceUsed(cupboard,0)
isLocated(cupboard,storageroom,0)
hasProperty(watercontainer2,takeable)
hasVariable(watercontainer2,weight,5)
isObject(watercontainer2)
volume(watercontainer2,25)
capacity(watercontainer2,25)
capacityUsed(watercontainer2,0)
isLocated(watercontainer2,cupboard,0)
flag(container2filled,0)
hasProperty(plank,takeable)
hasVariable(plank,weight,25)
isObject(plank)
volume(plank,50)
surface(plank,50)
surfaceUsed(plank,0)
isLocated(plank,storageroom,0)
isRoom(attic)
hasProperty(key,takeable)
hasVariable(key,weight,1)
isObject(key)
volume(key,10)
isLocated(key,attic,0)
isRoom(rockytunnel)
hasProperty(mediumblock,takeable)
hasProperty(mediumblock,stable)
hasVariable(mediumblock,weight,50)
isObject(mediumblock)
volume(mediumblock,50)
surface(mediumblock,50)
surfaceUsed(mediumblock,0)
isRoom(eastriver)
isObject(river)
volume(river,1)
isLocated(river,eastriver,0)
isObject(riverstilts)
volume(riverstilts,0)
surface(riverstilts,50)
surfaceUsed(riverstilts,0)
isLocated(riverstilts,river,0)
isRoom(waterfallcavern)
isObject(waterfall)
volume(waterfall,1)
below(waterfall,100)
belowUsed(waterfall,0)
isLocated(waterfall,waterfallcavern,0)
isRoom(westriver)
isRoom(ancientquarry)
hasProperty(largeblock,takeable)
hasProperty(largeblock,stable)
hasVariable(largeblock,weight,75)
isObject(largeblock)
volume(largeblock,75)
surface(largeblock,75)
surfaceUsed(largeblock,0)
isLocated(largeblock,ancientquarry,0)
surfaceUsed(pressureplate1,25)
capacityUsed(chest,50)
capacityUsed(cupboard,25)
isLocated(mediumblock,player,0)
isLocated(player,alterroom,0)

DEBUG: Querying: totalWeight(mediumblock,W,X,Y)
DEBUG: Solution: totalWeight(mediumblock,50,[],[]) - bindings: yes.
W / 50
X / []
Y / []

DEBUG: Querying: totalWeight(pressureplate2,W,X,Y)
DEBUG: Solution: totalWeight(pressureplate2,0,[],[]) - bindings: yes.
W / 0
X / []
Y / []

DEBUG: Querying: weightOnObject(X,pressureplate2,W)

======================================================================================
Processing user input: put block on right plate
======================================================================================

DEBUG: Pre-process input lemmas: [put, block, on, right, plate]
DEBUG: Pre-process input posTags: [VB, NNP, NNP, JJ, NN]
DEBUG: Removing conflicting synonym: pressure plate
DEBUG: Removing conflicting synonym: plate
DEBUG: Adding [right, plate] to matched objects
DEBUG: Adding 3 to matched indices
DEBUG: Adding [block] to matched objects
DEBUG: Adding 1 to matched indices
DEBUG: removeStart: [3, 1]
DEBUG: removeEnd: [4, 1]
DEBUG: Pre-processed: put item2 on item1
DEBUG: Lemmas: [put, item, on, item]
DEBUG: Verb found: PUT ITEM ON ITEM
DEBUG: PRSA set to: PUT ITEM ON ITEM

DEBUG: PRSA: PUT ITEM ON ITEM, PRSO: MEDIUMBLOCK, PRSI: PRESSUREPLATE2

DEBUG: ATTEMPT TO PERFORM ACTION ON PRSI

DEBUG: FAILED TO PERFORM ACTION ON PRSI

DEBUG: ATTEMPT TO PERFORM ACTION ON PRSO

DEBUG: FAILED TO PERFORM ACTION ON PRSO

DEBUG: ATTEMPT TO PERFORM GENERIC ACTION ON PRSA
DEBUG: Corrected Verb: place on

DEBUG: FAILED TO PERFORM GENERIC ACTION USING PRSA

DEBUG: ATTEMPT TO PERFORM ENHANCED ACTION ON PRSA
DEBUG: Trying to place on

DEBUG: Querying: putOn(mediumblock,pressureplate2)
DEBUG: Solution: putOn(mediumblock,pressureplate2) - bindings: yes.

DEBUG: Querying: isObject(player)
DEBUG: Solution: isObject(player) - bindings: yes.

DEBUG: Querying: capacityUsed(player,X)
DEBUG: Solution: capacityUsed(player,0) - bindings: yes.
X / 0

DEBUG: Removed clause capacityUsed(player,0)

DEBUG: Adding clause capacityUsed(player,-50)

DEBUG: Querying: isObject(pressureplate2)
DEBUG: Solution: isObject(pressureplate2) - bindings: yes.

DEBUG: Querying: surfaceUsed(pressureplate2,X)
DEBUG: Solution: surfaceUsed(pressureplate2,0) - bindings: yes.
X / 0

DEBUG: Removed clause surfaceUsed(pressureplate2,0)

DEBUG: Adding clause surfaceUsed(pressureplate2,50)

DEBUG: Removed clause isLocated(mediumblock,player,0)

DEBUG: Adding clause isLocated(mediumblock,pressureplate2,1)
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [climbableStack(3,storageroom)]

DEBUG: Querying: climbableStack(3,storageroom)
DEBUG: QueryCond not satisfied since query: climbableStack(3,storageroom) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [isLocated(plank,riverstilts,1)]

DEBUG: Querying: isLocated(plank,riverstilts,1)
DEBUG: QueryCond not satisfied since query: isLocated(plank,riverstilts,1) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate1,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate1,50)
DEBUG: QueryCond not satisfied since query: weightOnObjectAtLeast(pressureplate1,50) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate2,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate2,50)
DEBUG: Solution: weightOnObjectAtLeast(pressureplate2,50) - bindings: yes.
DEBUG: QueryCond satisfied
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [weightOnObjectAtLeast(pressureplate1,50), weightOnObjectAtLeast(pressureplate2,50)]

DEBUG: Querying: weightOnObjectAtLeast(pressureplate1,50)
DEBUG: QueryCond not satisfied since query: weightOnObjectAtLeast(pressureplate1,50) has no solutions
DEBUG: Checking QueryCond: Check that all of the following queries are satisfied: [isLocated(treasure,player,1)]

DEBUG: Querying: isLocated(treasure,player,1)
DEBUG: QueryCond not satisfied since query: isLocated(treasure,player,1) has no solutions

Knowledge Base:
':-'(notMember(_1069,[]),'!')
':-'(notMember(X,[Head|Tail]),('\='(X,Head),notMember(X,Tail)))
isObject(player)
capacity(player,2147483647)
':-'(inScope(A),(isObject(A),isLocated(A,B,_1075),isLocated(player,B,_1076),'!'))
':-'(inScope(A),(isObject(A),isLocated(A,B,0),hasProperty(B,closablecontainer),'!',isClosed(B,false),inScope(B)))
':-'(inScope(A),(isObject(A),isLocated(A,B,_1081),inScope(B)))
':-'(putIn(A,B),(inScope(A),inScope(B),'\='(A,B),isLocated(A,C,_1085),'\='(A,C),hasProperty(B,closablecontainer),'!',isClosed(B,false),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putIn(A,B),(inScope(A),inScope(B),'\='(A,B),isLocated(A,C,_1093),'\='(A,C),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putInIgnoreScope(A,B),('\='(A,B),isLocated(A,C,_1101),'\='(A,C),volume(A,X),capacity(B,Y),capacityUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putOn(A,B),(inScope(A),inScope(B),'\='(A,B),volume(A,X),surface(B,Y),surfaceUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putOnIgnoreScope(A,B),('\='(A,B),volume(A,X),surface(B,Y),surfaceUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putBelow(A,B),(inScope(A),inScope(B),'\='(A,B),volume(A,X),below(B,Y),belowUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(putBelowIgnoreScope(A,B),('\='(A,B),volume(A,X),below(B,Y),belowUsed(B,Z),is(Y2,'+'(Y,1)),'<'('+'(X,Z),Y2)))
':-'(outOfScope(A),not(inScope(A)))
':-'(noCapacity(A),not(capacity(A,_1132)))
':-'(noSurface(A),not(surface(A,_1134)))
':-'(noBelow(A),not(below(A,_1136)))
':-'(cantFitCapacity(A,B),(volume(A,X),capacity(B,Y),capacityUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(cantFitSurface(A,B),(volume(A,X),surface(B,Y),surfaceUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(cantFitBelow(A,B),(volume(A,X),below(B,Y),belowUsed(B,Z),'>'('+'(X,Z),Y)))
':-'(tooBigCapacity(A,B),(volume(A,X),capacity(B,Y),'>'(X,Y)))
':-'(tooBigSurface(A,B),(volume(A,X),surface(B,Y),'>'(X,Y)))
':-'(tooBigBelow(A,B),(volume(A,X),below(B,Y),'>'(X,Y)))
':-'(sameObject(A,B),'='(A,B))
':-'(notObject(A),not(isObject(A)))
':-'(targetClosed(A),(hasProperty(A,closablecontainer),isClosed(A,true)))
':-'(stableStack([O],1,R),(isRoom(R),isObject(O),isLocated(O,R,0),hasProperty(O,stable)))
':-'(stableStack([H1,H2|T],M,R),(isObject(H1),isLocated(H1,H2,1),hasProperty(H1,stable),stableStack([H2|T],N,R),is(M,'+'(N,1))))
':-'(stack([O],1,R),(isRoom(R),isObject(O),isLocated(O,R,0)))
':-'(stack([H1,H2|T],M,R),(isObject(H1),isLocated(H1,H2,1),stableStack([H2|T],N,R),is(M,'+'(N,1))))
':-'(climbableStack(N,R),stableStack(_1186,N,R))
':-'(notClimbableStackError(N,R),(stack(_1189,N,R),not(climbableStack(N,R))))
':-'(totalWeight(O,W,X,Y),(selfWeight(O,W2),setof(X,isLocated(X,O,0),IN),setof(Y,isLocated(Y,O,1),ON),'!',weightInObject(X,O,W3),weightOnObject(Y,O,W4),is(W,'+'('+'(W2,W3),W4))))
':-'(totalWeight(O,W,X,[]),(selfWeight(O,W2),setof(X,isLocated(X,O,0),IN),'!',weightInObject(X,O,W3),is(W,'+'(W2,W3))))
':-'(totalWeight(O,W,[],Y),(selfWeight(O,W2),setof(Y,isLocated(Y,O,1),ON),'!',weightOnObject(Y,O,W3),is(W,'+'(W2,W3))))
':-'(totalWeight(O,W,[],[]),selfWeight(O,W))
':-'(selfWeight(O,W),hasVariable(O,weight,W))
':-'(selfWeight(O,0),(isObject(O),not(hasVariable(O,weight,W))))
':-'(weightOnObject(L,O,W),(setof(X,isLocated(X,O,1),L),'!',weightOnObjectAux(L,O,W)))
':-'(weightOnObjectAux([H|T],O,W),(notMember(H,T),isLocated(H,O,1),'!',weightOnObjectAux(T,O,W3),totalWeight(H,W2,_1227,_1228),is(W,'+'(W2,W3))))
weightOnObjectAux(_1229,O,0)
':-'(weightInObject(L,O,W),(setof(X,isLocated(X,O,0),L),'!',weightInObjectAux(L,O,W)))
':-'(weightInObjectAux([H|T],O,W),(notMember(H,T),isLocated(H,O,0),'!',weightInObjectAux(T,O,W3),totalWeight(H,W2,_1241,_1242),is(W,'+'(W2,W3))))
weightInObjectAux(_1243,O,0)
':-'(weightOnObjectEquals(O,W),(weightOnObject(_1247,O,W2),'='(W2,W)))
':-'(weightOnObjectAtLeast(O,W),(weightOnObject(_1251,O,W2),'>='(W2,W)))
':-'(weightOnObjectAtMost(O,W),(weightOnObject(_1255,O,W2),'=<'(W2,W)))
isRoom(ruinsentrance)
isRoom(civilisation)
isRoom(columns)
hasProperty(smallblock,takeable)
hasProperty(smallblock,stable)
hasVariable(smallblock,weight,25)
isObject(smallblock)
volume(smallblock,25)
surface(smallblock,25)
surfaceUsed(smallblock,0)
isLocated(smallblock,columns,0)
isRoom(alterroom)
hasProperty(alter,stable)
isObject(alter)
volume(alter,1)
surface(alter,50)
surfaceUsed(alter,0)
isLocated(alter,alterroom,0)
isObject(pressureplate2)
volume(pressureplate2,1)
surface(pressureplate2,50)
isLocated(pressureplate2,alterroom,0)
isObject(pressureplate1)
volume(pressureplate1,1)
surface(pressureplate1,50)
isLocated(pressureplate1,alterroom,0)
hasProperty(watercontainer1,takeable)
hasVariable(watercontainer1,weight,5)
isObject(watercontainer1)
volume(watercontainer1,25)
capacity(watercontainer1,25)
capacityUsed(watercontainer1,0)
isLocated(watercontainer1,pressureplate1,1)
flag(container1filled,1)
isRoom(treasureroom)
hasProperty(chest,takeable)
hasProperty(chest,closablecontainer)
hasProperty(chest,locked)
hasVariable(chest,weight,25)
isClosed(chest,true)
isObject(chest)
volume(chest,50)
capacity(chest,50)
isLocated(chest,treasureroom,0)
hasProperty(treasure,takeable)
hasVariable(treasure,weight,25)
isObject(treasure)
volume(treasure,50)
isLocated(treasure,chest,0)
isRoom(storageroom)
hasProperty(cupboard,closablecontainer)
hasProperty(cupboard,stable)
isClosed(cupboard,true)
isObject(cupboard)
volume(cupboard,1)
capacity(cupboard,50)
surface(cupboard,50)
surfaceUsed(cupboard,0)
isLocated(cupboard,storageroom,0)
hasProperty(watercontainer2,takeable)
hasVariable(watercontainer2,weight,5)
isObject(watercontainer2)
volume(watercontainer2,25)
capacity(watercontainer2,25)
capacityUsed(watercontainer2,0)
isLocated(watercontainer2,cupboard,0)
flag(container2filled,0)
hasProperty(plank,takeable)
hasVariable(plank,weight,25)
isObject(plank)
volume(plank,50)
surface(plank,50)
surfaceUsed(plank,0)
isLocated(plank,storageroom,0)
isRoom(attic)
hasProperty(key,takeable)
hasVariable(key,weight,1)
isObject(key)
volume(key,10)
isLocated(key,attic,0)
isRoom(rockytunnel)
hasProperty(mediumblock,takeable)
hasProperty(mediumblock,stable)
hasVariable(mediumblock,weight,50)
isObject(mediumblock)
volume(mediumblock,50)
surface(mediumblock,50)
surfaceUsed(mediumblock,0)
isRoom(eastriver)
isObject(river)
volume(river,1)
isLocated(river,eastriver,0)
isObject(riverstilts)
volume(riverstilts,0)
surface(riverstilts,50)
surfaceUsed(riverstilts,0)
isLocated(riverstilts,river,0)
isRoom(waterfallcavern)
isObject(waterfall)
volume(waterfall,1)
below(waterfall,100)
belowUsed(waterfall,0)
isLocated(waterfall,waterfallcavern,0)
isRoom(westriver)
isRoom(ancientquarry)
hasProperty(largeblock,takeable)
hasProperty(largeblock,stable)
hasVariable(largeblock,weight,75)
isObject(largeblock)
volume(largeblock,75)
surface(largeblock,75)
surfaceUsed(largeblock,0)
isLocated(largeblock,ancientquarry,0)
surfaceUsed(pressureplate1,25)
capacityUsed(chest,50)
capacityUsed(cupboard,25)
isLocated(player,alterroom,0)
capacityUsed(player,-50)
surfaceUsed(pressureplate2,50)
isLocated(mediumblock,pressureplate2,1)

DEBUG: Querying: totalWeight(mediumblock,W,X,Y)
DEBUG: Solution: totalWeight(mediumblock,50,[],[]) - bindings: yes.
W / 50
X / []
Y / []

DEBUG: Querying: totalWeight(pressureplate2,W,X,Y)
DEBUG: Solution: totalWeight(pressureplate2,50,[],[mediumblock]) - bindings: yes.
W / 50
X / []
Y / [mediumblock]

DEBUG: Querying: weightOnObject(X,pressureplate2,W)
DEBUG: Solution: weightOnObject([mediumblock],pressureplate2,50) - bindings: yes.
X / [mediumblock]
W / 50
